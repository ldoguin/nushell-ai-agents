{
  "openapi": "3.0.2",
  "info": {
    "title": "Couchbase Capella Management API",
    "version": "v4.0",
    "description": "The Couchbase Capella Management API provides a set of REST APIs for creating and managing Capella instances.\nIt enables users to perform operations such as creating new Capella instances, managing their configurations, and interacting with the Capella services.\nThis API documentation specifies the endpoints, request and response formats, and authentication requirements for seamless integration with Couchbase Capella.\n\nTo access the Management API, you need an API key.\nTo create an initial bootstrap API key you must use the Capella UI.\nOnce you have created an initial bootstrap API key, you can use the Management API itself to create further API keys.\nTo learn more, see [Get Started with the Management API v4.0](https://docs.couchbase.com/cloud/management-api-guide/management-api-start.html).\n\nFor a history of updates to the Management API, see [Management API v4.0 Change Log](https://docs.couchbase.com/cloud/management-api-guide/management-api-log.html).\n\n**API Base URL:**\n\n`https://cloudapi.cloud.couchbase.com`\n\n[Back to Management API v4.0 Documentation](https://docs.couchbase.com/cloud/management-api-guide/management-api-intro.html)\n"
  },
  "servers": [
    {
      "url": "https://cloudapi.cloud.couchbase.com"
    }
  ],
  "security": [
    {
      "token": []
    }
  ],
  "tags": [
    {
      "name": "Alert Integration",
      "description": "Couchbase Capella supports sending Capella alert notifications to the most common service like ServiceNow.\n"
    },
    {
      "name": "Allowed CIDRs (App Services)",
      "description": "App Services only allow trusted IP addresses to connect and use its REST APIs.\nEach App Service has a configurable Allowed IP list that can include up to 75 entries.\nEach entry can be a single IP address or an IP address space.\nAny IP address you add to this list can have a user-specified expiration time for temporary access, or be permanent.\nCapella automatically denies any connection attempts to and from an IP not in the allowed IP list.\n"
    },
    {
      "name": "Allowed CIDRs (Cluster)",
      "description": "Couchbase Capella only allows trusted IP addresses to connect to databases.\nEach database has a configurable Allowed IP list that can include up to 75 entries.\nEach entry can be a single IP address or an IP address space.\nAny IP address you add to this list can have a user-specified expiration time for temporary access, or be permanent.\nCapella automatically denies any connection attempts to and from an IP not in the allowed IP list.\n"
    },
    {
      "name": "Api Keys",
      "description": "Couchbase Capella Management API uses a Bearer token mechanism for authentication; each call to the Management API has to be authenticated by API key."
    },
    {
      "name": "App Endpoints",
      "description": "App Endpoints represent instances of mobile applications on App Services. Each App Endpoint is linked to one bucket and synchronizes data to a set of\nlinked collections. Users can configure App Endpoints, including setting the Access Control function, Import Filter and OpenID Connect (OIDC) authentication configuration.\n"
    },
    {
      "name": "App Services",
      "description": "App Services is a fully managed application backend designed to provide data synchronization between mobile or IoT applications running Couchbase Lite and your Couchbase Capella database.\n"
    },
    {
      "name": "App Services Audit Logging",
      "description": "Users can configure audit log support on Capella App Services and can export audit logs from cloud blob storage to an AWS S3 bucket. Users can retrieve audit logs from a pre-signed download URL. Logs are retained for 30 days."
    },
    {
      "name": "Audit Logs",
      "description": "Users can configure audit log support on Capella database and can export audit logs from cloud blob storage to an AWS S3 bucket. Users can retrieve audit logs from a pre-signed download URL. Logs are retained for 30 days.\n"
    },
    {
      "name": "Backup Schedule (Bucket)",
      "description": "Couchbase supports a robust scheduled backup and retention time policy as part of an overall disaster recovery plan for production data.\nCouchbase Capella supports scheduled and on-demand backups of bucket data.\nA backup can be restored to the same database where it was created or another database in the same organization.\nOn setting up a backup schedule, the bucket automatically backs up the bucket based on the chosen schedule.\n"
    },
    {
      "name": "Backups & Restore (Bucket)",
      "description": "Couchbase supports a robust scheduled backup and retention time policy as part of an overall disaster recovery plan for production data.\nCouchbase Capella supports scheduled and on-demand backups of bucket data.\nA backup can be restored to the same database where it was created or another database in the same organization.\nAn on-demand backup of a bucket is always a Full backup.\nCapella schedules on-demand backup to start immediately.\n"
    },
    {
      "name": "Buckets, Scopes, & Collections",
      "description": "A bucket is the fundamental space for storing data in Couchbase Capella.\nScopes and Collections are logical containers within a bucket and a way for organizing data within buckets.\nA scope is a mechanism for the grouping of multiple collections. A collection is a data container for related documents.\n"
    },
    {
      "name": "CMEK",
      "description": "The CMEK (Customer Managed Encryption Keys) endpoints facilitate the management of encryption keys used by clusters for data encryption.\nThey allow organizations to register, list, retrieve, rotate, and delete the metadata associated with their own encryption keys within Capella.\nThis suite of endpoints ensures that organizations have full control over the lifecycle of their keys, enhancing security and compliance by allowing encryption keys that are managed in external key management services like AWS KMS or GCP KMS to be used within the organization's clusters.\n"
    },
    {
      "name": "Certificates",
      "description": "Couchbase Capella supports the use of x.509 certificates, for clients and servers.\nThis ensures that only approved users, applications, machines, and endpoints have access to system resources.\nConsequently, the mechanism can be used by Couchbase SDK clients to access Couchbase Services, and by source clusters that use XDCR to replicate data to target clusters.\nClients can verify the identity of Couchbase Capella, thereby ensuring that they are not exchanging data with a rogue entity.\n"
    },
    {
      "name": "Cloud Snapshot Backups & Restore",
      "description": "Couchbase supports a robust scheduled backup and retention time policy as part of an overall disaster recovery plan for production data.\nCouchbase Capella supports scheduled and on-demand backups of cloud snapshot data.\nA backup can be restored to the same database where it was created or another database in the same organization.\nA backup can also be cloned to create a new database with the same specifications as the backed up cluster in the same organization.\nAn on-demand backup of a bucket is always a Full backup.\nCapella schedules on-demand backup to start immediately.\n"
    },
    {
      "name": "Cloud Snapshot Backups Schedule",
      "description": "Couchbase supports a robust scheduled backup and retention time policy as part of an overall disaster recovery plan for production data.\nCouchbase Capella supports scheduled and on-demand backups of cloud snapshot data.\nA backup can be restored to the same database where it was created or another database in the same organization.\nOn setting up a backup schedule, the bucket automatically backs up the bucket based on the chosen schedule.\n"
    },
    {
      "name": "Clusters",
      "description": "A Couchbase cluster consists of one or more instances of Couchbase Capella, each running on an independent node.\nData and services are shared across the cluster.\nA cluster may be referred to as a \"database\" in the documentation and in the Couchbase Capella user interface.\n"
    },
    {
      "name": "Database Credentials",
      "description": "Database credentials provide programmatic and application-level access to data on a database.\nOnly database credentials can access data.\n"
    },
    {
      "name": "Events",
      "description": "Events represent a trail of actions that users performs within Capella at an organization or project level\n"
    },
    {
      "name": "Free Tier",
      "description": "Endpoints to manage resources that are available with free tier plan.  These resources are buckets, clusters and app services.\n"
    },
    {
      "name": "Network Peers",
      "description": "Network Peering enables you to configure a secure private network connection between the Virtual Private Cloud (VPC) hosting your applications and the VPC of your Couchbase Capella database.\nYou can set a network peering connection from a Couchbase Capella database hosted with Amazon Web Services (AWS), Google Cloud (GCP) or Azure.\n"
    },
    {
      "name": "On/Off Schedule",
      "description": "The On/Off Schedule endpoint enables you to schedule when your provisioned database should turn on or off to save costs.\nTurning off your database only turns off the compute;\nall of your data, schema (buckets, scopes, and collections), and indexes remain, as well as your cluster configuration, including users and allow lists.\nWhen you turn your provisioned database off, you will be charged the OFF amount for the database.\nYou can turn the cluster and any linked app services on or off on demand using the [cluster API](https://docs.couchbase.com/cloud/management-api-reference/index.html#tag/clusters).\n"
    },
    {
      "name": "Organizations",
      "description": "Couchbase Capella uses an ordered hierarchy to help you keep all of your data organized and securely accessible.\nThe entity at the top of the hierarchy is called an organization.\nEverything you do in Capella, whether it's creating a cluster or managing billing, happens within the scope of an organization.\n"
    },
    {
      "name": "Private Endpoint Service",
      "description": "Access your Capella cluster from your cloud provider's private network.\n"
    },
    {
      "name": "Projects",
      "description": "Projects contain and allow access to Couchbase databases.\nProjects are used to organize and manage groups of Couchbase databases within organizations.\nAn organization can contain any number of projects, and a project can contain any number of databases.\n"
    },
    {
      "name": "Query Indexes",
      "description": "Used to manage primary and secondary indexes on your Capella cluster.  You can CREATE/ALTER/DROP/BUILD indexes.\n\nIt is recommended to use deferred index builds, especially for larger indexes. When creating indexes in bulk, we do not recommend sending requests to create all of them at once. Instead, we strongly recommend creating indexes in batches of 100 or less.\n"
    },
    {
      "name": "Sample Bucket",
      "description": "The sampleBucket endpoint lets users easily create a bucket filled with sample data.\nThis is a quick way for users to try out features and learn how things work with ready-to-use data.\n"
    },
    {
      "name": "Users",
      "description": "To access an organization, your Couchbase Capella user account must be added to it.\nAccounts are added to an organization using email invitations sent from Capella by a user with the Organization Owner organization role.\nAll organization users are given one or more organization roles that define what they can view and manage in their organization.\n"
    }
  ],
  "paths": {
    "/v4/organizations/{organizationId}/cloudAccounts": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Cloud Accounts",
        "description": "Fetches the cloud account ID associated with the organization. Use this account ID when adding CMEK to other AWS databases in your organization.\n\nTo learn more, see [CMEK at Rest](https://docs.couchbase.com/cloud/security/cmek.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n  - Organization Owner\n  - Project Creator\n  - Organization Member\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "CMEK"
        ],
        "operationId": "getCloudAccounts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "gcp-capella-project",
                    "aws-capella-account",
                    "azure-capella-subscription"
                  ],
                  "properties": {
                    "gcp-capella-project": {
                      "type": "string",
                      "example": "MyApp-Prod-Project",
                      "description": "The GCP project name."
                    },
                    "aws-capella-account": {
                      "type": "string",
                      "example": "MyApp-Prod-Project",
                      "description": "The AWS account ID."
                    },
                    "azure-capella-subscription": {
                      "type": "string",
                      "example": "MyApp-Prod-Project",
                      "description": "The Azure subscription name."
                    }
                  }
                }
              }
            },
            "description": "Successfully fetched the cloud account ID associated with the organization."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/apikeys": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create API Key",
        "description": "Creates a new API key under an organization.\n\nOrganization Owners can create Organization and Project scoped API keys.\n\nProject Owner and Project Creator can create project scoped keys.\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Api Keys"
        ],
        "operationId": "postOrganizationAPIKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "organizationRoles"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the API key.\n",
                    "example": "Production"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the API key.\n",
                    "example": "API key to manage production Capella Cluster.",
                    "default": ""
                  },
                  "expiry": {
                    "type": "number",
                    "format": "float",
                    "default": 180,
                    "description": "Expiry of the API key in number of days.\nIf set to -1, the token will not expire.\n"
                  },
                  "allowedCIDRs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "0.0.0.0/0"
                    ],
                    "description": "List of inbound CIDRs for the API key.\nThe system making a request must come from one of the allowed CIDRs.\n",
                    "default": [
                      "0.0.0.0/0"
                    ]
                  },
                  "organizationRoles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "organizationOwner",
                        "organizationMember",
                        "projectCreator"
                      ],
                      "example": "organizationMember",
                      "description": "Organization roles assigned to the API key.\n\nTo learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n"
                    }
                  },
                  "resources": {
                    "type": "array",
                    "description": "Resources are the resource level permissions associated with the API key.\n\nTo learn more about Organization Roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "roles"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "default": "project",
                          "description": "Type of the resource.\n"
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000",
                          "description": "ID of the project.\n"
                        },
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "projectOwner",
                              "projectManager",
                              "projectViewer",
                              "projectDataReaderWriter",
                              "projectDataReader"
                            ]
                          },
                          "example": [
                            "projectDataReaderWriter",
                            "projectManager"
                          ],
                          "description": "Project Roles associated with the API key.\n\nTo learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n"
                        }
                      }
                    },
                    "default": []
                  }
                }
              },
              "examples": {
                "createOrganizationOwnerAPIKey": {
                  "value": {
                    "name": "Organization Owner API Key",
                    "description": "Creates an API key with a Organization Owner role.",
                    "expiry": 720,
                    "allowedCIDRs": [
                      "8.8.8.8/32"
                    ],
                    "organizationRoles": [
                      "organizationOwner"
                    ],
                    "resources": []
                  }
                },
                "createProjectOwnerAPIKey": {
                  "value": {
                    "name": "Project Owner API Key",
                    "description": "Creates an API key with a Project Owner role.",
                    "expiry": 720,
                    "allowedCIDRs": [
                      "8.8.8.8/32"
                    ],
                    "organizationRoles": [
                      "organizationMember"
                    ],
                    "resources": [
                      {
                        "id": "ffffffff-aaaa-1414-eeee-000000000000",
                        "roles": [
                          "projectOwner"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created an API key under an organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "token"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "IS9DrRsw4KWFS72Zhbj4xmhllHvPcdCL",
                      "description": "The id is a unique identifier for an apiKey.\n"
                    },
                    "token": {
                      "type": "string",
                      "example": "QktxVUtFU1dKV1FlMmxwbzJBYXdnTVlRemFZdlRDZTg6eFh4dzU4JUYjekJVYWZPY3lqdUwwYkJoTjZSTmlzRWFIRHF0b1h4a08yazBpQjJ1bms1OW4yTUhAenRib3IhVQ==",
                      "description": "The Token is a confidential piece of information that is used to authorize requests made to v4 endpoints.\n"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List API keys",
        "description": "Lists all the API keys under an organization.\n\nOrganization Owners can list all the API keys inside the Organization.\n\nOrganization Members and Project Creators can list all the Project scoped API key for which they are Project Owner.\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Api Keys"
        ],
        "operationId": "listOrganizationAPIKeys",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **name**, **expiry**, **description**.",
            "example": [
              "name"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed all the apikeys under an organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "description",
                          "expiry",
                          "allowedCIDRs",
                          "organizationRoles",
                          "resources",
                          "audit"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "IS9DrRsw4KWFS72Zhbj4xmhllHvPcdCL",
                            "description": "The id is a unique identifier for an apiKey.\n"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the API key.\n",
                            "example": "Production"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description for the API key.\n",
                            "example": "API key to manage production Capella Cluster.",
                            "default": ""
                          },
                          "expiry": {
                            "type": "number",
                            "format": "float",
                            "default": 180,
                            "description": "Expiry of the API key in number of days.\nIf set to -1, the token will not expire.\n"
                          },
                          "allowedCIDRs": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "0.0.0.0/0"
                            ],
                            "description": "List of inbound CIDRs for the API key.\nThe system making a request must come from one of the allowed CIDRs.\n",
                            "default": [
                              "0.0.0.0/0"
                            ]
                          },
                          "organizationRoles": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "organizationOwner",
                                "organizationMember",
                                "projectCreator"
                              ],
                              "example": "organizationMember",
                              "description": "Organization roles assigned to the API key.\n\nTo learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n"
                            }
                          },
                          "resources": {
                            "type": "array",
                            "description": "Resources are the resource level permissions associated with the API key.\n\nTo learn more about Organization Roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "roles"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "default": "project",
                                  "description": "Type of the resource.\n"
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ffffffff-aaaa-1414-eeee-000000000000",
                                  "description": "ID of the project.\n"
                                },
                                "roles": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "projectOwner",
                                      "projectManager",
                                      "projectViewer",
                                      "projectDataReaderWriter",
                                      "projectDataReader"
                                    ]
                                  },
                                  "example": [
                                    "projectDataReaderWriter",
                                    "projectManager"
                                  ],
                                  "description": "Project Roles associated with the API key.\n\nTo learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n"
                                }
                              }
                            },
                            "default": []
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/apikeys/{ApiKeyId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "ApiKeyId",
          "description": "The ID (Access key) of the API key.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "ffffffffaaaa1414eeee000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get API Key",
        "description": "Fetches the details of the given API key under an organization.\n\nOrganization Owners can get any API key inside the Organization.\n\nOrganization Members and Project Creator can get any Project scoped API key for which they are Project Owner.\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Api Keys"
        ],
        "operationId": "getOrganizationAPIKeyByAccessKey",
        "responses": {
          "200": {
            "description": "Successfully fetched the API key by its Access key.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "description",
                    "expiry",
                    "allowedCIDRs",
                    "organizationRoles",
                    "resources",
                    "audit"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "IS9DrRsw4KWFS72Zhbj4xmhllHvPcdCL",
                      "description": "The id is a unique identifier for an apiKey.\n"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the API key.\n",
                      "example": "Production"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the API key.\n",
                      "example": "API key to manage production Capella Cluster.",
                      "default": ""
                    },
                    "expiry": {
                      "type": "number",
                      "format": "float",
                      "default": 180,
                      "description": "Expiry of the API key in number of days.\nIf set to -1, the token will not expire.\n"
                    },
                    "allowedCIDRs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "0.0.0.0/0"
                      ],
                      "description": "List of inbound CIDRs for the API key.\nThe system making a request must come from one of the allowed CIDRs.\n",
                      "default": [
                        "0.0.0.0/0"
                      ]
                    },
                    "organizationRoles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "organizationOwner",
                          "organizationMember",
                          "projectCreator"
                        ],
                        "example": "organizationMember",
                        "description": "Organization roles assigned to the API key.\n\nTo learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n"
                      }
                    },
                    "resources": {
                      "type": "array",
                      "description": "Resources are the resource level permissions associated with the API key.\n\nTo learn more about Organization Roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "roles"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "project",
                            "description": "Type of the resource.\n"
                          },
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "ID of the project.\n"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "projectOwner",
                                "projectManager",
                                "projectViewer",
                                "projectDataReaderWriter",
                                "projectDataReader"
                              ]
                            },
                            "example": [
                              "projectDataReaderWriter",
                              "projectManager"
                            ],
                            "description": "Project Roles associated with the API key.\n\nTo learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n"
                          }
                        }
                      },
                      "default": []
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "createOrganizationOwnerAPIKey": {
                    "value": {
                      "id": "IS9DrRsw4KWFS72Zhbj4xmhllHvPcdCL",
                      "name": "Organization Owner API Key",
                      "description": "Creates an API key with an Organization Owner role.",
                      "expiry": 720,
                      "allowedCIDRs": [
                        "8.8.8.8/32"
                      ],
                      "organizationRoles": [
                        "organizationOwner"
                      ],
                      "resources": [],
                      "audit": {
                        "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "createdAt": "2021-09-01T12:34:56Z",
                        "modifiedBy": "",
                        "modifiedAt": "2021-09-01T12:34:56Z",
                        "version": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete API Key",
        "description": "Deletes the given API key under an organization.\n\nOrganization Owners can delete any API key inside the Organization.\n\nOrganization Members and Project Creator can delete any Project scoped API key for which they are Project Owner.\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Api Keys"
        ],
        "operationId": "deleteOrganizationAPIKey",
        "responses": {
          "204": {
            "description": "Successfully deleted the API key by its Access key."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/apikeys/{ApiKeyId}/rotate": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "ApiKeyId",
          "description": "The ID (Access key) of the API key.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "ffffffffaaaa1414eeee000000000000"
          }
        }
      ],
      "post": {
        "summary": "Rotate API Key",
        "description": "Rotate the secret of a given API key under an organization.\n\nOrganization Owners can rotate any API key inside the Organization.\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Api Keys"
        ],
        "operationId": "postOrganizationAPIKeyRotate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "secret": {
                    "type": "string",
                    "description": "A secret associated with API key. One has to follow the secret key policy, such as allowed characters and a length of 64 characters. \nIf this field is left empty, a secret will be auto-generated.\n",
                    "example": "jawuXxSXYaWdr@uSSphmV1aJ4siKKcHHXnhhtbE8h8H!O2nbIQJ62M40stDATiBp"
                  }
                }
              },
              "examples": {
                "rotateOrganizationOwnerAPIKey": {
                  "value": {
                    "secret": "GaC4FQLCoUqoKUMBvl6BgRK1Ivqu5yF8OkDBhnP%#CH%S4T@bTVUdP#rY#VSicbx"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully rotated the API key.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "secretKey"
                  ],
                  "properties": {
                    "secretKey": {
                      "type": "string",
                      "example": "GaC4FQLCoUqoKUMBvl6BgRK1Ivqu5yF8OkDBhnP%#CH%S4T@bTVUdP#rY#VSicbx",
                      "description": "The Secret key is a confidential piece of information that is paired with the Access key.\nThe API key is made of an Access key and a Secret key.\n"
                    }
                  }
                },
                "examples": {
                  "rotateOrganizationOwnerAPIKey": {
                    "value": {
                      "secretKey": "GaC4FQLCoUqoKUMBvl6BgRK1Ivqu5yF8OkDBhnP%#CH%S4T@bTVUdP#rY#VSicbx"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create Project",
        "description": "Creates a new project under the organization.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Creator\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Projects"
        ],
        "operationId": "postProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the project (up to 128 characters).",
                    "maxLength": 128,
                    "example": "My Project"
                  },
                  "description": {
                    "type": "string",
                    "description": "A short description of the project (up to 256 characters).",
                    "maxLength": 256,
                    "example": "My awesome project"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a project under the organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the project created."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Project",
        "description": "Lists all the projects under the organization.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Projects"
        ],
        "operationId": "listProjects",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **name**.",
            "example": [
              "name"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed all the projects under the organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "description",
                          "name",
                          "audit"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "A GUID4 identifier of the project.",
                            "format": "uuid"
                          },
                          "description": {
                            "type": "string",
                            "example": "The description of my awesome project",
                            "description": "The description of a particular project."
                          },
                          "name": {
                            "type": "string",
                            "example": "My-Awesome-Project",
                            "description": "The name of the project."
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Project",
        "description": "Fetches the details of the given project.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Projects"
        ],
        "operationId": "getProjectByID",
        "responses": {
          "200": {
            "headers": {
              "ETag": {
                "description": "Entity tag for the resource, used for caching and conditional requests.",
                "schema": {
                  "type": "string",
                  "example": "Version: 1",
                  "description": "An ETag is a unique identifier assigned to a specific version of a resource on a web server.\nIt allows the server to identify whether the version of the resource on the client side matches the version on the server side.\nThis field represents the ETag value returned by the server for a particular resource.\n"
                }
              }
            },
            "description": "Successfully fetched the project based on the projectId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "description",
                    "name",
                    "audit"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "A GUID4 identifier of the project.",
                      "format": "uuid"
                    },
                    "description": {
                      "type": "string",
                      "example": "The description of my awesome project",
                      "description": "The description of a particular project."
                    },
                    "name": {
                      "type": "string",
                      "example": "My-Awesome-Project",
                      "description": "The name of the project."
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Project",
        "description": "Update project name and or project description.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "parameters": [
          {
            "name": "If-Match",
            "in": "header",
            "description": "A precondition header that specifies the entity tag of a resource.",
            "schema": {
              "type": "string",
              "example": "12"
            }
          }
        ],
        "tags": [
          "Projects"
        ],
        "operationId": "putProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new project name (up to 128 characters).",
                    "maxLength": 128,
                    "example": "My-New-Project"
                  },
                  "description": {
                    "type": "string",
                    "description": "The new project description (up to 256 characters).",
                    "maxLength": 256,
                    "example": "The extended description of my awesome project."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully updated the project metadata."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Project",
        "description": "Deletes an existing project.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Projects"
        ],
        "operationId": "deleteProjectByID",
        "responses": {
          "204": {
            "description": "Successfully deleted the project by its projectId."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/freeTier": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create Free Tier Cluster",
        "description": "Creates a free tier cluster.  This is a 1 node cluster than only runs data, query, index and search services.\n\nYou can have at most 1 free tier cluster per tenant.\n\nThe following features are not available for free tier clusters:\n  - backup/restore\n  - private endpoint service\n  - network peering\n  - audit logs\n  - alert integration\n  - CMEK\n  - on/off schedule\n\nOnly cluster name, description, CSP, region and CIDR are configurable.\n\nThere are limited regions available based on CSP:\n  a. for AWS they are us-east-2, eu-west-1, ap-southeast-1\n  b. for GCP they are us-central1, europe-west1, asia-east1\n  c. for Azure they are eastus, swedencentral, koreacentral\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Free Tier"
        ],
        "operationId": "createFreeTierCluster",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "cloudProvider"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the cluster (up to 256 characters).",
                    "example": "A Free Tier Cluster",
                    "maxLength": 256
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the cluster (up to 1024 characters).",
                    "example": "Description of the cluster",
                    "maxLength": 1024
                  },
                  "cloudProvider": {
                    "type": "object",
                    "description": "The cloud provider where the cluster will be hosted.\nFor information about providers and supported regions, see:\n\n- [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html)\n\n- [Google Cloud Platform](https://docs.couchbase.com/cloud/reference/gcp.html)\n\n- [Microsoft Azure](https://docs.couchbase.com/cloud/reference/azure.html)\n",
                    "required": [
                      "type",
                      "region"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Cloud provider type. Note: For singleNode cluster, only AWS type cloud provider is allowed.\n\n1. `aws`: Amazon Web Services\n\n2. `gcp`: Google Cloud Platform\n\n3. `azure`: Microsoft Azure\n",
                        "enum": [
                          "aws",
                          "gcp",
                          "azure"
                        ],
                        "example": "aws"
                      },
                      "region": {
                        "type": "string",
                        "description": "Cloud provider region, for example `us-west-2`.",
                        "example": "us-east-1"
                      },
                      "cidr": {
                        "type": "string",
                        "pattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}$",
                        "description": "CIDR block for Cloud Provider.",
                        "example": "10.1.30.0/23"
                      }
                    }
                  }
                }
              },
              "examples": {
                "PostFreeTierClusterExample1": {
                  "value": {
                    "name": "Free-Tier-Cluster-1",
                    "description": "My first test AWS cluster for multiple services.",
                    "cloudProvider": {
                      "type": "aws",
                      "region": "us-east-2",
                      "cidr": "10.1.30.0/23"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successfully submitted job to create a free tier cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the cluster created."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.  For example when client tries to create more than 1 free tier cluster in tenant.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 422,
                      "message": "Unable to process request to create trial cluster. Self service trials are limited to provisioning one cluster.",
                      "hint": "Please review your request and ensure that all required parameters are correctly provided."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create Cluster",
        "description": "Creates a new Couchbase Capella provisioned cluster.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Clusters"
        ],
        "operationId": "postCluster",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "cloudProvider",
                  "serviceGroups",
                  "availability",
                  "support"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the cluster (up to 256 characters).",
                    "example": "Test Cluster",
                    "maxLength": 256
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the cluster (up to 1024 characters).",
                    "example": "Description of the cluster",
                    "maxLength": 1024
                  },
                  "configurationType": {
                    "deprecated": true,
                    "type": "string",
                    "description": "- Multi-node databases are best for deployments that require high availability. If your app requires high performance and high availability, choose the Multi-node option.\n- Single-node databases have resource limitations that make them a good choice for learning, prototyping, and non-production uses. They have limited availability.\n- Single-node databases should contain only 1 node and 1 Service Group. Adding number of nodes or service groups > 1 is not allowed for such databases.\n- By default the configurationType is multiNode.\n",
                    "enum": [
                      "singleNode",
                      "multiNode"
                    ],
                    "default": [
                      "multiNode"
                    ],
                    "example": "multiNode"
                  },
                  "cloudProvider": {
                    "type": "object",
                    "description": "The cloud provider where the cluster will be hosted.\nFor information about providers and supported regions, see:\n\n- [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html)\n\n- [Google Cloud Platform](https://docs.couchbase.com/cloud/reference/gcp.html)\n\n- [Microsoft Azure](https://docs.couchbase.com/cloud/reference/azure.html)\n",
                    "required": [
                      "type",
                      "region"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Cloud provider type. Note: For singleNode cluster, only AWS type cloud provider is allowed.\n\n1. `aws`: Amazon Web Services\n\n2. `gcp`: Google Cloud Platform\n\n3. `azure`: Microsoft Azure\n",
                        "enum": [
                          "aws",
                          "gcp",
                          "azure"
                        ],
                        "example": "aws"
                      },
                      "region": {
                        "type": "string",
                        "description": "Cloud provider region, for example `us-west-2`.",
                        "example": "us-east-1"
                      },
                      "cidr": {
                        "type": "string",
                        "pattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}$",
                        "description": "CIDR block for Cloud Provider.",
                        "example": "10.1.30.0/23"
                      }
                    }
                  },
                  "couchbaseServer": {
                    "type": "object",
                    "properties": {
                      "version": {
                        "type": "string",
                        "description": "Version of the Couchbase Server to be installed in the cluster. Refer to documentation [here](https://docs.couchbase.com/cloud/clusters/upgrade-database.html#server-version-maintenance-support) for list of supported versions. The latest Couchbase Server version will be deployed by default.",
                        "example": "7.1"
                      }
                    }
                  },
                  "serviceGroups": {
                    "type": "array",
                    "description": "The couchbase service groups to be run. - The set of nodes that share the same disk, number of nodes and services. - At least one service group must contain the data service.",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "node": {
                          "type": "object",
                          "required": [
                            "compute",
                            "disk"
                          ],
                          "properties": {
                            "compute": {
                              "type": "object",
                              "description": "Following are the supported compute combinations for CPU and RAM for different cloud providers.\nTo learn more, see [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html).",
                              "required": [
                                "cpu",
                                "ram"
                              ],
                              "properties": {
                                "cpu": {
                                  "type": "integer",
                                  "description": "CPU units (cores).",
                                  "example": 4
                                },
                                "ram": {
                                  "type": "integer",
                                  "description": "RAM units (GB).",
                                  "example": 16
                                }
                              }
                            },
                            "disk": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "storage",
                                    "iops"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Type of disk. Please choose from the given list for AWS cloud provider.",
                                      "enum": [
                                        "gp3",
                                        "io2"
                                      ],
                                      "example": "gp3"
                                    },
                                    "storage": {
                                      "type": "integer",
                                      "description": "Storage in GB. See documentation for supported storage.",
                                      "example": 50,
                                      "minimum": 50
                                    },
                                    "iops": {
                                      "type": "integer",
                                      "description": "Please refer to documentation for supported IOPS.",
                                      "example": 3000
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Type of disk. Please choose from the given list for Azure cloud provider.",
                                      "enum": [
                                        "P6",
                                        "P10",
                                        "P15",
                                        "P20",
                                        "P30",
                                        "P40",
                                        "P50",
                                        "P60",
                                        "Ultra"
                                      ]
                                    },
                                    "storage": {
                                      "type": "integer",
                                      "description": "Storage in GB. Only required for Ultra Disk types. Not used in other storage types.",
                                      "enum": [
                                        64,
                                        128,
                                        256,
                                        512,
                                        1024,
                                        2048,
                                        3072,
                                        4096,
                                        5120,
                                        6144,
                                        7168,
                                        8192,
                                        9216,
                                        10240,
                                        11264,
                                        12288,
                                        13312,
                                        14336,
                                        15360
                                      ],
                                      "example": 64,
                                      "minimum": 64
                                    },
                                    "iops": {
                                      "type": "integer",
                                      "description": "Only required for Ultra Disk types. Not used in other storage types. See [IOPS Defaults](https://docs.couchbase.com/cloud/clusters/scale-database.html#IOPS-Defaults) for a list of supported IOPS values.",
                                      "example": 3000
                                    },
                                    "autoExpansion": {
                                      "type": "boolean",
                                      "description": "Determine if disk storage should automatically expand. Defaults to \"false\" if not specified.",
                                      "example": false
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "storage"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Type of disk. Please choose from the given list for GCP cloud provider.",
                                      "enum": [
                                        "pd-ssd"
                                      ]
                                    },
                                    "storage": {
                                      "type": "integer",
                                      "description": "Storage in GB. Please refer to documentation for supported storage.",
                                      "example": 50,
                                      "minimum": 50
                                    }
                                  }
                                }
                              ],
                              "example": {
                                "type": "gp3",
                                "storage": 50,
                                "iops": 3000
                              }
                            }
                          }
                        },
                        "numOfNodes": {
                          "type": "integer",
                          "description": "Number of nodes. The minimum number of nodes for the cluster can be 3 and maximum can be 27 nodes. - Additional service groups can have 2 nodes minimum and 24 nodes maximum. - SingleNode cluster can have only 1 node.",
                          "example": 3
                        },
                        "services": {
                          "type": "array",
                          "description": "The couchbase service to run on the node. The allowed services for singleNode cluster are one or all of - data, index, query and search.",
                          "minItems": 1,
                          "uniqueItems": true,
                          "items": {
                            "type": "string",
                            "enum": [
                              "data",
                              "query",
                              "index",
                              "search",
                              "analytics",
                              "eventing"
                            ],
                            "example": "data"
                          }
                        }
                      }
                    }
                  },
                  "availability": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Availability zone type, either 'single' or 'multi'. Availability zone type allowed for singleNode cluster is only 'single'.",
                        "example": "single",
                        "enum": [
                          "single",
                          "multi"
                        ]
                      }
                    }
                  },
                  "support": {
                    "type": "object",
                    "required": [
                      "plan"
                    ],
                    "properties": {
                      "plan": {
                        "type": "string",
                        "description": "Plan type, either 'Basic', 'Developer Pro', or 'Enterprise'. \nPlan type allowed for singleNode cluster is either 'Basic', or 'Developer Pro'. \nIn case of 'Basic' plan timezone field value is ignored.\n\nFree tier plan is automatically assigned to free tier clusters.\n",
                        "enum": [
                          "free",
                          "basic",
                          "developer pro",
                          "enterprise"
                        ],
                        "example": "basic"
                      },
                      "timezone": {
                        "type": "string",
                        "description": "The standard timezone for the cluster. Should be the TZ identifier.",
                        "example": "ET",
                        "enum": [
                          "ET",
                          "GMT",
                          "IST",
                          "PT"
                        ]
                      }
                    }
                  },
                  "zones": {
                    "description": "Zones is the cloud services provider availability zones for the cluster. Currently Supported only for single AZ clusters so only 1 zone is allowed in list.",
                    "type": "array",
                    "example": [
                      "use1-az1"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "cmekId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ffffffff-aaaa-1414-eeee-000000000000",
                    "description": "The ID of the CMEK Key."
                  },
                  "enablePrivateDNSResolution": {
                    "type": "boolean",
                    "description": "EnablePrivateDNSResolution signals that the cluster should have hostnames that are hosted in a public DNS zone that resolve to a private DNS address. This exists to support the use case of customers connecting from their own data centers where it is not possible to make use of a cloud service provider DNS zone.",
                    "example": true
                  }
                }
              },
              "examples": {
                "PostClusterAWSMultipleServiceGroups": {
                  "value": {
                    "name": "Test-Cluster-1",
                    "description": "My first test AWS cluster for multiple services.",
                    "cloudProvider": {
                      "type": "aws",
                      "region": "us-east-1",
                      "cidr": "10.1.30.0/23"
                    },
                    "couchbaseServer": {
                      "version": "7.2"
                    },
                    "serviceGroups": [
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 16
                          },
                          "disk": {
                            "storage": 50,
                            "type": "gp3",
                            "iops": 3000
                          }
                        },
                        "numOfNodes": 3,
                        "services": [
                          "data",
                          "query",
                          "index",
                          "search"
                        ]
                      },
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 32
                          },
                          "disk": {
                            "storage": 50,
                            "type": "io2",
                            "iops": 3005
                          }
                        },
                        "numOfNodes": 2,
                        "services": [
                          "analytics"
                        ]
                      }
                    ],
                    "availability": {
                      "type": "multi"
                    },
                    "support": {
                      "plan": "developer pro",
                      "timezone": "PT"
                    }
                  }
                },
                "PostClusterAWSSingleAvailabilityBasicPlan": {
                  "value": {
                    "name": "Test-Cluster-2",
                    "description": "My test AWS cluster for single availability and basic plan.",
                    "cloudProvider": {
                      "type": "aws",
                      "region": "us-east-1",
                      "cidr": "10.1.30.0/23"
                    },
                    "couchbaseServer": {
                      "version": "7.2"
                    },
                    "serviceGroups": [
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 16
                          },
                          "disk": {
                            "storage": 50,
                            "type": "io2",
                            "iops": 3000
                          }
                        },
                        "numOfNodes": 3,
                        "services": [
                          "data",
                          "query",
                          "index",
                          "search"
                        ]
                      }
                    ],
                    "availability": {
                      "type": "single"
                    },
                    "support": {
                      "plan": "basic",
                      "timezone": "PT"
                    }
                  }
                },
                "PostClusterAWSWithoutServerVersion": {
                  "value": {
                    "name": "Test-Cluster-6",
                    "description": "My test AWS cluster without Couchbase Server version.",
                    "cloudProvider": {
                      "type": "aws",
                      "region": "us-east-1",
                      "cidr": "10.1.30.0/23"
                    },
                    "serviceGroups": [
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 16
                          },
                          "disk": {
                            "storage": 50,
                            "type": "gp3",
                            "iops": 3000
                          }
                        },
                        "numOfNodes": 3,
                        "services": [
                          "data",
                          "query",
                          "index",
                          "search"
                        ]
                      },
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 32
                          },
                          "disk": {
                            "storage": 50,
                            "type": "io2",
                            "iops": 3005
                          }
                        },
                        "numOfNodes": 2,
                        "services": [
                          "analytics"
                        ]
                      }
                    ],
                    "availability": {
                      "type": "multi"
                    },
                    "support": {
                      "plan": "developer pro",
                      "timezone": "PT"
                    }
                  }
                },
                "PostClusterAWSWithServerVersionAndMaxNodes": {
                  "value": {
                    "name": "Test-Cluster-7",
                    "description": "My test AWS cluster for Couchbase Server version 7.1.0.",
                    "cloudProvider": {
                      "type": "aws",
                      "region": "us-east-1",
                      "cidr": "10.1.30.0/23"
                    },
                    "couchbaseServer": {
                      "version": "7.2"
                    },
                    "serviceGroups": [
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 16
                          },
                          "disk": {
                            "storage": 50,
                            "type": "gp3",
                            "iops": 3000
                          }
                        },
                        "numOfNodes": 27,
                        "services": [
                          "data",
                          "query",
                          "index",
                          "search"
                        ]
                      }
                    ],
                    "availability": {
                      "type": "multi"
                    },
                    "support": {
                      "plan": "developer pro",
                      "timezone": "PT"
                    }
                  }
                },
                "PostClusterAWSWithServerWithMaxNodes": {
                  "value": {
                    "name": "Test-Cluster-8",
                    "description": "My test AWS cluster with max nodes.",
                    "cloudProvider": {
                      "type": "aws",
                      "region": "us-east-1",
                      "cidr": "10.1.30.0/23"
                    },
                    "couchbaseServer": {
                      "version": "7.2"
                    },
                    "serviceGroups": [
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 16
                          },
                          "disk": {
                            "storage": 50,
                            "type": "gp3",
                            "iops": 3000
                          }
                        },
                        "numOfNodes": 3,
                        "services": [
                          "data",
                          "query",
                          "index",
                          "search"
                        ]
                      },
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 32
                          },
                          "disk": {
                            "storage": 50,
                            "type": "io2",
                            "iops": 3005
                          }
                        },
                        "numOfNodes": 24,
                        "services": [
                          "analytics"
                        ]
                      }
                    ],
                    "availability": {
                      "type": "single"
                    },
                    "support": {
                      "plan": "developer pro",
                      "timezone": "PT"
                    }
                  }
                },
                "PostClusterAzurePremiumDisk": {
                  "value": {
                    "name": "Test-Cluster-3",
                    "description": "My first test Azure cluster.",
                    "cloudProvider": {
                      "type": "azure",
                      "region": "eastus",
                      "cidr": "10.1.30.0/23"
                    },
                    "couchbaseServer": {
                      "version": "7.2"
                    },
                    "serviceGroups": [
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 16
                          },
                          "disk": {
                            "type": "P6"
                          }
                        },
                        "numOfNodes": 3,
                        "services": [
                          "data",
                          "query",
                          "index",
                          "search"
                        ]
                      },
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 32
                          },
                          "disk": {
                            "type": "P10"
                          }
                        },
                        "numOfNodes": 4,
                        "services": [
                          "analytics"
                        ]
                      }
                    ],
                    "availability": {
                      "type": "single"
                    },
                    "support": {
                      "plan": "developer pro",
                      "timezone": "ET"
                    }
                  }
                },
                "PostClusterAzureUltraDisk": {
                  "value": {
                    "name": "Test-Cluster-4",
                    "description": "My second test Azure cluster with Ultra.",
                    "cloudProvider": {
                      "type": "azure",
                      "region": "eastus",
                      "cidr": "10.1.30.0/23"
                    },
                    "couchbaseServer": {
                      "version": "7.2"
                    },
                    "serviceGroups": [
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 16
                          },
                          "disk": {
                            "storage": 1024,
                            "type": "Ultra",
                            "iops": 2000
                          }
                        },
                        "numOfNodes": 3,
                        "services": [
                          "data",
                          "query",
                          "index",
                          "search",
                          "analytics"
                        ]
                      }
                    ],
                    "availability": {
                      "type": "multi"
                    },
                    "support": {
                      "plan": "developer pro",
                      "timezone": "PT"
                    }
                  }
                },
                "PostClusterAzureWithAutoExpansion": {
                  "value": {
                    "name": "Test-Cluster-5",
                    "description": "My third test Azure cluster.",
                    "cloudProvider": {
                      "type": "azure",
                      "region": "eastus",
                      "cidr": "10.1.30.0/23"
                    },
                    "couchbaseServer": {
                      "version": "7.2"
                    },
                    "serviceGroups": [
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 16
                          },
                          "disk": {
                            "type": "P6",
                            "autoExpansion": true
                          }
                        },
                        "numOfNodes": 3,
                        "services": [
                          "data",
                          "index"
                        ]
                      },
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 32
                          },
                          "disk": {
                            "type": "P6",
                            "autoExpansion": false
                          }
                        },
                        "numOfNodes": 3,
                        "services": [
                          "query"
                        ]
                      }
                    ],
                    "availability": {
                      "type": "single"
                    },
                    "support": {
                      "plan": "developer pro",
                      "timezone": "ET"
                    }
                  }
                },
                "PostClusterGCP": {
                  "value": {
                    "name": "Test-Cluster-5",
                    "description": "My first test GCP cluster.",
                    "cloudProvider": {
                      "type": "gcp",
                      "region": "us-east1",
                      "cidr": "10.1.30.0/23"
                    },
                    "couchbaseServer": {
                      "version": "7.2"
                    },
                    "serviceGroups": [
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 16
                          },
                          "disk": {
                            "storage": 64,
                            "type": "pd-ssd"
                          }
                        },
                        "numOfNodes": 3,
                        "services": [
                          "data",
                          "query",
                          "index",
                          "search"
                        ]
                      }
                    ],
                    "availability": {
                      "type": "single"
                    },
                    "support": {
                      "plan": "basic",
                      "timezone": "ET"
                    }
                  }
                },
                "PostCMEKCluster": {
                  "value": {
                    "name": "CMEKCluster",
                    "description": "My first test AWS cluster for multiple services.",
                    "cmekId": "ffffffff-aaaa-1414-eeee-000000000000",
                    "cloudProvider": {
                      "type": "aws",
                      "region": "us-east-1",
                      "cidr": "10.1.30.0/23"
                    },
                    "couchbaseServer": {
                      "version": "7.2"
                    },
                    "serviceGroups": [
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 16
                          },
                          "disk": {
                            "storage": 50,
                            "type": "gp3",
                            "iops": 3000
                          }
                        },
                        "numOfNodes": 3,
                        "services": [
                          "data",
                          "query",
                          "index",
                          "search"
                        ]
                      },
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 32
                          },
                          "disk": {
                            "storage": 50,
                            "type": "io2",
                            "iops": 3005
                          }
                        },
                        "numOfNodes": 2,
                        "services": [
                          "analytics"
                        ]
                      }
                    ],
                    "availability": {
                      "type": "multi"
                    },
                    "support": {
                      "plan": "enterprise",
                      "timezone": "PT"
                    }
                  }
                },
                "PostClusterEnabledPrivateDNSResolution": {
                  "value": {
                    "name": "Test-Cluster-1",
                    "description": "My test AWS cluster with Private DNS Resolution enabled.",
                    "enablePrivateDNSResolution": true,
                    "cloudProvider": {
                      "type": "aws",
                      "region": "us-east-1",
                      "cidr": "10.1.30.0/23"
                    },
                    "couchbaseServer": {
                      "version": "7.6"
                    },
                    "serviceGroups": [
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 16
                          },
                          "disk": {
                            "storage": 50,
                            "type": "gp3",
                            "iops": 3000
                          }
                        },
                        "numOfNodes": 3,
                        "services": [
                          "data",
                          "query",
                          "index",
                          "search"
                        ]
                      },
                      {
                        "node": {
                          "compute": {
                            "cpu": 4,
                            "ram": 32
                          },
                          "disk": {
                            "storage": 50,
                            "type": "io2",
                            "iops": 3005
                          }
                        },
                        "numOfNodes": 2,
                        "services": [
                          "analytics"
                        ]
                      }
                    ],
                    "availability": {
                      "type": "multi"
                    },
                    "support": {
                      "plan": "developer pro",
                      "timezone": "PT"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successfully created a cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the cluster created."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Clusters",
        "description": "Lists all the clusters under the organization.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nReturned set of clusters is reduced to what the caller has access to view.\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Clusters"
        ],
        "operationId": "listClusters",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **availability**, **cloudProvider**, **couchbaseServer**, **currentState**, **name**.",
            "example": [
              "name"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed all the clusters under the organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "description",
                          "configurationType",
                          "connectionString",
                          "cloudProvider",
                          "couchbaseServer",
                          "serviceGroups",
                          "availability",
                          "support",
                          "currentState",
                          "audit"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the cluster created."
                          },
                          "appServiceId": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the linked App Service."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the cluster (up to 256 characters).",
                            "example": "Test Cluster",
                            "maxLength": 256
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the cluster (up to 1024 characters).",
                            "example": "Description of the cluster",
                            "maxLength": 1024
                          },
                          "configurationType": {
                            "deprecated": true,
                            "type": "string",
                            "description": "- Multi-node databases are best for deployments that require high availability. If your app requires high performance and high availability, choose the Multi-node option.\n- Single-node databases have resource limitations that make them a good choice for learning, prototyping, and non-production uses. They have limited availability.\n- Single-node databases should contain only 1 node and 1 Service Group. Adding number of nodes or service groups > 1 is not allowed for such databases.\n- By default the configurationType is multiNode.\n",
                            "enum": [
                              "singleNode",
                              "multiNode"
                            ],
                            "default": [
                              "multiNode"
                            ],
                            "example": "multiNode"
                          },
                          "connectionString": {
                            "type": "string",
                            "description": "ConnectionString specifies the Capella database endpoint for your client connection.",
                            "example": "couchbases://cb.irxmynm6vekhe5.cloud.couchbase.com"
                          },
                          "cloudProvider": {
                            "type": "object",
                            "description": "The cloud provider where the cluster will be hosted.\nFor information about providers and supported regions, see:\n\n- [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html)\n\n- [Google Cloud Platform](https://docs.couchbase.com/cloud/reference/gcp.html)\n\n- [Microsoft Azure](https://docs.couchbase.com/cloud/reference/azure.html)\n",
                            "required": [
                              "type",
                              "region"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Cloud provider type. Note: For singleNode cluster, only AWS type cloud provider is allowed.\n\n1. `aws`: Amazon Web Services\n\n2. `gcp`: Google Cloud Platform\n\n3. `azure`: Microsoft Azure\n",
                                "enum": [
                                  "aws",
                                  "gcp",
                                  "azure"
                                ],
                                "example": "aws"
                              },
                              "region": {
                                "type": "string",
                                "description": "Cloud provider region, for example `us-west-2`.",
                                "example": "us-east-1"
                              },
                              "cidr": {
                                "type": "string",
                                "pattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}$",
                                "description": "CIDR block for Cloud Provider.",
                                "example": "10.1.30.0/23"
                              }
                            }
                          },
                          "couchbaseServer": {
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "string",
                                "description": "Version of the Couchbase Server to be installed in the cluster. Refer to documentation [here](https://docs.couchbase.com/cloud/clusters/upgrade-database.html#server-version-maintenance-support) for list of supported versions. The latest Couchbase Server version will be deployed by default.",
                                "example": "7.1"
                              }
                            }
                          },
                          "serviceGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "node": {
                                  "type": "object",
                                  "required": [
                                    "compute",
                                    "disk"
                                  ],
                                  "properties": {
                                    "compute": {
                                      "type": "object",
                                      "description": "Following are the supported compute combinations for CPU and RAM for different cloud providers.\nTo learn more, see [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html).",
                                      "required": [
                                        "cpu",
                                        "ram"
                                      ],
                                      "properties": {
                                        "cpu": {
                                          "type": "integer",
                                          "description": "CPU units (cores).",
                                          "example": 4
                                        },
                                        "ram": {
                                          "type": "integer",
                                          "description": "RAM units (GB).",
                                          "example": 16
                                        }
                                      }
                                    },
                                    "disk": {
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "storage",
                                            "iops"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "Type of disk. Please choose from the given list for AWS cloud provider.",
                                              "enum": [
                                                "gp3",
                                                "io2"
                                              ],
                                              "example": "gp3"
                                            },
                                            "storage": {
                                              "type": "integer",
                                              "description": "Storage in GB. See documentation for supported storage.",
                                              "example": 50,
                                              "minimum": 50
                                            },
                                            "iops": {
                                              "type": "integer",
                                              "description": "Please refer to documentation for supported IOPS.",
                                              "example": 3000
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "type"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "Type of disk. Please choose from the given list for Azure cloud provider.",
                                              "enum": [
                                                "P6",
                                                "P10",
                                                "P15",
                                                "P20",
                                                "P30",
                                                "P40",
                                                "P50",
                                                "P60",
                                                "Ultra"
                                              ]
                                            },
                                            "storage": {
                                              "type": "integer",
                                              "description": "Storage in GB. Only required for Ultra Disk types. Not used in other storage types.",
                                              "enum": [
                                                64,
                                                128,
                                                256,
                                                512,
                                                1024,
                                                2048,
                                                3072,
                                                4096,
                                                5120,
                                                6144,
                                                7168,
                                                8192,
                                                9216,
                                                10240,
                                                11264,
                                                12288,
                                                13312,
                                                14336,
                                                15360
                                              ],
                                              "example": 64,
                                              "minimum": 64
                                            },
                                            "iops": {
                                              "type": "integer",
                                              "description": "Only required for Ultra Disk types. Not used in other storage types. See [IOPS Defaults](https://docs.couchbase.com/cloud/clusters/scale-database.html#IOPS-Defaults) for a list of supported IOPS values.",
                                              "example": 3000
                                            },
                                            "autoExpansion": {
                                              "type": "boolean",
                                              "description": "Determine if disk storage should automatically expand. Defaults to \"false\" if not specified.",
                                              "example": false
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "storage"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "Type of disk. Please choose from the given list for GCP cloud provider.",
                                              "enum": [
                                                "pd-ssd"
                                              ]
                                            },
                                            "storage": {
                                              "type": "integer",
                                              "description": "Storage in GB. Please refer to documentation for supported storage.",
                                              "example": 50,
                                              "minimum": 50
                                            }
                                          }
                                        }
                                      ],
                                      "example": {
                                        "type": "gp3",
                                        "storage": 50,
                                        "iops": 3000
                                      }
                                    }
                                  }
                                },
                                "numOfNodes": {
                                  "type": "integer",
                                  "description": "Number of nodes. The minimum number of nodes for the cluster can be 3 and maximum can be 27 nodes. - Additional service groups can have 2 nodes minimum and 24 nodes maximum. - SingleNode cluster can have only 1 node.",
                                  "example": 3
                                },
                                "services": {
                                  "type": "array",
                                  "description": "The couchbase service to run on the node. The allowed services for singleNode cluster are one or all of - data, index, query and search.",
                                  "minItems": 1,
                                  "uniqueItems": true,
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "data",
                                      "query",
                                      "index",
                                      "search",
                                      "analytics",
                                      "eventing"
                                    ],
                                    "example": "data"
                                  }
                                }
                              }
                            }
                          },
                          "availability": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Availability zone type, either 'single' or 'multi'. Availability zone type allowed for singleNode cluster is only 'single'.",
                                "example": "single",
                                "enum": [
                                  "single",
                                  "multi"
                                ]
                              }
                            }
                          },
                          "support": {
                            "type": "object",
                            "required": [
                              "plan",
                              "timezone"
                            ],
                            "properties": {
                              "plan": {
                                "type": "string",
                                "description": "Plan type, either 'Basic', 'Developer Pro', or 'Enterprise'. \nPlan type allowed for singleNode cluster is either 'Basic', or 'Developer Pro'. \nIn case of 'Basic' plan timezone field value is ignored.\n\nFree tier plan is automatically assigned to free tier clusters.\n",
                                "enum": [
                                  "free",
                                  "basic",
                                  "developer pro",
                                  "enterprise"
                                ],
                                "example": "basic"
                              },
                              "timezone": {
                                "type": "string",
                                "description": "The standard timezone for the cluster. Should be the TZ identifier.",
                                "example": "ET",
                                "enum": [
                                  "ET",
                                  "GMT",
                                  "IST",
                                  "PT"
                                ]
                              }
                            }
                          },
                          "currentState": {
                            "type": "string",
                            "enum": [
                              "draft",
                              "deploying",
                              "scaling",
                              "upgrading",
                              "rebalancing",
                              "peering",
                              "destroying",
                              "healthy",
                              "degraded",
                              "turnedOff",
                              "turningOff",
                              "turningOn",
                              "deploymentFailed",
                              "scaleFailed",
                              "upgradeFailed",
                              "rebalanceFailed",
                              "peeringFailed",
                              "destroyFailed",
                              "offline",
                              "turningOffFailed",
                              "turningOnFailed"
                            ],
                            "example": "deploying"
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          },
                          "cmekId": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the CMEK Key."
                          },
                          "enablePrivateDNSResolution": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/freeTier/{clusterId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Free Tier Cluster",
        "description": "Get details of the free tier cluster.\n\nWhile only cluster name, description, CSP, region and CIDR are configurable, other read only fields are retrieved.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "operationId": "getFreeTierCluster",
        "responses": {
          "200": {
            "headers": {
              "ETag": {
                "description": "Entity tag for the resource, used for caching and conditional requests.",
                "schema": {
                  "type": "string",
                  "example": "Version: 1",
                  "description": "An ETag is a unique identifier assigned to a specific version of a resource on a web server.\nIt allows the server to identify whether the version of the resource on the client side matches the version on the server side.\nThis field represents the ETag value returned by the server for a particular resource.\n"
                }
              }
            },
            "description": "Successfully got the free tier cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "description",
                    "configurationType",
                    "connectionString",
                    "cloudProvider",
                    "couchbaseServer",
                    "serviceGroups",
                    "availability",
                    "support",
                    "currentState",
                    "audit"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the cluster created."
                    },
                    "appServiceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the linked App Service."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the cluster (up to 256 characters).",
                      "example": "Test Cluster",
                      "maxLength": 256
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the cluster (up to 1024 characters).",
                      "example": "Description of the cluster",
                      "maxLength": 1024
                    },
                    "configurationType": {
                      "deprecated": true,
                      "type": "string",
                      "description": "- Multi-node databases are best for deployments that require high availability. If your app requires high performance and high availability, choose the Multi-node option.\n- Single-node databases have resource limitations that make them a good choice for learning, prototyping, and non-production uses. They have limited availability.\n- Single-node databases should contain only 1 node and 1 Service Group. Adding number of nodes or service groups > 1 is not allowed for such databases.\n- By default the configurationType is multiNode.\n",
                      "enum": [
                        "singleNode",
                        "multiNode"
                      ],
                      "default": [
                        "multiNode"
                      ],
                      "example": "multiNode"
                    },
                    "connectionString": {
                      "type": "string",
                      "description": "ConnectionString specifies the Capella database endpoint for your client connection.",
                      "example": "couchbases://cb.irxmynm6vekhe5.cloud.couchbase.com"
                    },
                    "cloudProvider": {
                      "type": "object",
                      "description": "The cloud provider where the cluster will be hosted.\nFor information about providers and supported regions, see:\n\n- [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html)\n\n- [Google Cloud Platform](https://docs.couchbase.com/cloud/reference/gcp.html)\n\n- [Microsoft Azure](https://docs.couchbase.com/cloud/reference/azure.html)\n",
                      "required": [
                        "type",
                        "region"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Cloud provider type. Note: For singleNode cluster, only AWS type cloud provider is allowed.\n\n1. `aws`: Amazon Web Services\n\n2. `gcp`: Google Cloud Platform\n\n3. `azure`: Microsoft Azure\n",
                          "enum": [
                            "aws",
                            "gcp",
                            "azure"
                          ],
                          "example": "aws"
                        },
                        "region": {
                          "type": "string",
                          "description": "Cloud provider region, for example `us-west-2`.",
                          "example": "us-east-1"
                        },
                        "cidr": {
                          "type": "string",
                          "pattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}$",
                          "description": "CIDR block for Cloud Provider.",
                          "example": "10.1.30.0/23"
                        }
                      }
                    },
                    "couchbaseServer": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "description": "Version of the Couchbase Server to be installed in the cluster. Refer to documentation [here](https://docs.couchbase.com/cloud/clusters/upgrade-database.html#server-version-maintenance-support) for list of supported versions. The latest Couchbase Server version will be deployed by default.",
                          "example": "7.1"
                        }
                      }
                    },
                    "serviceGroups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "node": {
                            "type": "object",
                            "required": [
                              "compute",
                              "disk"
                            ],
                            "properties": {
                              "compute": {
                                "type": "object",
                                "description": "Following are the supported compute combinations for CPU and RAM for different cloud providers.\nTo learn more, see [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html).",
                                "required": [
                                  "cpu",
                                  "ram"
                                ],
                                "properties": {
                                  "cpu": {
                                    "type": "integer",
                                    "description": "CPU units (cores).",
                                    "example": 4
                                  },
                                  "ram": {
                                    "type": "integer",
                                    "description": "RAM units (GB).",
                                    "example": 16
                                  }
                                }
                              },
                              "disk": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "storage",
                                      "iops"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of disk. Please choose from the given list for AWS cloud provider.",
                                        "enum": [
                                          "gp3",
                                          "io2"
                                        ],
                                        "example": "gp3"
                                      },
                                      "storage": {
                                        "type": "integer",
                                        "description": "Storage in GB. See documentation for supported storage.",
                                        "example": 50,
                                        "minimum": 50
                                      },
                                      "iops": {
                                        "type": "integer",
                                        "description": "Please refer to documentation for supported IOPS.",
                                        "example": 3000
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of disk. Please choose from the given list for Azure cloud provider.",
                                        "enum": [
                                          "P6",
                                          "P10",
                                          "P15",
                                          "P20",
                                          "P30",
                                          "P40",
                                          "P50",
                                          "P60",
                                          "Ultra"
                                        ]
                                      },
                                      "storage": {
                                        "type": "integer",
                                        "description": "Storage in GB. Only required for Ultra Disk types. Not used in other storage types.",
                                        "enum": [
                                          64,
                                          128,
                                          256,
                                          512,
                                          1024,
                                          2048,
                                          3072,
                                          4096,
                                          5120,
                                          6144,
                                          7168,
                                          8192,
                                          9216,
                                          10240,
                                          11264,
                                          12288,
                                          13312,
                                          14336,
                                          15360
                                        ],
                                        "example": 64,
                                        "minimum": 64
                                      },
                                      "iops": {
                                        "type": "integer",
                                        "description": "Only required for Ultra Disk types. Not used in other storage types. See [IOPS Defaults](https://docs.couchbase.com/cloud/clusters/scale-database.html#IOPS-Defaults) for a list of supported IOPS values.",
                                        "example": 3000
                                      },
                                      "autoExpansion": {
                                        "type": "boolean",
                                        "description": "Determine if disk storage should automatically expand. Defaults to \"false\" if not specified.",
                                        "example": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "storage"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of disk. Please choose from the given list for GCP cloud provider.",
                                        "enum": [
                                          "pd-ssd"
                                        ]
                                      },
                                      "storage": {
                                        "type": "integer",
                                        "description": "Storage in GB. Please refer to documentation for supported storage.",
                                        "example": 50,
                                        "minimum": 50
                                      }
                                    }
                                  }
                                ],
                                "example": {
                                  "type": "gp3",
                                  "storage": 50,
                                  "iops": 3000
                                }
                              }
                            }
                          },
                          "numOfNodes": {
                            "type": "integer",
                            "description": "Number of nodes. The minimum number of nodes for the cluster can be 3 and maximum can be 27 nodes. - Additional service groups can have 2 nodes minimum and 24 nodes maximum. - SingleNode cluster can have only 1 node.",
                            "example": 3
                          },
                          "services": {
                            "type": "array",
                            "description": "The couchbase service to run on the node. The allowed services for singleNode cluster are one or all of - data, index, query and search.",
                            "minItems": 1,
                            "uniqueItems": true,
                            "items": {
                              "type": "string",
                              "enum": [
                                "data",
                                "query",
                                "index",
                                "search",
                                "analytics",
                                "eventing"
                              ],
                              "example": "data"
                            }
                          }
                        }
                      }
                    },
                    "availability": {
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Availability zone type, either 'single' or 'multi'. Availability zone type allowed for singleNode cluster is only 'single'.",
                          "example": "single",
                          "enum": [
                            "single",
                            "multi"
                          ]
                        }
                      }
                    },
                    "support": {
                      "type": "object",
                      "required": [
                        "plan",
                        "timezone"
                      ],
                      "properties": {
                        "plan": {
                          "type": "string",
                          "description": "Plan type, either 'Basic', 'Developer Pro', or 'Enterprise'. \nPlan type allowed for singleNode cluster is either 'Basic', or 'Developer Pro'. \nIn case of 'Basic' plan timezone field value is ignored.\n\nFree tier plan is automatically assigned to free tier clusters.\n",
                          "enum": [
                            "free",
                            "basic",
                            "developer pro",
                            "enterprise"
                          ],
                          "example": "basic"
                        },
                        "timezone": {
                          "type": "string",
                          "description": "The standard timezone for the cluster. Should be the TZ identifier.",
                          "example": "ET",
                          "enum": [
                            "ET",
                            "GMT",
                            "IST",
                            "PT"
                          ]
                        }
                      }
                    },
                    "currentState": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "deploying",
                        "scaling",
                        "upgrading",
                        "rebalancing",
                        "peering",
                        "destroying",
                        "healthy",
                        "degraded",
                        "turnedOff",
                        "turningOff",
                        "turningOn",
                        "deploymentFailed",
                        "scaleFailed",
                        "upgradeFailed",
                        "rebalanceFailed",
                        "peeringFailed",
                        "destroyFailed",
                        "offline",
                        "turningOffFailed",
                        "turningOnFailed"
                      ],
                      "example": "deploying"
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    },
                    "cmekId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the CMEK Key."
                    },
                    "enablePrivateDNSResolution": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Free Tier Cluster",
        "description": "Updates an existing free tier cluster.  Only name and description are configurable.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "parameters": [
          {
            "name": "If-Match",
            "in": "header",
            "description": "A precondition header that specifies the entity tag of a resource.",
            "schema": {
              "type": "string",
              "example": "12"
            }
          }
        ],
        "tags": [
          "Free Tier"
        ],
        "operationId": "updateFreeTierCluster",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "The new name of the cluster (up to 256 characters).",
                    "example": "My-New-Cluster"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "The new cluster description (up to 1024 characters).",
                    "example": "The extended description of my new cluster."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully updated free tier cluster."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Free Tier Cluster",
        "description": "Deletes an existing free tier cluster.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Free Tier"
        ],
        "operationId": "deleteFreeTierCluster",
        "responses": {
          "202": {
            "description": "Successfully submitted request to delete the free tier cluster."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Cluster",
        "description": "Fetches the details of the given cluster.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Clusters"
        ],
        "operationId": "getCluster",
        "responses": {
          "200": {
            "headers": {
              "ETag": {
                "description": "Entity tag for the resource, used for caching and conditional requests.",
                "schema": {
                  "type": "string",
                  "example": "Version: 1",
                  "description": "An ETag is a unique identifier assigned to a specific version of a resource on a web server.\nIt allows the server to identify whether the version of the resource on the client side matches the version on the server side.\nThis field represents the ETag value returned by the server for a particular resource.\n"
                }
              }
            },
            "description": "Successfully fetched the cluster based on the clusterId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "description",
                    "configurationType",
                    "connectionString",
                    "cloudProvider",
                    "couchbaseServer",
                    "serviceGroups",
                    "availability",
                    "support",
                    "currentState",
                    "audit"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the cluster created."
                    },
                    "appServiceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the linked App Service."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the cluster (up to 256 characters).",
                      "example": "Test Cluster",
                      "maxLength": 256
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the cluster (up to 1024 characters).",
                      "example": "Description of the cluster",
                      "maxLength": 1024
                    },
                    "configurationType": {
                      "deprecated": true,
                      "type": "string",
                      "description": "- Multi-node databases are best for deployments that require high availability. If your app requires high performance and high availability, choose the Multi-node option.\n- Single-node databases have resource limitations that make them a good choice for learning, prototyping, and non-production uses. They have limited availability.\n- Single-node databases should contain only 1 node and 1 Service Group. Adding number of nodes or service groups > 1 is not allowed for such databases.\n- By default the configurationType is multiNode.\n",
                      "enum": [
                        "singleNode",
                        "multiNode"
                      ],
                      "default": [
                        "multiNode"
                      ],
                      "example": "multiNode"
                    },
                    "connectionString": {
                      "type": "string",
                      "description": "ConnectionString specifies the Capella database endpoint for your client connection.",
                      "example": "couchbases://cb.irxmynm6vekhe5.cloud.couchbase.com"
                    },
                    "cloudProvider": {
                      "type": "object",
                      "description": "The cloud provider where the cluster will be hosted.\nFor information about providers and supported regions, see:\n\n- [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html)\n\n- [Google Cloud Platform](https://docs.couchbase.com/cloud/reference/gcp.html)\n\n- [Microsoft Azure](https://docs.couchbase.com/cloud/reference/azure.html)\n",
                      "required": [
                        "type",
                        "region"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Cloud provider type. Note: For singleNode cluster, only AWS type cloud provider is allowed.\n\n1. `aws`: Amazon Web Services\n\n2. `gcp`: Google Cloud Platform\n\n3. `azure`: Microsoft Azure\n",
                          "enum": [
                            "aws",
                            "gcp",
                            "azure"
                          ],
                          "example": "aws"
                        },
                        "region": {
                          "type": "string",
                          "description": "Cloud provider region, for example `us-west-2`.",
                          "example": "us-east-1"
                        },
                        "cidr": {
                          "type": "string",
                          "pattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}$",
                          "description": "CIDR block for Cloud Provider.",
                          "example": "10.1.30.0/23"
                        }
                      }
                    },
                    "couchbaseServer": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "description": "Version of the Couchbase Server to be installed in the cluster. Refer to documentation [here](https://docs.couchbase.com/cloud/clusters/upgrade-database.html#server-version-maintenance-support) for list of supported versions. The latest Couchbase Server version will be deployed by default.",
                          "example": "7.1"
                        }
                      }
                    },
                    "serviceGroups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "node": {
                            "type": "object",
                            "required": [
                              "compute",
                              "disk"
                            ],
                            "properties": {
                              "compute": {
                                "type": "object",
                                "description": "Following are the supported compute combinations for CPU and RAM for different cloud providers.\nTo learn more, see [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html).",
                                "required": [
                                  "cpu",
                                  "ram"
                                ],
                                "properties": {
                                  "cpu": {
                                    "type": "integer",
                                    "description": "CPU units (cores).",
                                    "example": 4
                                  },
                                  "ram": {
                                    "type": "integer",
                                    "description": "RAM units (GB).",
                                    "example": 16
                                  }
                                }
                              },
                              "disk": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "storage",
                                      "iops"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of disk. Please choose from the given list for AWS cloud provider.",
                                        "enum": [
                                          "gp3",
                                          "io2"
                                        ],
                                        "example": "gp3"
                                      },
                                      "storage": {
                                        "type": "integer",
                                        "description": "Storage in GB. See documentation for supported storage.",
                                        "example": 50,
                                        "minimum": 50
                                      },
                                      "iops": {
                                        "type": "integer",
                                        "description": "Please refer to documentation for supported IOPS.",
                                        "example": 3000
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of disk. Please choose from the given list for Azure cloud provider.",
                                        "enum": [
                                          "P6",
                                          "P10",
                                          "P15",
                                          "P20",
                                          "P30",
                                          "P40",
                                          "P50",
                                          "P60",
                                          "Ultra"
                                        ]
                                      },
                                      "storage": {
                                        "type": "integer",
                                        "description": "Storage in GB. Only required for Ultra Disk types. Not used in other storage types.",
                                        "enum": [
                                          64,
                                          128,
                                          256,
                                          512,
                                          1024,
                                          2048,
                                          3072,
                                          4096,
                                          5120,
                                          6144,
                                          7168,
                                          8192,
                                          9216,
                                          10240,
                                          11264,
                                          12288,
                                          13312,
                                          14336,
                                          15360
                                        ],
                                        "example": 64,
                                        "minimum": 64
                                      },
                                      "iops": {
                                        "type": "integer",
                                        "description": "Only required for Ultra Disk types. Not used in other storage types. See [IOPS Defaults](https://docs.couchbase.com/cloud/clusters/scale-database.html#IOPS-Defaults) for a list of supported IOPS values.",
                                        "example": 3000
                                      },
                                      "autoExpansion": {
                                        "type": "boolean",
                                        "description": "Determine if disk storage should automatically expand. Defaults to \"false\" if not specified.",
                                        "example": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "storage"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of disk. Please choose from the given list for GCP cloud provider.",
                                        "enum": [
                                          "pd-ssd"
                                        ]
                                      },
                                      "storage": {
                                        "type": "integer",
                                        "description": "Storage in GB. Please refer to documentation for supported storage.",
                                        "example": 50,
                                        "minimum": 50
                                      }
                                    }
                                  }
                                ],
                                "example": {
                                  "type": "gp3",
                                  "storage": 50,
                                  "iops": 3000
                                }
                              }
                            }
                          },
                          "numOfNodes": {
                            "type": "integer",
                            "description": "Number of nodes. The minimum number of nodes for the cluster can be 3 and maximum can be 27 nodes. - Additional service groups can have 2 nodes minimum and 24 nodes maximum. - SingleNode cluster can have only 1 node.",
                            "example": 3
                          },
                          "services": {
                            "type": "array",
                            "description": "The couchbase service to run on the node. The allowed services for singleNode cluster are one or all of - data, index, query and search.",
                            "minItems": 1,
                            "uniqueItems": true,
                            "items": {
                              "type": "string",
                              "enum": [
                                "data",
                                "query",
                                "index",
                                "search",
                                "analytics",
                                "eventing"
                              ],
                              "example": "data"
                            }
                          }
                        }
                      }
                    },
                    "availability": {
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Availability zone type, either 'single' or 'multi'. Availability zone type allowed for singleNode cluster is only 'single'.",
                          "example": "single",
                          "enum": [
                            "single",
                            "multi"
                          ]
                        }
                      }
                    },
                    "support": {
                      "type": "object",
                      "required": [
                        "plan",
                        "timezone"
                      ],
                      "properties": {
                        "plan": {
                          "type": "string",
                          "description": "Plan type, either 'Basic', 'Developer Pro', or 'Enterprise'. \nPlan type allowed for singleNode cluster is either 'Basic', or 'Developer Pro'. \nIn case of 'Basic' plan timezone field value is ignored.\n\nFree tier plan is automatically assigned to free tier clusters.\n",
                          "enum": [
                            "free",
                            "basic",
                            "developer pro",
                            "enterprise"
                          ],
                          "example": "basic"
                        },
                        "timezone": {
                          "type": "string",
                          "description": "The standard timezone for the cluster. Should be the TZ identifier.",
                          "example": "ET",
                          "enum": [
                            "ET",
                            "GMT",
                            "IST",
                            "PT"
                          ]
                        }
                      }
                    },
                    "currentState": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "deploying",
                        "scaling",
                        "upgrading",
                        "rebalancing",
                        "peering",
                        "destroying",
                        "healthy",
                        "degraded",
                        "turnedOff",
                        "turningOff",
                        "turningOn",
                        "deploymentFailed",
                        "scaleFailed",
                        "upgradeFailed",
                        "rebalanceFailed",
                        "peeringFailed",
                        "destroyFailed",
                        "offline",
                        "turningOffFailed",
                        "turningOnFailed"
                      ],
                      "example": "deploying"
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    },
                    "cmekId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the CMEK Key."
                    },
                    "enablePrivateDNSResolution": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "Updates an existing cluster.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "parameters": [
          {
            "name": "If-Match",
            "in": "header",
            "description": "A precondition header that specifies the entity tag of a resource.",
            "schema": {
              "type": "string",
              "example": "12"
            }
          }
        ],
        "tags": [
          "Clusters"
        ],
        "operationId": "putCluster",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description",
                  "serviceGroups",
                  "support"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "The new name of the cluster (up to 256 characters).",
                    "example": "My-New-Cluster"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "The new cluster description (up to 1024 characters).",
                    "example": "The extended description of my new cluster."
                  },
                  "support": {
                    "type": "object",
                    "required": [
                      "plan"
                    ],
                    "properties": {
                      "plan": {
                        "type": "string",
                        "description": "Plan type, either 'Basic', 'Developer Pro', or 'Enterprise'. \nPlan type allowed for singleNode cluster is either 'Basic', or 'Developer Pro'. \nIn case of 'Basic' plan timezone field value is ignored.\n\nFree tier plan is automatically assigned to free tier clusters.\n",
                        "enum": [
                          "free",
                          "basic",
                          "developer pro",
                          "enterprise"
                        ],
                        "example": "basic"
                      },
                      "timezone": {
                        "type": "string",
                        "description": "The standard timezone for the cluster. Should be the TZ identifier.",
                        "example": "ET",
                        "enum": [
                          "ET",
                          "GMT",
                          "IST",
                          "PT"
                        ]
                      }
                    }
                  },
                  "serviceGroups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "node": {
                          "type": "object",
                          "required": [
                            "compute",
                            "disk"
                          ],
                          "properties": {
                            "compute": {
                              "type": "object",
                              "description": "Following are the supported compute combinations for CPU and RAM for different cloud providers.\nTo learn more, see [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html).",
                              "required": [
                                "cpu",
                                "ram"
                              ],
                              "properties": {
                                "cpu": {
                                  "type": "integer",
                                  "description": "CPU units (cores).",
                                  "example": 4
                                },
                                "ram": {
                                  "type": "integer",
                                  "description": "RAM units (GB).",
                                  "example": 16
                                }
                              }
                            },
                            "disk": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "storage",
                                    "iops"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Type of disk. Please choose from the given list for AWS cloud provider.",
                                      "enum": [
                                        "gp3",
                                        "io2"
                                      ],
                                      "example": "gp3"
                                    },
                                    "storage": {
                                      "type": "integer",
                                      "description": "Storage in GB. See documentation for supported storage.",
                                      "example": 50,
                                      "minimum": 50
                                    },
                                    "iops": {
                                      "type": "integer",
                                      "description": "Please refer to documentation for supported IOPS.",
                                      "example": 3000
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Type of disk. Please choose from the given list for Azure cloud provider.",
                                      "enum": [
                                        "P6",
                                        "P10",
                                        "P15",
                                        "P20",
                                        "P30",
                                        "P40",
                                        "P50",
                                        "P60",
                                        "Ultra"
                                      ]
                                    },
                                    "storage": {
                                      "type": "integer",
                                      "description": "Storage in GB. Only required for Ultra Disk types. Not used in other storage types.",
                                      "enum": [
                                        64,
                                        128,
                                        256,
                                        512,
                                        1024,
                                        2048,
                                        3072,
                                        4096,
                                        5120,
                                        6144,
                                        7168,
                                        8192,
                                        9216,
                                        10240,
                                        11264,
                                        12288,
                                        13312,
                                        14336,
                                        15360
                                      ],
                                      "example": 64,
                                      "minimum": 64
                                    },
                                    "iops": {
                                      "type": "integer",
                                      "description": "Only required for Ultra Disk types. Not used in other storage types. See [IOPS Defaults](https://docs.couchbase.com/cloud/clusters/scale-database.html#IOPS-Defaults) for a list of supported IOPS values.",
                                      "example": 3000
                                    },
                                    "autoExpansion": {
                                      "type": "boolean",
                                      "description": "Determine if disk storage should automatically expand. Defaults to \"false\" if not specified.",
                                      "example": false
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "storage"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Type of disk. Please choose from the given list for GCP cloud provider.",
                                      "enum": [
                                        "pd-ssd"
                                      ]
                                    },
                                    "storage": {
                                      "type": "integer",
                                      "description": "Storage in GB. Please refer to documentation for supported storage.",
                                      "example": 50,
                                      "minimum": 50
                                    }
                                  }
                                }
                              ],
                              "example": {
                                "type": "gp3",
                                "storage": 50,
                                "iops": 3000
                              }
                            }
                          }
                        },
                        "numOfNodes": {
                          "type": "integer",
                          "description": "Number of nodes. The minimum number of nodes for the cluster can be 3 and maximum can be 27 nodes. - Additional service groups can have 2 nodes minimum and 24 nodes maximum. - SingleNode cluster can have only 1 node.",
                          "example": 3
                        },
                        "services": {
                          "type": "array",
                          "description": "The couchbase service to run on the node. The allowed services for singleNode cluster are one or all of - data, index, query and search.",
                          "minItems": 1,
                          "uniqueItems": true,
                          "items": {
                            "type": "string",
                            "enum": [
                              "data",
                              "query",
                              "index",
                              "search",
                              "analytics",
                              "eventing"
                            ],
                            "example": "data"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully submitted request to update cluster."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Cluster",
        "description": "Deletes an existing cluster.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Clusters"
        ],
        "operationId": "deleteCluster",
        "parameters": [
          {
            "name": "retainsnapshotbackups",
            "in": "query",
            "description": "Retain snapshot backups parameter specifies whether to retain snapshot backups after cluster deletion.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successfully deleted the cluster by its clusterId."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/freeTier/{clusterId}/activationState": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Turn On Free Tier Cluster",
        "description": "Turn free tier cluster on.  It will also turn on the linked app services, if any.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Free Tier"
        ],
        "operationId": "freeTierClusterOn",
        "responses": {
          "202": {
            "description": "Successfully switched the free tier cluster to on state."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Turn Off Free Tier Cluster",
        "description": "Turn free tier cluster off.\n\n- Turning off your cluster turns off the compute for your cluster but the storage remains.\nAll of the data, schema (buckets, scopes, and collections), and indexes remain, as well as cluster configuration, including users and allow lists.\n\n- Turning off cluster will also turn off any linked app services.\n\n In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Free Tier"
        ],
        "operationId": "freeTierClusterOff",
        "responses": {
          "202": {
            "description": "Successfully switched the free tier cluster to off state."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/activationState": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Turn On Cluster",
        "description": "Turn cluster on.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Clusters"
        ],
        "operationId": "clusterOn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "turnOnLinkedAppService": {
                    "type": "boolean",
                    "description": "Set this value to true if you want to turn on the app service linked with the cluster, false if not.\nIf set to true, the app service, if present, will turn on with the cluster.\nDefault value for this is false, which means the linked app service will be kept off.\n",
                    "default": false
                  }
                }
              },
              "examples": {
                "ClusterOnAppServiceOn": {
                  "value": {
                    "turnOnLinkedAppService": true
                  }
                },
                "ClusterOnAppServiceOff": {
                  "value": {
                    "turnOnLinkedAppService": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successfully switched the cluster to on state."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Turn Off Cluster",
        "description": "Turn cluster off.\n\n- Turning off your cluster turns off the compute for your cluster but the storage remains.\nAll of the data, schema (buckets, scopes, and collections), and indexes remain, as well as cluster configuration, including users and allow lists.\n\n- Turning off cluster will also turn off any linked app services.\n\n In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Clusters"
        ],
        "operationId": "clusterOff",
        "responses": {
          "202": {
            "description": "Successfully switched the cluster to off state."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/onOffSchedule": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create Cluster On/Off schedule",
        "description": "This provides the means to add a new cluster on/off schedule.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "On/Off Schedule"
        ],
        "operationId": "postOnOffSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Cluster schedule on/off .",
                "type": "object",
                "required": [
                  "timezone",
                  "days"
                ],
                "properties": {
                  "timezone": {
                    "type": "string",
                    "description": "Timezone for the schedule",
                    "enum": [
                      "Pacific/Midway",
                      "US/Hawaii",
                      "US/Alaska",
                      "US/Pacific",
                      "US/Mountain",
                      "US/Central",
                      "US/Eastern",
                      "America/Puerto_Rico",
                      "Canada/Newfoundland",
                      "America/Argentina/Buenos_Aires",
                      "Atlantic/Cape_Verde",
                      "Europe/London",
                      "Europe/Amsterdam",
                      "Europe/Athens",
                      "Africa/Nairobi",
                      "Asia/Tehran",
                      "Indian/Mauritius",
                      "Asia/Karachi",
                      "Asia/Calcutta",
                      "Asia/Dhaka",
                      "Asia/Bangkok",
                      "Asia/Hong_Kong",
                      "Asia/Tokyo",
                      "Australia/North",
                      "Australia/Sydney",
                      "Pacific/Ponape",
                      "Antarctica/South_Pole"
                    ],
                    "example": "US/Pacific"
                  },
                  "days": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "state",
                        "day"
                      ],
                      "properties": {
                        "state": {
                          "type": "string",
                          "enum": [
                            "on",
                            "off",
                            "custom"
                          ],
                          "description": "Cluster state (on, off, or custom).\n- On state turns the cluster on (healthy state) for the whole day.\n- Off state turns the cluster off for the whole day.\n- Custom state should be used for the days when a cluster needs to be in the turned on (healthy) state during the specified time window instead of all day.\n"
                        },
                        "day": {
                          "type": "string",
                          "description": "Day of the week for scheduling on/off.\n- The days of the week should be in proper sequence starting from Monday and ending with Sunday.\n- The On/Off schedule requires 7 days for the schedule, one for each day of the week. There cannot be more or less than 7 days in the schedule.\n- Clusters cannot be scheduled to be off for the entire day for every day of the week.\n",
                          "enum": [
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday",
                            "sunday"
                          ]
                        },
                        "from": {
                          "description": "OnTimeBoundary corresponds to \"from\" and \"to\" time boundaries for when the cluster needs to be in the turned on (healthy) state on a day with \"custom\" scheduling timings.\nThe time boundary should be according to the following rules:\n  - If the schedule is a non-custom day - with state `on` or `off`, it cannot contain a time boundary.\n  - If the schedule is a `custom` day -\n      - It should contain the `from` time boundary. If the `to` time boundary is not specified then the default value of 0 hour 0 minute is set and the cluster will be turned on for the entire day from the time set in `from` time boundary.\n      - Time boundary should have a valid `hour` value. The valid hour values are from 0 to 23 inclusive.\n      - Time boundary should have a valid `minute` value. The valid minute values are 0 and 30.\n      - The `from` time boundary should not be later than the `to` time boundary.\n      - If the `hour` and `minute` values are not provided for the time boundaries, it is set to a default value of 0 for both. (0 hour 0 minute)\n",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "type": "integer",
                              "description": "Hour of the time boundary.",
                              "example": 21,
                              "default": 0
                            },
                            "minute": {
                              "type": "integer",
                              "description": "Minute of the time boundary.",
                              "example": 30,
                              "default": 0
                            }
                          }
                        },
                        "to": {
                          "description": "OnTimeBoundary corresponds to \"from\" and \"to\" time boundaries for when the cluster needs to be in the turned on (healthy) state on a day with \"custom\" scheduling timings.\nThe time boundary should be according to the following rules:\n  - If the schedule is a non-custom day - with state `on` or `off`, it cannot contain a time boundary.\n  - If the schedule is a `custom` day -\n      - It should contain the `from` time boundary. If the `to` time boundary is not specified then the default value of 0 hour 0 minute is set and the cluster will be turned on for the entire day from the time set in `from` time boundary.\n      - Time boundary should have a valid `hour` value. The valid hour values are from 0 to 23 inclusive.\n      - Time boundary should have a valid `minute` value. The valid minute values are 0 and 30.\n      - The `from` time boundary should not be later than the `to` time boundary.\n      - If the `hour` and `minute` values are not provided for the time boundaries, it is set to a default value of 0 for both. (0 hour 0 minute)\n",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "type": "integer",
                              "description": "Hour of the time boundary.",
                              "example": 21,
                              "default": 0
                            },
                            "minute": {
                              "type": "integer",
                              "description": "Minute of the time boundary.",
                              "example": 30,
                              "default": 0
                            }
                          }
                        }
                      }
                    },
                    "example": [
                      {
                        "day": "monday",
                        "state": "custom",
                        "from": {
                          "hour": 12,
                          "minute": 30
                        },
                        "to": {
                          "hour": 14,
                          "minute": 30
                        }
                      },
                      {
                        "day": "tuesday",
                        "state": "custom",
                        "from": {
                          "hour": 12,
                          "minute": 30
                        },
                        "to": {
                          "hour": 14,
                          "minute": 30
                        }
                      },
                      {
                        "day": "wednesday",
                        "state": "on"
                      },
                      {
                        "day": "thursday",
                        "state": "on"
                      },
                      {
                        "day": "friday",
                        "state": "custom",
                        "from": {
                          "hour": 12,
                          "minute": 30
                        },
                        "to": {
                          "hour": 14,
                          "minute": 30
                        }
                      },
                      {
                        "day": "saturday",
                        "state": "off"
                      },
                      {
                        "day": "sunday",
                        "state": "off"
                      }
                    ]
                  }
                }
              },
              "examples": {
                "PostClusterOnOffSchedule": {
                  "value": {
                    "timezone": "US/Pacific",
                    "days": [
                      {
                        "day": "monday",
                        "state": "custom",
                        "from": {
                          "hour": 12,
                          "minute": 30
                        },
                        "to": {
                          "hour": 14,
                          "minute": 30
                        }
                      },
                      {
                        "day": "tuesday",
                        "state": "custom",
                        "from": {
                          "hour": 21,
                          "minute": 30
                        },
                        "to": {
                          "hour": 23,
                          "minute": 30
                        }
                      },
                      {
                        "day": "wednesday",
                        "state": "on"
                      },
                      {
                        "day": "thursday",
                        "state": "on"
                      },
                      {
                        "day": "friday",
                        "state": "custom",
                        "from": {
                          "hour": 12,
                          "minute": 30
                        },
                        "to": {
                          "hour": 15,
                          "minute": 30
                        }
                      },
                      {
                        "day": "saturday",
                        "state": "off"
                      },
                      {
                        "day": "sunday",
                        "state": "off"
                      }
                    ]
                  }
                },
                "PostClusterOnOffScheduleDefaultBoundaryWithoutToBody": {
                  "value": {
                    "timezone": "US/Pacific",
                    "days": [
                      {
                        "day": "monday",
                        "state": "custom",
                        "from": {
                          "hour": 14,
                          "minute": 30
                        }
                      },
                      {
                        "day": "tuesday",
                        "state": "custom",
                        "from": {
                          "hour": 22,
                          "minute": 30
                        }
                      },
                      {
                        "day": "wednesday",
                        "state": "on"
                      },
                      {
                        "day": "thursday",
                        "state": "on"
                      },
                      {
                        "day": "friday",
                        "state": "custom",
                        "from": {
                          "hour": 12,
                          "minute": 30
                        }
                      },
                      {
                        "day": "saturday",
                        "state": "off"
                      },
                      {
                        "day": "sunday",
                        "state": "off"
                      }
                    ]
                  }
                },
                "PostClusterOnOffScheduleDefaultsBoundaryWithoutHourMinute": {
                  "value": {
                    "timezone": "US/Pacific",
                    "days": [
                      {
                        "day": "monday",
                        "state": "custom",
                        "from": {
                          "hour": 12,
                          "minute": 30
                        },
                        "to": {
                          "hour": 14,
                          "minute": 30
                        }
                      },
                      {
                        "day": "tuesday",
                        "state": "custom",
                        "from": {
                          "hour": null,
                          "minute": null
                        },
                        "to": {
                          "hour": 14,
                          "minute": null
                        }
                      },
                      {
                        "day": "wednesday",
                        "state": "on"
                      },
                      {
                        "day": "thursday",
                        "state": "on"
                      },
                      {
                        "day": "friday",
                        "state": "custom",
                        "from": {
                          "hour": 15,
                          "minute": null
                        }
                      },
                      {
                        "day": "saturday",
                        "state": "off"
                      },
                      {
                        "day": "sunday",
                        "state": "off"
                      }
                    ]
                  }
                },
                "PostClusterOnOffScheduleDefaultsBoundary": {
                  "value": {
                    "timezone": "US/Pacific",
                    "days": [
                      {
                        "day": "monday",
                        "state": "custom",
                        "from": {
                          "hour": null,
                          "minute": 30
                        },
                        "to": {
                          "hour": 5,
                          "minute": 30
                        }
                      },
                      {
                        "day": "tuesday",
                        "state": "custom",
                        "from": {
                          "hour": 21,
                          "minute": null
                        },
                        "to": null
                      },
                      {
                        "day": "wednesday",
                        "state": "on"
                      },
                      {
                        "day": "thursday",
                        "state": "on"
                      },
                      {
                        "day": "friday",
                        "state": "custom",
                        "from": {
                          "hour": 12,
                          "minute": 30
                        },
                        "to": {
                          "hour": 14,
                          "minute": null
                        }
                      },
                      {
                        "day": "saturday",
                        "state": "off"
                      },
                      {
                        "day": "sunday",
                        "state": "off"
                      }
                    ]
                  }
                },
                "PostClusterOnOffScheduleDefaultsBoundaryWithoutHourMinuteBody": {
                  "value": {
                    "timezone": "US/Pacific",
                    "days": [
                      {
                        "day": "monday",
                        "state": "custom",
                        "from": {
                          "minute": 30
                        },
                        "to": {
                          "hour": 14,
                          "minute": 30
                        }
                      },
                      {
                        "day": "tuesday",
                        "state": "custom",
                        "from": {
                          "hour": 21
                        },
                        "to": {
                          "hour": 23
                        }
                      },
                      {
                        "day": "wednesday",
                        "state": "on"
                      },
                      {
                        "day": "thursday",
                        "state": "on"
                      },
                      {
                        "day": "friday",
                        "state": "custom",
                        "from": {
                          "hour": 12
                        },
                        "to": {
                          "hour": 15,
                          "minute": 30
                        }
                      },
                      {
                        "day": "saturday",
                        "state": "off"
                      },
                      {
                        "day": "sunday",
                        "state": "off"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully created the cluster on/off schedule based on the clusterId."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Cluster On/Off schedule",
        "description": "Fetches the details of the cluster on/off schedule for the given cluster.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "On/Off Schedule"
        ],
        "operationId": "getOnOffSchedule",
        "responses": {
          "200": {
            "description": "Successfully fetched the cluster on/off schedule based on the clusterId.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Cluster schedule on/off .",
                  "type": "object",
                  "required": [
                    "timezone",
                    "days"
                  ],
                  "properties": {
                    "timezone": {
                      "type": "string",
                      "description": "Timezone for the schedule",
                      "enum": [
                        "Pacific/Midway",
                        "US/Hawaii",
                        "US/Alaska",
                        "US/Pacific",
                        "US/Mountain",
                        "US/Central",
                        "US/Eastern",
                        "America/Puerto_Rico",
                        "Canada/Newfoundland",
                        "America/Argentina/Buenos_Aires",
                        "Atlantic/Cape_Verde",
                        "Europe/London",
                        "Europe/Amsterdam",
                        "Europe/Athens",
                        "Africa/Nairobi",
                        "Asia/Tehran",
                        "Indian/Mauritius",
                        "Asia/Karachi",
                        "Asia/Calcutta",
                        "Asia/Dhaka",
                        "Asia/Bangkok",
                        "Asia/Hong_Kong",
                        "Asia/Tokyo",
                        "Australia/North",
                        "Australia/Sydney",
                        "Pacific/Ponape",
                        "Antarctica/South_Pole"
                      ],
                      "example": "US/Pacific"
                    },
                    "days": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "state",
                          "day"
                        ],
                        "properties": {
                          "state": {
                            "type": "string",
                            "enum": [
                              "on",
                              "off",
                              "custom"
                            ],
                            "description": "Cluster state (on, off, or custom).\n- On state turns the cluster on (healthy state) for the whole day.\n- Off state turns the cluster off for the whole day.\n- Custom state should be used for the days when a cluster needs to be in the turned on (healthy) state during the specified time window instead of all day.\n"
                          },
                          "day": {
                            "type": "string",
                            "description": "Day of the week for scheduling on/off.\n- The days of the week should be in proper sequence starting from Monday and ending with Sunday.\n- The On/Off schedule requires 7 days for the schedule, one for each day of the week. There cannot be more or less than 7 days in the schedule.\n- Clusters cannot be scheduled to be off for the entire day for every day of the week.\n",
                            "enum": [
                              "monday",
                              "tuesday",
                              "wednesday",
                              "thursday",
                              "friday",
                              "saturday",
                              "sunday"
                            ]
                          },
                          "from": {
                            "description": "OnTimeBoundary corresponds to \"from\" and \"to\" time boundaries for when the cluster needs to be in the turned on (healthy) state on a day with \"custom\" scheduling timings.\nThe time boundary should be according to the following rules:\n  - If the schedule is a non-custom day - with state `on` or `off`, it cannot contain a time boundary.\n  - If the schedule is a `custom` day -\n      - It should contain the `from` time boundary. If the `to` time boundary is not specified then the default value of 0 hour 0 minute is set and the cluster will be turned on for the entire day from the time set in `from` time boundary.\n      - Time boundary should have a valid `hour` value. The valid hour values are from 0 to 23 inclusive.\n      - Time boundary should have a valid `minute` value. The valid minute values are 0 and 30.\n      - The `from` time boundary should not be later than the `to` time boundary.\n      - If the `hour` and `minute` values are not provided for the time boundaries, it is set to a default value of 0 for both. (0 hour 0 minute)\n",
                            "type": "object",
                            "properties": {
                              "hour": {
                                "type": "integer",
                                "description": "Hour of the time boundary.",
                                "example": 21,
                                "default": 0
                              },
                              "minute": {
                                "type": "integer",
                                "description": "Minute of the time boundary.",
                                "example": 30,
                                "default": 0
                              }
                            }
                          },
                          "to": {
                            "description": "OnTimeBoundary corresponds to \"from\" and \"to\" time boundaries for when the cluster needs to be in the turned on (healthy) state on a day with \"custom\" scheduling timings.\nThe time boundary should be according to the following rules:\n  - If the schedule is a non-custom day - with state `on` or `off`, it cannot contain a time boundary.\n  - If the schedule is a `custom` day -\n      - It should contain the `from` time boundary. If the `to` time boundary is not specified then the default value of 0 hour 0 minute is set and the cluster will be turned on for the entire day from the time set in `from` time boundary.\n      - Time boundary should have a valid `hour` value. The valid hour values are from 0 to 23 inclusive.\n      - Time boundary should have a valid `minute` value. The valid minute values are 0 and 30.\n      - The `from` time boundary should not be later than the `to` time boundary.\n      - If the `hour` and `minute` values are not provided for the time boundaries, it is set to a default value of 0 for both. (0 hour 0 minute)\n",
                            "type": "object",
                            "properties": {
                              "hour": {
                                "type": "integer",
                                "description": "Hour of the time boundary.",
                                "example": 21,
                                "default": 0
                              },
                              "minute": {
                                "type": "integer",
                                "description": "Minute of the time boundary.",
                                "example": 30,
                                "default": 0
                              }
                            }
                          }
                        }
                      },
                      "example": [
                        {
                          "day": "monday",
                          "state": "custom",
                          "from": {
                            "hour": 12,
                            "minute": 30
                          },
                          "to": {
                            "hour": 14,
                            "minute": 30
                          }
                        },
                        {
                          "day": "tuesday",
                          "state": "custom",
                          "from": {
                            "hour": 12,
                            "minute": 30
                          },
                          "to": {
                            "hour": 14,
                            "minute": 30
                          }
                        },
                        {
                          "day": "wednesday",
                          "state": "on"
                        },
                        {
                          "day": "thursday",
                          "state": "on"
                        },
                        {
                          "day": "friday",
                          "state": "custom",
                          "from": {
                            "hour": 12,
                            "minute": 30
                          },
                          "to": {
                            "hour": 14,
                            "minute": 30
                          }
                        },
                        {
                          "day": "saturday",
                          "state": "off"
                        },
                        {
                          "day": "sunday",
                          "state": "off"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Cluster On/Off schedule",
        "description": "This provides the means to update an existing cluster on/off schedule.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "On/Off Schedule"
        ],
        "operationId": "putOnOffSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Cluster schedule on/off .",
                "type": "object",
                "required": [
                  "timezone",
                  "days"
                ],
                "properties": {
                  "timezone": {
                    "type": "string",
                    "description": "Timezone for the schedule",
                    "enum": [
                      "Pacific/Midway",
                      "US/Hawaii",
                      "US/Alaska",
                      "US/Pacific",
                      "US/Mountain",
                      "US/Central",
                      "US/Eastern",
                      "America/Puerto_Rico",
                      "Canada/Newfoundland",
                      "America/Argentina/Buenos_Aires",
                      "Atlantic/Cape_Verde",
                      "Europe/London",
                      "Europe/Amsterdam",
                      "Europe/Athens",
                      "Africa/Nairobi",
                      "Asia/Tehran",
                      "Indian/Mauritius",
                      "Asia/Karachi",
                      "Asia/Calcutta",
                      "Asia/Dhaka",
                      "Asia/Bangkok",
                      "Asia/Hong_Kong",
                      "Asia/Tokyo",
                      "Australia/North",
                      "Australia/Sydney",
                      "Pacific/Ponape",
                      "Antarctica/South_Pole"
                    ],
                    "example": "US/Pacific"
                  },
                  "days": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "state",
                        "day"
                      ],
                      "properties": {
                        "state": {
                          "type": "string",
                          "enum": [
                            "on",
                            "off",
                            "custom"
                          ],
                          "description": "Cluster state (on, off, or custom).\n- On state turns the cluster on (healthy state) for the whole day.\n- Off state turns the cluster off for the whole day.\n- Custom state should be used for the days when a cluster needs to be in the turned on (healthy) state during the specified time window instead of all day.\n"
                        },
                        "day": {
                          "type": "string",
                          "description": "Day of the week for scheduling on/off.\n- The days of the week should be in proper sequence starting from Monday and ending with Sunday.\n- The On/Off schedule requires 7 days for the schedule, one for each day of the week. There cannot be more or less than 7 days in the schedule.\n- Clusters cannot be scheduled to be off for the entire day for every day of the week.\n",
                          "enum": [
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday",
                            "sunday"
                          ]
                        },
                        "from": {
                          "description": "OnTimeBoundary corresponds to \"from\" and \"to\" time boundaries for when the cluster needs to be in the turned on (healthy) state on a day with \"custom\" scheduling timings.\nThe time boundary should be according to the following rules:\n  - If the schedule is a non-custom day - with state `on` or `off`, it cannot contain a time boundary.\n  - If the schedule is a `custom` day -\n      - It should contain the `from` time boundary. If the `to` time boundary is not specified then the default value of 0 hour 0 minute is set and the cluster will be turned on for the entire day from the time set in `from` time boundary.\n      - Time boundary should have a valid `hour` value. The valid hour values are from 0 to 23 inclusive.\n      - Time boundary should have a valid `minute` value. The valid minute values are 0 and 30.\n      - The `from` time boundary should not be later than the `to` time boundary.\n      - If the `hour` and `minute` values are not provided for the time boundaries, it is set to a default value of 0 for both. (0 hour 0 minute)\n",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "type": "integer",
                              "description": "Hour of the time boundary.",
                              "example": 21,
                              "default": 0
                            },
                            "minute": {
                              "type": "integer",
                              "description": "Minute of the time boundary.",
                              "example": 30,
                              "default": 0
                            }
                          }
                        },
                        "to": {
                          "description": "OnTimeBoundary corresponds to \"from\" and \"to\" time boundaries for when the cluster needs to be in the turned on (healthy) state on a day with \"custom\" scheduling timings.\nThe time boundary should be according to the following rules:\n  - If the schedule is a non-custom day - with state `on` or `off`, it cannot contain a time boundary.\n  - If the schedule is a `custom` day -\n      - It should contain the `from` time boundary. If the `to` time boundary is not specified then the default value of 0 hour 0 minute is set and the cluster will be turned on for the entire day from the time set in `from` time boundary.\n      - Time boundary should have a valid `hour` value. The valid hour values are from 0 to 23 inclusive.\n      - Time boundary should have a valid `minute` value. The valid minute values are 0 and 30.\n      - The `from` time boundary should not be later than the `to` time boundary.\n      - If the `hour` and `minute` values are not provided for the time boundaries, it is set to a default value of 0 for both. (0 hour 0 minute)\n",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "type": "integer",
                              "description": "Hour of the time boundary.",
                              "example": 21,
                              "default": 0
                            },
                            "minute": {
                              "type": "integer",
                              "description": "Minute of the time boundary.",
                              "example": 30,
                              "default": 0
                            }
                          }
                        }
                      }
                    },
                    "example": [
                      {
                        "day": "monday",
                        "state": "custom",
                        "from": {
                          "hour": 12,
                          "minute": 30
                        },
                        "to": {
                          "hour": 14,
                          "minute": 30
                        }
                      },
                      {
                        "day": "tuesday",
                        "state": "custom",
                        "from": {
                          "hour": 12,
                          "minute": 30
                        },
                        "to": {
                          "hour": 14,
                          "minute": 30
                        }
                      },
                      {
                        "day": "wednesday",
                        "state": "on"
                      },
                      {
                        "day": "thursday",
                        "state": "on"
                      },
                      {
                        "day": "friday",
                        "state": "custom",
                        "from": {
                          "hour": 12,
                          "minute": 30
                        },
                        "to": {
                          "hour": 14,
                          "minute": 30
                        }
                      },
                      {
                        "day": "saturday",
                        "state": "off"
                      },
                      {
                        "day": "sunday",
                        "state": "off"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully updated the cluster on/off schedule based on the clusterId."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Cluster On/Off schedule",
        "description": "Deletes the cluster on/off schedule for the given cluster.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "On/Off Schedule"
        ],
        "operationId": "deleteOnOffSchedule",
        "responses": {
          "204": {
            "description": "Successfully deleted the cluster on/off schedule by its clusterId."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/auditLog": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "put": {
        "summary": "Update Cluster Audit Log Configuration",
        "description": "Updates the audit log configuration for the cluster.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n  - Organization Owner\n  - Project Owner\n  - Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Audit Logs"
        ],
        "operationId": "putClusterAuditSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "auditEnabled",
                  "disabledUsers",
                  "enabledEventIDs"
                ],
                "properties": {
                  "auditEnabled": {
                    "type": "boolean",
                    "description": "Determines whether audit logging is enabled or not on the cluster.",
                    "example": true
                  },
                  "disabledUsers": {
                    "type": "array",
                    "description": "List of users whose filterable events will not be logged.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "domain": {
                          "type": "string",
                          "description": "Specifies whether the user is local or external.",
                          "example": "local"
                        },
                        "name": {
                          "type": "string",
                          "description": "The user name.",
                          "example": "dfelton"
                        }
                      }
                    }
                  },
                  "enabledEventIDs": {
                    "type": "array",
                    "description": "List of enabled filterable audit events for the cluster.",
                    "items": {
                      "type": "integer",
                      "format": "int32",
                      "example": [
                        8243,
                        8255
                      ]
                    }
                  }
                }
              },
              "examples": {
                "PutClusterEnableAuditLogging": {
                  "value": {
                    "auditEnabled": true,
                    "disabledUsers": [
                      {
                        "domain": "local",
                        "name": "@eventing"
                      }
                    ],
                    "enabledEventIDs": [
                      8243,
                      8255
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully updated the cluster audit log configuration."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Cluster Audit Log Configuration",
        "description": "Fetches information on whether audit logging is enabled, and which event IDs are enabled.\n\nTo learn more about cluster audit logs, please refer to [audit management](https://docs.couchbase.com/cloud/security/audit-management.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Audit Logs"
        ],
        "operationId": "getClusterAuditSettings",
        "responses": {
          "200": {
            "description": "Successfully retrieved the cluster audit log settings.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "auditEnabled",
                    "disabledUsers",
                    "enabledEventIDs"
                  ],
                  "properties": {
                    "auditEnabled": {
                      "type": "boolean",
                      "description": "Determines whether audit logging is enabled or not on the cluster.",
                      "example": true
                    },
                    "disabledUsers": {
                      "type": "array",
                      "description": "List of users whose filterable events will not be logged.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "domain": {
                            "type": "string",
                            "description": "Specifies whether the user is local or external.",
                            "example": "local"
                          },
                          "name": {
                            "type": "string",
                            "description": "The user name.",
                            "example": "dfelton"
                          }
                        }
                      }
                    },
                    "enabledEventIDs": {
                      "type": "array",
                      "description": "List of enabled filterable audit events for the cluster.",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "example": [
                          8243,
                          8255
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/auditLogEvents": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "List Filterable Audit Log Events",
        "description": "Retrieves a list of audit event IDs. The list of filterable event IDs can be specified while configuring audit log for cluster.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Audit Logs"
        ],
        "operationId": "getAuditLogEventIDs",
        "responses": {
          "200": {
            "description": "Successfully retrieved audit event Ids.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "events"
                  ],
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "description",
                          "id",
                          "module",
                          "name"
                        ],
                        "properties": {
                          "description": {
                            "type": "string",
                            "example": "Document was mutated via the REST API"
                          },
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "example": 8243
                          },
                          "module": {
                            "type": "string",
                            "example": "ns_server"
                          },
                          "name": {
                            "type": "string",
                            "example": "mutate document"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/auditLogExports": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create Cluster Audit Log Export job",
        "description": "Creates a new audit log export job.\n\nAudit Logs for the last 30 days can be requested, otherwise they are purged. A pre-signed URL to a s3 bucket location is returned, which is used to download these audit logs.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n  - Organization Owner\n  - Project Owner\n  - Project Manager\n  - Project Viewer\n  - Database Data Reader/Writer\n  - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Audit Logs"
        ],
        "operationId": "postAuditLogExport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "start",
                  "end"
                ],
                "properties": {
                  "start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Specifies the audit log's start date and time.",
                    "example": "2023-05-15T04:56:07.000+00:00"
                  },
                  "end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Specifies the audit log's end date and time.",
                    "example": "2023-05-16T04:56:07.000+00:00"
                  }
                }
              },
              "examples": {
                "PostClusterCreateAuditLogExport": {
                  "value": {
                    "start": "2022-09-04T00:56:07.000Z",
                    "end": "2022-09-05T04:56:07.000Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successfully created audit export job for the cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "exportId"
                  ],
                  "properties": {
                    "exportId": {
                      "type": "string",
                      "description": "The export ID of the export job.",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "StartTooFarInPast": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 4033,
                      "message": "Requested audit log export time range is invalid because the start time is more than 30 days in the past.",
                      "hint": "Please specify start time less than 30 days ago."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Cluster Audit Log Export Jobs",
        "description": "Lists all the audit log export jobs and shows the status for each job.\n\nIt will show the pre-signed URL if the export was successful, a failure error if it was unsuccessful or a message saying no audit logs available if there were no audit logs found.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Audit Logs"
        ],
        "operationId": "listAuditLogExports",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully lists all audit export jobs for the cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "createdAt",
                          "auditLogExportId",
                          "start",
                          "status",
                          "end"
                        ],
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp when the audit logs were exported."
                          },
                          "auditLogExportId": {
                            "type": "string",
                            "description": "The export ID of the audit log export job."
                          },
                          "start": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of when audit logs should start."
                          },
                          "status": {
                            "type": "string",
                            "description": "Indicates status of audit log creation. When status is complete, the compressed file can be manually downloaded.",
                            "enum": [
                              "In Progress",
                              "Completed",
                              "Queued",
                              "Failed"
                            ],
                            "example": "Completed"
                          },
                          "end": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of when audit logs should end."
                          },
                          "auditLogDownloadURL": {
                            "type": "string",
                            "description": "Pre-signed URL to download cluster audit logs."
                          },
                          "expiration": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp when the download link expires."
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "cursor": {
                    "pages": {
                      "last": 1,
                      "next": 1,
                      "page": 1,
                      "perPage": 10,
                      "previous": 1,
                      "totalItems": 2
                    },
                    "hrefs": {
                      "first": "https://cloudapi.cloud.couchbase.com/v4/organizations/ffffffff-aaaa-1414-eeee-000000000000/projects/ffffffff-aaaa-1414-eeee-000000000000/clusters/ffffffff-aaaa-1414-eeee-000000000000/auditLogExports?page=1&perPage=10",
                      "last": "https://cloudapi.cloud.couchbase.com/v4/organizations/ffffffff-aaaa-1414-eeee-000000000000/projects/ffffffff-aaaa-1414-eeee-000000000000/clusters/ffffffff-aaaa-1414-eeee-000000000000/auditLogExports?page=1&perPage=10",
                      "next": "https://cloudapi.cloud.couchbase.com/v4/organizations/ffffffff-aaaa-1414-eeee-000000000000/projects/ffffffff-aaaa-1414-eeee-000000000000/clusters/ffffffff-aaaa-1414-eeee-000000000000/auditLogExports?page=1&perPage=10",
                      "previous": ""
                    }
                  },
                  "data": [
                    {
                      "createdAt": "2023-05-16T06:43:46.264296574Z",
                      "exportId": "d9db8594-4d0d-43b5-8dfe-1a6679d5b7d3",
                      "start": "2023-05-15T04:56:07Z",
                      "end": "2023-05-16T06:43:46.255479842Z",
                      "status": "Failed"
                    },
                    {
                      "createdAt": "2023-05-16T06:39:33.745602046Z",
                      "exportId": "624752e7-4600-4007-9a29-15d1323fbd0c",
                      "start": "2023-05-15T04:56:07Z",
                      "end": "2023-05-16T06:39:33.732661698Z",
                      "status": "Queued"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/auditLogExports/{auditLogExportId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "auditLogExportId",
          "description": "The export ID of the audit log export job.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Cluster Audit Log Export",
        "description": "Fetches the status of a single audit log export job.\n\nIt will show the pre-signed URL if the export was successful, a failure error if it was unsuccessful or a message saying no audit logs available if there were no audit logs found during the given timeframe.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Audit Logs"
        ],
        "operationId": "getAuditLogExport",
        "responses": {
          "200": {
            "description": "Successfully retrieved audit export job.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "createdAt",
                    "auditLogExportId",
                    "start",
                    "status",
                    "end"
                  ],
                  "properties": {
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp when the audit logs were exported."
                    },
                    "auditLogExportId": {
                      "type": "string",
                      "description": "The export ID of the audit log export job."
                    },
                    "start": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of when audit logs should start."
                    },
                    "status": {
                      "type": "string",
                      "description": "Indicates status of audit log creation. When status is complete, the compressed file can be manually downloaded.",
                      "enum": [
                        "In Progress",
                        "Completed",
                        "Queued",
                        "Failed"
                      ],
                      "example": "Completed"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of when audit logs should end."
                    },
                    "auditLogDownloadURL": {
                      "type": "string",
                      "description": "Pre-signed URL to download cluster audit logs."
                    },
                    "expiration": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp when the download link expires."
                    }
                  }
                },
                "examples": {
                  "InProgress": {
                    "value": {
                      "createdAt": "2023-05-16T04:00:08.870076042Z",
                      "auditLogExportId": "40b9318a-cc93-458d-bc3e-7d4ffa778386",
                      "start": "2023-05-15T04:56:07Z",
                      "end": "2023-05-16T04:56:07Z",
                      "status": "In Progress"
                    }
                  },
                  "Queued": {
                    "value": {
                      "createdAt": "2023-05-16T04:00:08.870076042Z",
                      "auditLogExportId": "40b9318a-cc93-458d-bc3e-7d4ffa778386",
                      "start": "2023-05-15T04:56:07Z",
                      "end": "2023-05-16T04:56:07Z",
                      "status": "Queued"
                    }
                  },
                  "Failed": {
                    "value": {
                      "createdAt": "2023-05-16T04:00:08.870076042Z",
                      "auditLogExportId": "40b9318a-cc93-458d-bc3e-7d4ffa778386",
                      "start": "2023-05-15T04:56:07Z",
                      "end": "2023-05-16T04:56:07Z",
                      "status": "Failed"
                    }
                  },
                  "Completed": {
                    "value": {
                      "createdAt": "2023-05-16T04:00:08.870076042Z",
                      "auditLogExportId": "40b9318a-cc93-458d-bc3e-7d4ffa778386",
                      "start": "2023-05-15T04:56:07Z",
                      "end": "2023-05-16T04:56:07Z",
                      "status": "Completed",
                      "auditLogDownloadURL": "https://cb-audit-logs-ffffffff-aaaa-1414-eeee-000000000000.s3.amazonaws.com/export/audit-logs-cluster-ffffffff-aaaa-1414-eeee-000000000000-from-2222-08-25%2007%3A52%3A44.377%20%2B0000%20UTC-to-2222-09-01%2007%3A52%3A44.377%20%2B0000%20UTC.tar.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=JX7GZ5Q1WK9X7GZ5Q1WJF%2F20220901%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220901T080237Z&X-Amz-Expires=259200&X-Amz-Security-Token=9qD87zY0m2fT4V3x6hC1sW5B2kEuG9jP7rA4N8Q0bO6lK5I3&X-Amz-SignedHeaders=host&X-Amz-Signature=k9X7gZ5Q1W",
                      "expiration": "2023-05-19T04:00:08.870076042Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/cmek": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create Key Metadata",
        "description": "Initializes the metadata record for a customer-managed encryption key stored in AWS or GCP, linking it to the organization.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "CMEK"
        ],
        "operationId": "postCMEKMetadata",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "config"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the key (up to 256 characters).",
                    "example": "Test Key",
                    "maxLength": 128
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the key (up to 1024 characters).",
                    "example": "Description of the Key",
                    "maxLength": 512
                  },
                  "config": {
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "arn"
                        ],
                        "properties": {
                          "arn": {
                            "type": "string",
                            "description": "The Amazon Resource Name (ARN) that uniquely identifies the AWS KMS key.",
                            "example": "arn:aws:kms:us-west-2:123456789012:key/abcd1234-a123-456a-a12b-a123b4cd56ef"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "resourceName"
                        ],
                        "properties": {
                          "resourceName": {
                            "type": "string",
                            "description": "The unique identifier for a GCP resource, specifying the project, location, key ring, and the key within Cloud KMS.",
                            "example": "projects/my-project/locations/global/keyRings/my-key-ring/cryptoKeys/my-key"
                          }
                        }
                      }
                    ],
                    "example": {
                      "arn": "arn:aws:kms:us-west-2:123456789012:key/abcd1234-a123-456a-a12b-a123b4cd56ef"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created the encryption key metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the KMS metadata created."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Key Metadata",
        "description": "Retrieves detailed metadata for all customer-managed encryption keys associated with the organization.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Organization Member\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "CMEK"
        ],
        "operationId": "getKeyMetadataList",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "Sets the order of how you would like to sort the results and the key you would like to order by.",
            "example": [
              "name"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed the detailed metadata for all encryption keys associated with the organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "description",
                          "config",
                          "audit"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the key created."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the key (up to 256 characters).",
                            "example": "Test Key",
                            "maxLength": 128
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the Key (up to 1024 characters).",
                            "example": "Description of the cluster",
                            "maxLength": 512
                          },
                          "config": {
                            "anyOf": [
                              {
                                "type": "object",
                                "required": [
                                  "arn"
                                ],
                                "properties": {
                                  "arn": {
                                    "type": "string",
                                    "description": "The Amazon Resource Name (ARN) that uniquely identifies the AWS KMS key.",
                                    "example": "arn:aws:kms:us-west-2:123456789012:key/abcd1234-a123-456a-a12b-a123b4cd56ef"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "resourceName"
                                ],
                                "properties": {
                                  "resourceName": {
                                    "type": "string",
                                    "description": "The unique identifier for a GCP resource, specifying the project, location, key ring, and the key within Cloud KMS.",
                                    "example": "projects/my-project/locations/global/keyRings/my-key-ring/cryptoKeys/my-key"
                                  }
                                }
                              }
                            ]
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/cmek/{cmekId}/history": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "cmekId",
          "description": "The GUID4 ID of the KMS Key metadata.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "List Key Rotation History",
        "description": "Retrieves the full history of rotations for a specific customer-managed encryption key within the organization.\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Organization Member\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "CMEK"
        ],
        "operationId": "listCMEKHistory",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **active**, **associatedAt**, **associatedBy**, **key**\n",
            "example": "active",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "associatedAt",
                "associatedBy",
                "key"
              ]
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched the key rotation history based on its ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "config": {
                            "oneOf": [
                              {
                                "type": "object",
                                "required": [
                                  "arn"
                                ],
                                "properties": {
                                  "arn": {
                                    "type": "string",
                                    "description": "The Amazon Resource Name (ARN) that uniquely identifies the AWS KMS key.",
                                    "example": "arn:aws:kms:us-west-2:123456789012:key/abcd1234-a123-456a-a12b-a123b4cd56ef"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "resourceName"
                                ],
                                "properties": {
                                  "resourceName": {
                                    "type": "string",
                                    "description": "The unique identifier for a GCP resource, specifying the project, location, key ring, and the key within Cloud KMS.",
                                    "example": "projects/my-project/locations/global/keyRings/my-key-ring/cryptoKeys/my-key"
                                  }
                                }
                              }
                            ]
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Whether the key is currently active or not.\n"
                          },
                          "key": {
                            "type": "string",
                            "description": "The customer managed enycrption key name.\n"
                          },
                          "associatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The RFC3339 timestamp associated with when the resource was last modified.\n"
                          },
                          "associatedBy": {
                            "type": "string",
                            "description": "The user who last modified the key; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "listCMEKHistory": {
                    "value": {
                      "cursor": {
                        "hrefs": {},
                        "pages": {
                          "last": 1,
                          "page": 1,
                          "perPage": 2,
                          "totalItems": 2
                        }
                      },
                      "data": [
                        {
                          "config": {
                            "arn": "arn:aws:kms:us-west-2:123456789012:key/12345678-1234-1234-1234-123456789012"
                          },
                          "active": true,
                          "associatedBy": "ffffffff-aaaa-1414-eeee-000000000000",
                          "associatedAt": "2023-09-01T12:34:56Z"
                        },
                        {
                          "config": {
                            "arn": "arn:aws:kms:us-west-2:000000000000:key/00000000-0000-0000-0000-000000000000"
                          },
                          "active": false,
                          "associatedBy": "ffffffff-aaaa-1414-eeee-000000000000",
                          "associatedAt": "2023-09-01T12:34:56Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/cmek/{cmekId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "cmekId",
          "description": "The GUID4 ID of the KMS Key metadata.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Key Metadata",
        "description": "Retrieves the full metadata details for a specific customer-managed encryption key within the organization.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Organization Member\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "CMEK"
        ],
        "operationId": "getKeyMetadata",
        "responses": {
          "200": {
            "description": "Successfully fetched the encryption key details based on its ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "description",
                    "config",
                    "audit"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the key created."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the key (up to 256 characters).",
                      "example": "Test Key",
                      "maxLength": 128
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the Key (up to 1024 characters).",
                      "example": "Description of the cluster",
                      "maxLength": 512
                    },
                    "config": {
                      "anyOf": [
                        {
                          "type": "object",
                          "required": [
                            "arn"
                          ],
                          "properties": {
                            "arn": {
                              "type": "string",
                              "description": "The Amazon Resource Name (ARN) that uniquely identifies the AWS KMS key.",
                              "example": "arn:aws:kms:us-west-2:123456789012:key/abcd1234-a123-456a-a12b-a123b4cd56ef"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "resourceName"
                          ],
                          "properties": {
                            "resourceName": {
                              "type": "string",
                              "description": "The unique identifier for a GCP resource, specifying the project, location, key ring, and the key within Cloud KMS.",
                              "example": "projects/my-project/locations/global/keyRings/my-key-ring/cryptoKeys/my-key"
                            }
                          }
                        }
                      ]
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Rotate Key",
        "description": "Initiates the process to rotate a customer-managed encryption key and update its associated metadata within the system.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "CMEK"
        ],
        "operationId": "rotateCMEKKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "config"
                ],
                "properties": {
                  "config": {
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "arn"
                        ],
                        "properties": {
                          "arn": {
                            "type": "string",
                            "description": "The Amazon Resource Name (ARN) that uniquely identifies the AWS KMS key.",
                            "example": "arn:aws:kms:us-west-2:123456789012:key/abcd1234-a123-456a-a12b-a123b4cd56ef"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "resourceName"
                        ],
                        "properties": {
                          "resourceName": {
                            "type": "string",
                            "description": "The unique identifier for a GCP resource, specifying the project, location, key ring, and the key within Cloud KMS.",
                            "example": "projects/my-project/locations/global/keyRings/my-key-ring/cryptoKeys/my-key"
                          }
                        }
                      }
                    ],
                    "example": {
                      "arn": "arn:aws:kms:us-west-2:123456789012:key/abcd1234-a123-456a-a12b-a123b4cd56ef"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully submitted request to rotate the encryption key."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Key Metadata",
        "description": "Permanently removes the specified customer-managed encryption key's metadata from the organization's account.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "CMEK"
        ],
        "operationId": "deleteKeyMetadata",
        "responses": {
          "204": {
            "description": "Successfully deleted the the specified encryption key's metadata by its ID."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/cmek/{cmekId}/associate": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "cmekId",
          "description": "The GUID4 ID of the KMS Key metadata.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Associate Key with Cluster",
        "description": "Redeploys the cluster and encrypts the disks with the newly associated customer-managed encryption key.\nThrows an error before redeploying the cluster if the customer-managed encryption key is inaccessible.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "CMEK"
        ],
        "operationId": "AssociateCMEK",
        "responses": {
          "204": {
            "description": "Successfully associated the key with the cluster and encrypted the disks."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/cmek/{cmekId}/unassociate": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "cmekId",
          "description": "The GUID4 ID of the KMS Key metadata.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Unassociate Key from Cluster",
        "description": "Removes the customer-managed encryption key associated with the cluster, which redeploys the cluster and removes any encryption on the disks.\nThis does not delete the customer-managed encryption key itself since the same key could be used across clusters.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "CMEK"
        ],
        "operationId": "UnassociateCMEK",
        "responses": {
          "204": {
            "description": "Successfully disassociated the key from the cluster and removed encryption."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/users": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create User",
        "description": "Invites a new user under the organization.\n\nAfter making a REST API request, an invitation email is triggered and sent to the user.\nUpon receiving the invitation email, the user is required to click on a provided URL, which will redirect them to a page with a user interface (UI) where they can set their username and password.\n\nThe modification of any personal information related to a user can only be performed by the user through the UI.\nSimilarly, the user can solely conduct password updates through the UI.\n\nThe \"caller\" possessing Organization Owner access rights retains the exclusive user creation capability.\nThey hold the authority to assign roles at the organization and project levels.\n\nAt present, our support is limited to the resourceType of \"project\" exclusively.\n\nIn order to access this endpoint, the provided API key must have the following role:\n- Organization Owner\n\nTo learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n",
        "tags": [
          "Users"
        ],
        "operationId": "postUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "organizationRoles"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the user.",
                    "example": "John",
                    "maxLength": 128
                  },
                  "email": {
                    "type": "string",
                    "description": "Email of the user.",
                    "example": "john.doe@example.com"
                  },
                  "organizationRoles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "organizationOwner",
                        "organizationMember",
                        "projectCreator"
                      ],
                      "example": "projectCreator",
                      "description": "Organization roles assigned to the User.\n\nTo learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n"
                    },
                    "example": [
                      "organizationOwner"
                    ]
                  },
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "roles"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "project"
                          ],
                          "default": "project",
                          "example": "project",
                          "description": "Type of the resource.\n"
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000",
                          "description": "Id of the project.\n"
                        },
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "projectOwner",
                              "projectManager",
                              "projectViewer",
                              "projectDataReaderWriter",
                              "projectDataReader"
                            ],
                            "example": "projectManager",
                            "description": "Project Roles associated with the User.\n\nTo learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n"
                          }
                        }
                      }
                    },
                    "default": [],
                    "example": []
                  }
                }
              },
              "examples": {
                "CreateOrganizationMember": {
                  "value": {
                    "name": "John",
                    "email": "john.doe@example.com",
                    "organizationRoles": [
                      "organizationMember"
                    ],
                    "resources": [
                      {
                        "id": "550e8400-e29b-41d4-a716-446655440000",
                        "type": "project",
                        "roles": [
                          "projectViewer"
                        ]
                      },
                      {
                        "id": "550e8400-e29b-41d4-a716-446655440000",
                        "type": "project",
                        "roles": [
                          "projectDataReaderWriter"
                        ]
                      }
                    ]
                  },
                  "description": "At present, our support is limited to the resourceType of \"project\" exclusively. Furthermore, the role designation is solely related to roles at the project level."
                },
                "CreateOrganizationOwner": {
                  "value": {
                    "name": "John",
                    "email": "john.doe@example.com",
                    "organizationRoles": [
                      "organizationOwner"
                    ]
                  },
                  "description": "We don't need to explicitly add the resources field if the user is an organizationOwner"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully sent invite to the user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The UUID of the user created."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Users",
        "description": "Lists all the users in the organization and filter on the basis of projectId.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Organization Member\n- Project Creator\n\nThe results are always limited by the role and scope of the caller's privileges.\n\nWhen retrieving a list of users through a GET request, if a user holds the organization owner role, the response will exclude project-level permissions for those users. This is because organization owners have full access to all resources within the organization, making project-level permissions irrelevant for them.\n\nTo learn more about the roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html) and [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n",
        "tags": [
          "Users"
        ],
        "operationId": "listUsers",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **name**, **email**, **status**, **inactive**.",
            "example": [
              "name"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          },
          {
            "name": "projectId",
            "description": "The GUID4 ID of the project.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "ffffffff-aaaa-1414-eeee-000000000000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed all the user in the organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "email",
                          "status",
                          "inactive",
                          "organizationId",
                          "organizationRoles",
                          "audit"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The UUID of the user created."
                          },
                          "name": {
                            "type": "string",
                            "example": "alex",
                            "description": "The name of the user.",
                            "maxLength": 128
                          },
                          "email": {
                            "type": "string",
                            "description": "Email of the user.",
                            "example": "john.doe@example.com"
                          },
                          "status": {
                            "type": "string",
                            "description": "Depicts user status whether they are verified or not.\n- verified: It reflects a verified state for an email address where the user has proven that they have access to the email account.\n- not-verified: It reflects an unverified or pending verification state.\n- pending-primary: It reflects an unverified primary email address\n",
                            "enum": [
                              "verified",
                              "not-verified",
                              "pending-primary"
                            ],
                            "example": "not-verified"
                          },
                          "inactive": {
                            "type": "boolean",
                            "description": "Depicts whether the user has accepted the invite for the organization.",
                            "example": false
                          },
                          "organizationId": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "A GUID4 identifier of the tenant."
                          },
                          "organizationRoles": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "organizationOwner",
                                "organizationMember",
                                "projectCreator"
                              ],
                              "example": "projectCreator",
                              "description": "Organization roles assigned to the User.\n\nTo learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n"
                            }
                          },
                          "lastLogin": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-07-17T07:05:39.116124897Z",
                            "description": "Time(UTC) at which user last logged in."
                          },
                          "region": {
                            "type": "string",
                            "example": "North America",
                            "description": "Region of the user."
                          },
                          "timeZone": {
                            "type": "string",
                            "example": "(UTC -9:00) Alaska Standard Time",
                            "description": "Time zone of the user."
                          },
                          "enableNotifications": {
                            "type": "boolean",
                            "example": true,
                            "description": "After enabling email notifications for your account, you will start receiving email notification alerts from all databases in projects you are a part of."
                          },
                          "expiresAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-07-17T07:05:39.116124897Z",
                            "description": "Time at which user expires."
                          },
                          "resources": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "roles"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "project"
                                  ],
                                  "default": "project",
                                  "example": "project",
                                  "description": "Type of the resource.\n"
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ffffffff-aaaa-1414-eeee-000000000000",
                                  "description": "Id of the project.\n"
                                },
                                "roles": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "projectOwner",
                                      "projectManager",
                                      "projectViewer",
                                      "projectDataReaderWriter",
                                      "projectDataReader"
                                    ],
                                    "example": "projectManager",
                                    "description": "Project Roles associated with the User.\n\nTo learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n"
                                  }
                                }
                              }
                            }
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "ApiKeyIsOrgOwner": {
                    "value": {
                      "data": [
                        {
                          "id": "ffffffff-aaaa-1414-eeee-000000000000",
                          "name": "John",
                          "email": "john.doe@example.com",
                          "status": "verified",
                          "inactive": false,
                          "organizationId": "ffffffff-aaaa-1414-eeee-000000000000",
                          "organizationRoles": [
                            "organizationMember"
                          ],
                          "lastLogin": "2023-07-17T07:05:39.116Z",
                          "region": "North America",
                          "timeZone": "(UTC +5:30) India Standard Time",
                          "enableNotifications": false,
                          "expiresAt": "2023-07-17T07:05:39.116Z",
                          "resources": [
                            {
                              "id": "f98e6c87-41e3-4faa-9df4-906e8d4f1aaf",
                              "type": "project",
                              "roles": [
                                "projectViewer"
                              ]
                            },
                            {
                              "id": "b7c745ac-9fb8-4b63-a0e4-51230097a169",
                              "type": "project",
                              "roles": [
                                "projectDataReaderWriter"
                              ]
                            },
                            {
                              "id": "28b67422-63d5-46b1-9234-8ad4a1d2f7be",
                              "type": "project",
                              "roles": [
                                "projectDataReaderWriter"
                              ]
                            },
                            {
                              "id": "e3942eaa-0f52-43da-963d-87a5b6cb3805",
                              "type": "project",
                              "roles": [
                                "projectDataReaderWriter"
                              ]
                            }
                          ],
                          "audit": {
                            "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                            "createdAt": "2021-09-01T12:34:56.000Z",
                            "modifiedBy": "ffffffff-aaaa-1414-eeee-000000000000",
                            "modifiedAt": "2021-09-01T12:34:56.000Z",
                            "version": 1
                          }
                        }
                      ],
                      "cursor": {
                        "pages": {
                          "page": 2,
                          "next": 3,
                          "previous": 1,
                          "last": 10,
                          "perPage": 10,
                          "totalItems": 10
                        },
                        "hrefs": {
                          "first": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                          "last": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                          "previous": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                          "next": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                        }
                      }
                    },
                    "description": "In the event that the API key holds \"organizationOwner\" access, information related to all projects within the organization will be returned."
                  },
                  "ApiKeyIsProjectOwner": {
                    "value": {
                      "data": [
                        {
                          "id": "ffffffff-aaaa-1414-eeee-000000000000",
                          "name": "John",
                          "email": "john.doe@example.com",
                          "status": "verified",
                          "inactive": false,
                          "organizationId": "ffffffff-aaaa-1414-eeee-000000000000",
                          "organizationRoles": [
                            "organizationMember"
                          ],
                          "lastLogin": "2023-07-17T07:05:39.116Z",
                          "region": "North America",
                          "timeZone": "(UTC +5:30) India Standard Time",
                          "enableNotifications": false,
                          "expiresAt": "2023-07-17T07:05:39.116Z",
                          "resources": [
                            {
                              "id": "f98e6c87-41e3-4faa-9df4-906e8d4f1aaf",
                              "type": "project",
                              "roles": [
                                "projectViewer"
                              ]
                            },
                            {
                              "id": "b7c745ac-9fb8-4b63-a0e4-51230097a169",
                              "type": "project",
                              "roles": [
                                "projectDataReaderWriter"
                              ]
                            }
                          ],
                          "audit": {
                            "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                            "createdAt": "2021-09-01T12:34:56.000Z",
                            "modifiedBy": "ffffffff-aaaa-1414-eeee-000000000000",
                            "modifiedAt": "2021-09-01T12:34:56.000Z",
                            "version": 1
                          }
                        }
                      ],
                      "cursor": {
                        "pages": {
                          "page": 2,
                          "next": 3,
                          "previous": 1,
                          "last": 10,
                          "perPage": 10,
                          "totalItems": 10
                        },
                        "hrefs": {
                          "first": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                          "last": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                          "previous": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                          "next": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                        }
                      }
                    },
                    "description": "Assuming an organization with four projects labeled A, B, C, and D, if the API key holds an organizational-level role of \"organizationMember\" and read access solely to projects C and D, then project-specific information exclusively pertaining to C and D will be returned, regardless of whether they conduct a search based on the projectId."
                  },
                  "ReturnedUserIsOrganizationOwner": {
                    "value": {
                      "data": [
                        {
                          "id": "ffffffff-aaaa-1414-eeee-000000000000",
                          "name": "John",
                          "email": "john.doe@example.com",
                          "status": "verified",
                          "inactive": false,
                          "organizationId": "ffffffff-aaaa-1414-eeee-000000000000",
                          "organizationRoles": [
                            "organizationOwner"
                          ],
                          "lastLogin": "2023-07-17T07:05:39.116Z",
                          "region": "North America",
                          "timeZone": "(UTC +5:30) India Standard Time",
                          "enableNotifications": false,
                          "expiresAt": "2023-07-17T07:05:39.116Z",
                          "audit": {
                            "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                            "createdAt": "2021-09-01T12:34:56.000Z",
                            "modifiedBy": "ffffffff-aaaa-1414-eeee-000000000000",
                            "modifiedAt": "2021-09-01T12:34:56.000Z",
                            "version": 1
                          }
                        }
                      ],
                      "cursor": {
                        "pages": {
                          "page": 2,
                          "next": 3,
                          "previous": 1,
                          "last": 10,
                          "perPage": 10,
                          "totalItems": 10
                        },
                        "hrefs": {
                          "first": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                          "last": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                          "previous": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                          "next": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                        }
                      }
                    },
                    "description": "If the user returned possesses \"organizationOwner\" access, the resources field will not be returned due to the user's unrestricted access to all resources within the organization."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/users/{userId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "userId",
          "description": "The GUID4 ID of the control plane user.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get User",
        "description": "Fetches the details of the given user.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Organization Member\n- Project Creator\n\nThe results are always limited by the role and scope of the caller's privileges.\n\nWhen performing a GET request for a user with an organization owner role, the response will exclude project-level permissions for that user. This is because organization owners have access to all resources at the organization level, rendering project-level permissions unnecessary for them.\n\nTo learn more about the roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html) and [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n",
        "tags": [
          "Users"
        ],
        "operationId": "getUser",
        "responses": {
          "200": {
            "headers": {
              "ETag": {
                "description": "Entity tag for the resource, used for caching and conditional requests.",
                "schema": {
                  "type": "string",
                  "example": "Version: 1",
                  "description": "An ETag is a unique identifier assigned to a specific version of a resource on a web server.\nIt allows the server to identify whether the version of the resource on the client side matches the version on the server side.\nThis field represents the ETag value returned by the server for a particular resource.\n"
                }
              }
            },
            "description": "Successfully fetched the user based on the userId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "email",
                    "status",
                    "inactive",
                    "organizationId",
                    "organizationRoles",
                    "audit"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The UUID of the user created."
                    },
                    "name": {
                      "type": "string",
                      "example": "alex",
                      "description": "The name of the user.",
                      "maxLength": 128
                    },
                    "email": {
                      "type": "string",
                      "description": "Email of the user.",
                      "example": "john.doe@example.com"
                    },
                    "status": {
                      "type": "string",
                      "description": "Depicts user status whether they are verified or not.\n- verified: It reflects a verified state for an email address where the user has proven that they have access to the email account.\n- not-verified: It reflects an unverified or pending verification state.\n- pending-primary: It reflects an unverified primary email address\n",
                      "enum": [
                        "verified",
                        "not-verified",
                        "pending-primary"
                      ],
                      "example": "not-verified"
                    },
                    "inactive": {
                      "type": "boolean",
                      "description": "Depicts whether the user has accepted the invite for the organization.",
                      "example": false
                    },
                    "organizationId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "A GUID4 identifier of the tenant."
                    },
                    "organizationRoles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "organizationOwner",
                          "organizationMember",
                          "projectCreator"
                        ],
                        "example": "projectCreator",
                        "description": "Organization roles assigned to the User.\n\nTo learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n"
                      }
                    },
                    "lastLogin": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-17T07:05:39.116124897Z",
                      "description": "Time(UTC) at which user last logged in."
                    },
                    "region": {
                      "type": "string",
                      "example": "North America",
                      "description": "Region of the user."
                    },
                    "timeZone": {
                      "type": "string",
                      "example": "(UTC -9:00) Alaska Standard Time",
                      "description": "Time zone of the user."
                    },
                    "enableNotifications": {
                      "type": "boolean",
                      "example": true,
                      "description": "After enabling email notifications for your account, you will start receiving email notification alerts from all databases in projects you are a part of."
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-17T07:05:39.116124897Z",
                      "description": "Time at which user expires."
                    },
                    "resources": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "roles"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "project"
                            ],
                            "default": "project",
                            "example": "project",
                            "description": "Type of the resource.\n"
                          },
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "Id of the project.\n"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "projectOwner",
                                "projectManager",
                                "projectViewer",
                                "projectDataReaderWriter",
                                "projectDataReader"
                              ],
                              "example": "projectManager",
                              "description": "Project Roles associated with the User.\n\nTo learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n"
                            }
                          }
                        }
                      }
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update User",
        "description": "Updates organizationRole and resources of the user.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nAn Organization Owner API key can be utilized to update organizational-level roles and project-level roles for all projects within the organization.\n\nThe Project Owner API key allows for updating project-level roles, solely within the projects where the API key holds the Project Owner role.\n\nThe modification of any personal information related to a user, such as password updates, can only be performed by the respective user through the user interface (UI).\n\nThe results are always limited by the role and scope of the caller's privileges.\nTo learn more about the roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html) and [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n",
        "tags": [
          "Users"
        ],
        "operationId": "patchUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "op",
                    "path"
                  ],
                  "properties": {
                    "op": {
                      "type": "string",
                      "description": "Type of operation.",
                      "enum": [
                        "add",
                        "remove"
                      ]
                    },
                    "path": {
                      "type": "string",
                      "example": "/organizationRoles",
                      "description": "Path of resource that needs to be updated.\n\nOrganization Roles: `/organizationRoles`\n\nResources: `/resources/{resourceId}`\n\nResource Roles: `/resources/{resourceId}/roles`\n"
                    },
                    "value": {
                      "oneOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "organizationOwner",
                              "organizationMember",
                              "projectCreator"
                            ],
                            "example": "projectCreator",
                            "description": "Organization roles assigned to the User.\n\nTo learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n"
                          }
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "projectOwner",
                              "projectManager",
                              "projectViewer",
                              "projectDataReaderWriter",
                              "projectDataReader"
                            ],
                            "example": "projectManager",
                            "description": "Project Roles associated with the User.\n\nTo learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n"
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "roles"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "project"
                              ],
                              "default": "project",
                              "example": "project",
                              "description": "Type of the resource.\n"
                            },
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "ffffffff-aaaa-1414-eeee-000000000000",
                              "description": "Id of the project.\n"
                            },
                            "roles": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "projectOwner",
                                  "projectManager",
                                  "projectViewer",
                                  "projectDataReaderWriter",
                                  "projectDataReader"
                                ],
                                "example": "projectManager",
                                "description": "Project Roles associated with the User.\n\nTo learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "addOrganizationRole": {
                  "value": [
                    {
                      "op": "add",
                      "path": "/organizationRoles",
                      "value": [
                        "projectCreator"
                      ]
                    }
                  ]
                },
                "removeOrganizationRole": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/organizationRoles",
                      "value": [
                        "projectCreator"
                      ]
                    }
                  ]
                },
                "addResource": {
                  "value": [
                    {
                      "op": "add",
                      "path": "/resources/{resourceId}",
                      "value": {
                        "id": "ffffffff-aaaa-1414-eeee-111111111111",
                        "type": "project",
                        "roles": [
                          "projectDataReaderWriter"
                        ]
                      }
                    }
                  ]
                },
                "removeResourceRole": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/resources/{resourceId}/roles",
                      "value": [
                        "projectViewer"
                      ]
                    }
                  ]
                },
                "addResourceRole": {
                  "value": [
                    {
                      "op": "add",
                      "path": "/resources/{resourceId}/roles",
                      "value": [
                        "projectManager"
                      ]
                    }
                  ]
                },
                "removeResource": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/resources/{resourceId}"
                    }
                  ]
                },
                "performMultipleOperations": {
                  "value": [
                    {
                      "op": "add",
                      "path": "/organizationRoles",
                      "value": [
                        "projectCreator"
                      ]
                    },
                    {
                      "op": "remove",
                      "path": "/resources/{resourceId}"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the user metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "email",
                    "status",
                    "inactive",
                    "organizationId",
                    "organizationRoles",
                    "audit"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The UUID of the user created."
                    },
                    "name": {
                      "type": "string",
                      "example": "alex",
                      "description": "The name of the user.",
                      "maxLength": 128
                    },
                    "email": {
                      "type": "string",
                      "description": "Email of the user.",
                      "example": "john.doe@example.com"
                    },
                    "status": {
                      "type": "string",
                      "description": "Depicts user status whether they are verified or not.\n- verified: It reflects a verified state for an email address where the user has proven that they have access to the email account.\n- not-verified: It reflects an unverified or pending verification state.\n- pending-primary: It reflects an unverified primary email address\n",
                      "enum": [
                        "verified",
                        "not-verified",
                        "pending-primary"
                      ],
                      "example": "not-verified"
                    },
                    "inactive": {
                      "type": "boolean",
                      "description": "Depicts whether the user has accepted the invite for the organization.",
                      "example": false
                    },
                    "organizationId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "A GUID4 identifier of the tenant."
                    },
                    "organizationRoles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "organizationOwner",
                          "organizationMember",
                          "projectCreator"
                        ],
                        "example": "projectCreator",
                        "description": "Organization roles assigned to the User.\n\nTo learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n"
                      }
                    },
                    "lastLogin": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-17T07:05:39.116124897Z",
                      "description": "Time(UTC) at which user last logged in."
                    },
                    "region": {
                      "type": "string",
                      "example": "North America",
                      "description": "Region of the user."
                    },
                    "timeZone": {
                      "type": "string",
                      "example": "(UTC -9:00) Alaska Standard Time",
                      "description": "Time zone of the user."
                    },
                    "enableNotifications": {
                      "type": "boolean",
                      "example": true,
                      "description": "After enabling email notifications for your account, you will start receiving email notification alerts from all databases in projects you are a part of."
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-17T07:05:39.116124897Z",
                      "description": "Time at which user expires."
                    },
                    "resources": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "roles"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "project"
                            ],
                            "default": "project",
                            "example": "project",
                            "description": "Type of the resource.\n"
                          },
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "Id of the project.\n"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "projectOwner",
                                "projectManager",
                                "projectViewer",
                                "projectDataReaderWriter",
                                "projectDataReader"
                              ],
                              "example": "projectManager",
                              "description": "Project Roles associated with the User.\n\nTo learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n"
                            }
                          }
                        }
                      }
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "addOrganizationRole": {
                    "value": {
                      "id": "ffffffff-aaaa-1414-eeee-000000000000",
                      "name": "Jane",
                      "email": "jane.doe@example.com",
                      "status": "verified",
                      "inactive": false,
                      "organizationId": "ffffffff-aaaa-1414-eeee-000000000000",
                      "organizationRoles": [
                        "organizationMember",
                        "projectCreator"
                      ],
                      "lastLogin": "2023-07-17T07:05:39.116Z",
                      "region": "North America",
                      "timeZone": "(UTC +5:30) India Standard Time",
                      "enableNotifications": false,
                      "expiresAt": "2023-07-17T07:05:39.116Z",
                      "resources": [
                        {
                          "id": "b7c745ac-9fb8-4b63-a0e4-51230097a169",
                          "type": "project",
                          "roles": [
                            "projectViewer"
                          ]
                        },
                        {
                          "id": "28b67422-63d5-46b1-9234-8ad4a1d2f7be",
                          "type": "project",
                          "roles": [
                            "projectDataReaderWriter"
                          ]
                        }
                      ],
                      "audit": {
                        "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "createdAt": "2021-09-01T12:34:56.000Z",
                        "modifiedBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "modifiedAt": "2021-09-01T12:34:56.000Z",
                        "version": 2
                      }
                    }
                  },
                  "removeOrganizationRole": {
                    "value": {
                      "id": "ffffffff-aaaa-1414-eeee-000000000000",
                      "name": "John",
                      "email": "john.doe@example.com",
                      "status": "verified",
                      "inactive": false,
                      "organizationId": "ffffffff-aaaa-1414-eeee-000000000000",
                      "organizationRoles": [
                        "organizationMember"
                      ],
                      "lastLogin": "2023-07-17T07:05:39.116Z",
                      "region": "North America",
                      "timeZone": "(UTC +5:30) India Standard Time",
                      "enableNotifications": false,
                      "expiresAt": "2023-07-17T07:05:39.116Z",
                      "resources": [
                        {
                          "id": "28b67422-63d5-46b1-9234-8ad4a1d2f7be",
                          "type": "project",
                          "roles": [
                            "projectViewer"
                          ]
                        },
                        {
                          "id": "b7c745ac-9fb8-4b63-a0e4-51230097a169",
                          "type": "project",
                          "roles": [
                            "projectDataReaderWriter"
                          ]
                        }
                      ],
                      "audit": {
                        "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "createdAt": "2021-09-01T12:34:56.000Z",
                        "modifiedBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "modifiedAt": "2021-09-01T12:34:56.000Z",
                        "version": 2
                      }
                    }
                  },
                  "addResource": {
                    "value": {
                      "id": "ffffffff-aaaa-1414-eeee-000000000000",
                      "name": "John",
                      "email": "john.doe@example.com",
                      "status": "verified",
                      "inactive": false,
                      "organizationId": "ffffffff-aaaa-1414-eeee-000000000000",
                      "organizationRoles": [
                        "organizationMember"
                      ],
                      "lastLogin": "2023-07-17T07:05:39.116Z",
                      "region": "North America",
                      "timeZone": "(UTC +5:30) India Standard Time",
                      "enableNotifications": false,
                      "expiresAt": "2023-07-17T07:05:39.116Z",
                      "resources": [
                        {
                          "id": "ffffffff-aaaa-1414-eeee-000000000000",
                          "type": "project",
                          "roles": [
                            "projectViewer"
                          ]
                        },
                        {
                          "id": "ffffffff-aaaa-1414-eeee-111111111111",
                          "type": "project",
                          "roles": [
                            "projectDataReaderWriter"
                          ]
                        }
                      ],
                      "audit": {
                        "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "createdAt": "2021-09-01T12:34:56.000Z",
                        "modifiedBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "modifiedAt": "2021-09-01T12:34:56.000Z",
                        "version": 2
                      }
                    }
                  },
                  "removeResourceRole": {
                    "value": {
                      "id": "ffffffff-aaaa-1414-eeee-000000000000",
                      "name": "John",
                      "email": "john.doe@example.com",
                      "status": "verified",
                      "inactive": false,
                      "organizationId": "ffffffff-aaaa-1414-eeee-000000000000",
                      "organizationRoles": [
                        "organizationMember"
                      ],
                      "lastLogin": "2023-07-17T07:05:39.116Z",
                      "region": "North America",
                      "timeZone": "(UTC +5:30) India Standard Time",
                      "enableNotifications": false,
                      "expiresAt": "2023-07-17T07:05:39.116Z",
                      "resources": [
                        {
                          "id": "b7c745ac-9fb8-4b63-a0e4-51230097a169",
                          "type": "project",
                          "roles": [
                            "projectDataReaderWriter"
                          ]
                        }
                      ],
                      "audit": {
                        "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "createdAt": "2021-09-01T12:34:56.000Z",
                        "modifiedBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "modifiedAt": "2021-09-01T12:34:56.000Z",
                        "version": 2
                      }
                    }
                  },
                  "addResourceRole": {
                    "value": {
                      "id": "ffffffff-aaaa-1414-eeee-000000000000",
                      "name": "John",
                      "email": "john@example.com",
                      "status": "verified",
                      "inactive": false,
                      "organizationId": "ffffffff-aaaa-1414-eeee-000000000000",
                      "organizationRoles": [
                        "organizationMember"
                      ],
                      "lastLogin": "2023-07-17T07:05:39.116Z",
                      "region": "North America",
                      "timeZone": "(UTC +5:30) India Standard Time",
                      "enableNotifications": false,
                      "expiresAt": "2023-07-17T07:05:39.116Z",
                      "resources": [
                        {
                          "id": "b7c745ac-9fb8-4b63-a0e4-51230097a169",
                          "type": "project",
                          "roles": [
                            "projectViewer",
                            "projectManager"
                          ]
                        }
                      ],
                      "audit": {
                        "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "createdAt": "2021-09-01T12:34:56.000Z",
                        "modifiedBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "modifiedAt": "2021-09-01T12:34:56.000Z",
                        "version": 2
                      }
                    }
                  },
                  "removeResource": {
                    "value": {
                      "id": "ffffffff-aaaa-1414-eeee-000000000000",
                      "name": "John",
                      "email": "john.doe@example.com",
                      "status": "verified",
                      "inactive": false,
                      "organizationId": "ffffffff-aaaa-1414-eeee-000000000000",
                      "organizationRoles": [
                        "organizationMember"
                      ],
                      "lastLogin": "2023-07-17T07:05:39.116Z",
                      "region": "North America",
                      "timeZone": "(UTC +5:30) India Standard Time",
                      "enableNotifications": false,
                      "expiresAt": "2023-07-17T07:05:39.116Z",
                      "audit": {
                        "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "createdAt": "2021-09-01T12:34:56.000Z",
                        "modifiedBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "modifiedAt": "2021-09-01T12:34:56.000Z",
                        "version": 2
                      }
                    }
                  },
                  "performMultipleOperation": {
                    "value": {
                      "id": "ffffffff-aaaa-1414-eeee-000000000000",
                      "name": "John",
                      "email": "john.doe@example.com",
                      "status": "verified",
                      "inactive": false,
                      "organizationId": "ffffffff-aaaa-1414-eeee-000000000000",
                      "organizationRoles": [
                        "organizationMember",
                        "projectCreator"
                      ],
                      "lastLogin": "2023-07-17T07:05:39.116Z",
                      "region": "North America",
                      "timeZone": "(UTC +5:30) India Standard Time",
                      "enableNotifications": false,
                      "expiresAt": "2023-07-17T07:05:39.116Z",
                      "audit": {
                        "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "createdAt": "2021-09-01T12:34:56.000Z",
                        "modifiedBy": "ffffffff-aaaa-1414-eeee-000000000000",
                        "modifiedAt": "2021-09-01T12:34:56.000Z",
                        "version": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "description": "Removes user from the organization.\n\nIn order to access this endpoint, the provided API key must have the following role:\n- Organization Owner\n\nTo learn more about the roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n",
        "tags": [
          "Users"
        ],
        "operationId": "deleteUser",
        "responses": {
          "204": {
            "description": "Successfully removed the user from the organization."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/allowedcidrs": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create Allowed CIDR",
        "description": "Adds a trusted CIDR to a cluster's list of allowed CIDRs.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n\nNote that updating this resource is not supported; you must delete and recreate allowed CIDRs instead. As a result, ETags are also not supported for this resource.\n",
        "tags": [
          "Allowed CIDRs (Cluster)"
        ],
        "operationId": "postAllowedCidrs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "cidr"
                ],
                "properties": {
                  "cidr": {
                    "type": "string",
                    "description": "The trusted CIDR to allow the database connections from. The example\nrepresents a single IP address (i.e. a subnet mask of 32).\n",
                    "example": "6.60.28.100/32"
                  },
                  "comment": {
                    "type": "string",
                    "description": "A short description of the allowed CIDR.",
                    "example": "Allows access from my local developer machine"
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "An RFC3339 timestamp determining when the allowed CIDR should expire.\nIf this field is empty/omitted then the allowed CIDR is permanent and will never automatically expire.\n",
                    "example": "2023-05-14T21:49:58.465Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully added an allowed CIDR for the cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the allowed CIDR."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Allowed CIDRs",
        "description": "Lists all of the allowed CIDRs for a given cluster.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Allowed CIDRs (Cluster)"
        ],
        "operationId": "listAllowedCidrs",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **type**, **status**.",
            "example": [
              "id"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed all allowed CIDRs for the cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "cidr",
                          "status",
                          "type",
                          "audit"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the allowed CIDR.",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "cidr": {
                            "type": "string",
                            "description": "The trusted CIDR to allow the database connections from. The example\nrepresents a single IP address (i.e. a subnet mask of 32).\n",
                            "example": "1.23.45.67/32"
                          },
                          "comment": {
                            "type": "string",
                            "description": "A short description of the allowed CIDR.",
                            "example": "Allows access from my local developer machine"
                          },
                          "expiresAt": {
                            "type": "string",
                            "description": "An RFC3339 timestamp determining when the allowed CIDR will expire.\nIf this field is omitted then the allowed CIDR is permanent and will never automatically expire.\n",
                            "format": "date-time",
                            "example": "2023-05-14T21:49:58.465Z"
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the allowed CIDR.",
                            "enum": [
                              "active",
                              "expired"
                            ],
                            "example": "active"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "temporary",
                              "permanent"
                            ],
                            "default": "permanent",
                            "description": "Whether the allowed CIDR is permanent or has an expiry.",
                            "example": "temporary"
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/allowedcidrs/{allowedCidrId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "allowedCidrId",
          "description": "The GUID4 ID of the allowed CIDR.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "get allowed CIDR",
        "description": "Fetches the details for the specified allowed CIDR.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Allowed CIDRs (Cluster)"
        ],
        "operationId": "getAllowedCidrByID",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "cidr",
                    "status",
                    "type",
                    "audit"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the allowed CIDR.",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000"
                    },
                    "cidr": {
                      "type": "string",
                      "description": "The trusted CIDR to allow the database connections from. The example\nrepresents a single IP address (i.e. a subnet mask of 32).\n",
                      "example": "1.23.45.67/32"
                    },
                    "comment": {
                      "type": "string",
                      "description": "A short description of the allowed CIDR.",
                      "example": "Allows access from my local developer machine"
                    },
                    "expiresAt": {
                      "type": "string",
                      "description": "An RFC3339 timestamp determining when the allowed CIDR will expire.\nIf this field is omitted then the allowed CIDR is permanent and will never automatically expire.\n",
                      "format": "date-time",
                      "example": "2023-05-14T21:49:58.465Z"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the allowed CIDR.",
                      "enum": [
                        "active",
                        "expired"
                      ],
                      "example": "active"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "temporary",
                        "permanent"
                      ],
                      "default": "permanent",
                      "description": "Whether the allowed CIDR is permanent or has an expiry.",
                      "example": "temporary"
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Successfully fetched the allowed CIDR details."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Allowed CIDR",
        "description": "Deletes the existing allowed CIDR.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Allowed CIDRs (Cluster)"
        ],
        "operationId": "deleteAllowedCidrByID",
        "responses": {
          "204": {
            "description": "Successfully deleted the allowed CIDR by its ID."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/users": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "List Database Credentials",
        "description": "Lists all the database credential information under a cluster.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Viewer\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Database Credentials"
        ],
        "operationId": "listDatabaseCredentials",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **name**, **id**.",
            "example": [
              "name"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed all the database credentials under the cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "cursor",
                    "data"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "access",
                          "audit"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the database credential created."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the database credential created (up to 256 characters).",
                            "example": "ReadInventory",
                            "maxLength": 256
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          },
                          "access": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "privileges"
                              ],
                              "properties": {
                                "privileges": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The `privileges` field in this API represents the privilege level for users.\nIt accepts one of the following values:\n\n- `data_reader`\n- `data_writer`\n- `read`: Equivalent to `data_reader`.\n- `write`: Equivalent to `data_writer`.\n",
                                  "example": [
                                    "data_reader",
                                    "data_writer",
                                    "read",
                                    "write"
                                  ]
                                },
                                "resources": {
                                  "type": "object",
                                  "description": "The resources for which access will be granted on. Leaving this empty will grant access to all buckets.",
                                  "properties": {
                                    "buckets": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the bucket.",
                                            "example": "travel-sample"
                                          },
                                          "scopes": {
                                            "type": "array",
                                            "description": "The scopes under a bucket.",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "name"
                                              ],
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "inventory",
                                                  "description": "The name of the scope."
                                                },
                                                "collections": {
                                                  "type": "array",
                                                  "description": "The collections under a scope.",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "example": [
                                                    "airlines",
                                                    "airport",
                                                    "tickets"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "GetAllDatabaseCredentials": {
                    "value": {
                      "cursor": {
                        "pages": {
                          "page": 2,
                          "next": 3,
                          "previous": 1,
                          "last": 10,
                          "perPage": 10,
                          "totalItems": 10
                        },
                        "hrefs": {
                          "first": "https://cloud.couchbase.com/v4/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000?page=2&perPage=10",
                          "last": "https://cloud.couchbase.com/v4/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000?page=10&perPage=10",
                          "previous": "https://cloud.couchbase.com/v4/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000?page=1&perPage=10",
                          "next": "https://cloud.couchbase.com/v4/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000?page=3&perPage=10"
                        }
                      },
                      "data": [
                        {
                          "id": "ffffffff-aaaa-1414-eeee-000000000000",
                          "name": "ReadInventory",
                          "audit": {
                            "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                            "createdAt": "2021-09-01T12:34:56Z",
                            "modifiedBy": "ffffffff-aaaa-1414-eeee-000000000000",
                            "modifiedAt": "2021-09-01T12:34:56Z",
                            "version": 1
                          },
                          "access": [
                            {
                              "privileges": [
                                "data_reader",
                                "data_writer"
                              ],
                              "resources": {
                                "buckets": [
                                  {
                                    "name": "travel-sample",
                                    "scopes": [
                                      {
                                        "name": "inventory"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Database Credentials",
        "description": "Creates a new database credential under a cluster.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nValid fields to sort the results are: \"id\", \"name\".\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Database Credentials"
        ],
        "operationId": "postDatabaseCredential",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "access"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Username for the database credential. The name should adhere to the following rules:\n\n1. The name must be between 2 & 128 characters.\n\n2. The name cannot contain spaces.\n\n3. The name cannot contain the following characters - `) ( > < , ; : \" \\ / ] [ ? = } {`\n\n4. The name cannot begin with `@` character.\n",
                    "example": "RW",
                    "maxLength": 128,
                    "minLength": 2
                  },
                  "password": {
                    "type": "string",
                    "description": "A password associated with the database credential. If this field is left empty, a password will be auto-generated.\n\n- The password should adhere to the following rules:\n\n  1. The password should have at least 8 characters.\n\n  2. Characters used for the password should contain at least one uppercase (A-Z), one lowercase (a-z), one numerical (0-9), and one special character.\n\n  3. The password must not contain any of the following characters: `< > ; . * & | £`\n",
                    "example": "Passw0rd!",
                    "minLength": 8
                  },
                  "access": {
                    "type": "array",
                    "description": "Describes the access information of the database credential.",
                    "items": {
                      "type": "object",
                      "required": [
                        "privileges"
                      ],
                      "properties": {
                        "privileges": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The `privileges` field in this API represents the privilege level for users.\nIt accepts one of the following values:\n\n- `data_reader`\n- `data_writer`\n- `read`: Equivalent to `data_reader`.\n- `write`: Equivalent to `data_writer`.\n",
                          "example": [
                            "data_reader",
                            "data_writer",
                            "read",
                            "write"
                          ]
                        },
                        "resources": {
                          "type": "object",
                          "description": "The resources for which access will be granted on. Leaving this empty will grant access to all buckets.",
                          "properties": {
                            "buckets": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the bucket.",
                                    "example": "travel-sample"
                                  },
                                  "scopes": {
                                    "type": "array",
                                    "description": "The scopes under a bucket.",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "inventory",
                                          "description": "The name of the scope."
                                        },
                                        "collections": {
                                          "type": "array",
                                          "description": "The collections under a scope.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "example": [
                                            "airlines",
                                            "airport",
                                            "tickets"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "ReadWriteOnSomeCollections": {
                  "value": {
                    "name": "ReadWriteOnSpecificCollections",
                    "access": [
                      {
                        "privileges": [
                          "data_reader",
                          "data_writer"
                        ],
                        "resources": {
                          "buckets": [
                            {
                              "name": "travel-sample",
                              "scopes": [
                                {
                                  "name": "inventory",
                                  "collections": [
                                    "airport",
                                    "airline"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "ReadAndWriteOnAllCollectionsInABucketAndScope": {
                  "value": {
                    "name": "ReadWriteOnAllCollectionsInAScopeAndBucket",
                    "access": [
                      {
                        "privileges": [
                          "read",
                          "write"
                        ],
                        "resources": {
                          "buckets": [
                            {
                              "name": "travel-sample",
                              "scopes": [
                                {
                                  "name": "inventory"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "ReadAccessOnAllBuckets": {
                  "value": {
                    "name": "ReadAccessForAllBuckets",
                    "access": [
                      {
                        "privileges": [
                          "data_reader"
                        ]
                      }
                    ]
                  }
                },
                "SeparateAccessForDifferentScopes": {
                  "value": {
                    "name": "SeparateAccessForDifferentScopes",
                    "access": [
                      {
                        "privileges": [
                          "data_reader"
                        ],
                        "resources": {
                          "buckets": [
                            {
                              "name": "travel-sample",
                              "scopes": [
                                {
                                  "name": "inventory"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "privileges": [
                          "data_writer"
                        ],
                        "resources": {
                          "buckets": [
                            {
                              "name": "travel-sample",
                              "scopes": [
                                {
                                  "name": "sales"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "WriteAccessForAllBuckets": {
                  "value": {
                    "name": "WriteAccessForAllBuckets",
                    "access": [
                      {
                        "privileges": [
                          "data_writer"
                        ]
                      }
                    ]
                  }
                },
                "MultipleLevelOfAccess": {
                  "value": {
                    "name": "MultipleLevelOfAccess",
                    "access": [
                      {
                        "privileges": [
                          "data_reader"
                        ],
                        "resources": {
                          "buckets": [
                            {
                              "name": "travel-sample",
                              "scopes": [
                                {
                                  "name": "inventory",
                                  "collections": [
                                    "airport",
                                    "airline"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "privileges": [
                          "data_writer"
                        ],
                        "resources": {
                          "buckets": [
                            {
                              "name": "travel-sample",
                              "scopes": [
                                {
                                  "name": "inventory",
                                  "collections": [
                                    "sales"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a database access record under a cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "password"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the database credential created."
                    },
                    "password": {
                      "type": "string",
                      "description": "A password associated with the database credential. Password will have a minimum length of 8 characters and contain at least one lowercase letter, one uppercase letter, one number, and one special character.",
                      "example": "P@ssw0rd!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/freeTier": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create Free Tier App Service",
        "description": "Creates a free tier App Service. This is a 1 node cluster which can only be linked to a free tier cluster.\n\nThe following features are not available for free tier clusters:\n  - audit logging \n  - turn App Service off/on\n\nFree tier App Service can only be turned off/on when the linked free tier cluster is turned off/on.\n\nOnly name a description are configurable.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Free Tier"
        ],
        "operationId": "createFreeTierAppService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of App Service.",
                    "example": "MyAppSyncService",
                    "maxLength": 256
                  },
                  "description": {
                    "type": "string",
                    "description": "A short description of the App Service.",
                    "example": "My app sync service.",
                    "maxLength": 256
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successfully submitted request to create a free tier app cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the App Service created."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create App Service",
        "description": "Creates a new App Service.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services"
        ],
        "operationId": "postAppService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "clusterId",
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the cluster (up to 256 characters).",
                    "example": "MyAppSyncService",
                    "maxLength": 256
                  },
                  "description": {
                    "type": "string",
                    "description": "A short description of the App Service.",
                    "example": "My app sync service."
                  },
                  "nodes": {
                    "type": "integer",
                    "description": "Number of nodes configured for the App Service. Number of nodes configured for the App Service. The number of nodes can range from 2 to 12.",
                    "example": 2
                  },
                  "compute": {
                    "type": "object",
                    "description": "The CPU and RAM configuration of the App Service. The supported combinations are:\n| CPU (cores)| RAM  (GB)   |\n| --------   |   -------   |\n| 2          | 4           |\n| 4          | 8           |\n| 8          | 16          |\n| 16         | 32          |\n| 36         | 72          |\n",
                    "required": [
                      "cpu",
                      "ram"
                    ],
                    "properties": {
                      "cpu": {
                        "type": "integer",
                        "description": "CPU units (cores).",
                        "example": 2
                      },
                      "ram": {
                        "type": "integer",
                        "description": "RAM units (GB).",
                        "example": 4
                      }
                    }
                  },
                  "version": {
                    "type": "string",
                    "description": "The version of the App Service server. If left empty, it will be defaulted to the latest available version.",
                    "example": "3.0"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created an App Service.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the App Service created."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/appservices": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "List AppServices",
        "description": "Lists all the clusters under the organization.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nReturned set of clusters is reduced to what the caller has access to view.\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services"
        ],
        "operationId": "listAppServices",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **name**, **id**, **description**.",
            "example": [
              "name"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          },
          {
            "name": "projectId",
            "description": "The GUID4 ID of the project.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "ffffffff-aaaa-1414-eeee-000000000000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed appservices matching query.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "description",
                          "cloudProvider",
                          "nodes",
                          "compute",
                          "clusterId",
                          "currentState",
                          "version",
                          "plan",
                          "audit"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the App Service created."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the App Service (up to 256 characters).",
                            "example": "My App Service",
                            "maxLength": 256
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the App Service (up to 1024 characters).",
                            "example": "Description of the App Service.",
                            "maxLength": 1024
                          },
                          "cloudProvider": {
                            "type": "string",
                            "description": "Provider is the cloud service provider for the App Service.",
                            "example": "aws"
                          },
                          "nodes": {
                            "type": "integer",
                            "description": "Number of nodes configured for the App Service.",
                            "example": 2
                          },
                          "compute": {
                            "type": "object",
                            "description": "The CPU and RAM configuration of the App Service. The supported combinations are:\n| CPU (cores)| RAM  (GB)   |\n| --------   |   -------   |\n| 2          | 4           |\n| 4          | 8           |\n| 8          | 16          |\n| 16         | 32          |\n| 36         | 72          |\n",
                            "required": [
                              "cpu",
                              "ram"
                            ],
                            "properties": {
                              "cpu": {
                                "type": "integer",
                                "description": "CPU units (cores).",
                                "example": 2
                              },
                              "ram": {
                                "type": "integer",
                                "description": "RAM units (GB).",
                                "example": 4
                              }
                            }
                          },
                          "clusterId": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the cluster linked to the App Service."
                          },
                          "currentState": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "deploying",
                              "deploymentFailed",
                              "destroying",
                              "destroyFailed",
                              "healthy",
                              "degraded",
                              "scaling",
                              "scaleFailed",
                              "upgrading",
                              "upgradeFailed",
                              "turnedOff",
                              "turningOff",
                              "turnOffFailed",
                              "turningOn",
                              "turnOnFailed"
                            ],
                            "example": "deploying"
                          },
                          "version": {
                            "type": "string",
                            "description": "The version of the App Service server. If left empty, it will be defaulted to the latest available version.",
                            "example": "3.141.5"
                          },
                          "plan": {
                            "type": "string",
                            "description": "Plan type, either 'Basic', 'Developer Pro', or 'Enterprise'. \nPlan type allowed for singleNode cluster is either 'Basic', or 'Developer Pro'. \nIn case of 'Basic' plan timezone field value is ignored.\n\nFree tier plan is automatically assigned to free tier clusters.\n",
                            "enum": [
                              "free",
                              "basic",
                              "developer pro",
                              "enterprise"
                            ],
                            "example": "basic"
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/freeTier/{appServiceId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Free Tier App Service",
        "description": "Fetches the details of the free tier App Service.\n\nWhile only name and description are configurable, other read only fields will be displayed.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Free Tier"
        ],
        "operationId": "getFreeTierAppService",
        "responses": {
          "200": {
            "headers": {
              "ETag": {
                "description": "Entity tag for the resource, used for caching and conditional requests.",
                "schema": {
                  "type": "string",
                  "example": "Version: 1",
                  "description": "An ETag is a unique identifier assigned to a specific version of a resource on a web server.\nIt allows the server to identify whether the version of the resource on the client side matches the version on the server side.\nThis field represents the ETag value returned by the server for a particular resource.\n"
                }
              }
            },
            "description": "Successfully fetched the free tier App Service.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "description",
                    "cloudProvider",
                    "nodes",
                    "compute",
                    "clusterId",
                    "currentState",
                    "version",
                    "plan",
                    "audit"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the App Service created."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the App Service (up to 256 characters).",
                      "example": "My App Service",
                      "maxLength": 256
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the App Service (up to 1024 characters).",
                      "example": "Description of the App Service.",
                      "maxLength": 1024
                    },
                    "cloudProvider": {
                      "type": "string",
                      "description": "Provider is the cloud service provider for the App Service.",
                      "example": "aws"
                    },
                    "nodes": {
                      "type": "integer",
                      "description": "Number of nodes configured for the App Service.",
                      "example": 2
                    },
                    "compute": {
                      "type": "object",
                      "description": "The CPU and RAM configuration of the App Service. The supported combinations are:\n| CPU (cores)| RAM  (GB)   |\n| --------   |   -------   |\n| 2          | 4           |\n| 4          | 8           |\n| 8          | 16          |\n| 16         | 32          |\n| 36         | 72          |\n",
                      "required": [
                        "cpu",
                        "ram"
                      ],
                      "properties": {
                        "cpu": {
                          "type": "integer",
                          "description": "CPU units (cores).",
                          "example": 2
                        },
                        "ram": {
                          "type": "integer",
                          "description": "RAM units (GB).",
                          "example": 4
                        }
                      }
                    },
                    "clusterId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the cluster linked to the App Service."
                    },
                    "currentState": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "deploying",
                        "deploymentFailed",
                        "destroying",
                        "destroyFailed",
                        "healthy",
                        "degraded",
                        "scaling",
                        "scaleFailed",
                        "upgrading",
                        "upgradeFailed",
                        "turnedOff",
                        "turningOff",
                        "turnOffFailed",
                        "turningOn",
                        "turnOnFailed"
                      ],
                      "example": "deploying"
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the App Service server. If left empty, it will be defaulted to the latest available version.",
                      "example": "3.141.5"
                    },
                    "plan": {
                      "type": "string",
                      "description": "Plan type, either 'Basic', 'Developer Pro', or 'Enterprise'. \nPlan type allowed for singleNode cluster is either 'Basic', or 'Developer Pro'. \nIn case of 'Basic' plan timezone field value is ignored.\n\nFree tier plan is automatically assigned to free tier clusters.\n",
                      "enum": [
                        "free",
                        "basic",
                        "developer pro",
                        "enterprise"
                      ],
                      "example": "basic"
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Free Tier App Service",
        "description": "Updates an existing free tier App Service. Only name and description are configurable.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "parameters": [
          {
            "name": "If-Match",
            "in": "header",
            "description": "A precondition header that specifies the entity tag of a resource.",
            "schema": {
              "type": "string",
              "example": "12"
            }
          }
        ],
        "tags": [
          "Free Tier"
        ],
        "operationId": "updateFreeTierAppService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the App Service (up to 256 characters).",
                    "example": "MyAppSyncService",
                    "maxLength": 256
                  },
                  "description": {
                    "type": "string",
                    "description": "A short description of the App Service.",
                    "example": "My app sync service."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully updated the free tier App Service."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Free Tier App Service",
        "description": "Deletes an existing free tier App Service.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Free Tier"
        ],
        "operationId": "deleteFreeTierAppService",
        "responses": {
          "202": {
            "description": "Successfully submitted request to delete the free tier App Service."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get App Service",
        "description": "Fetches the details of the given App Service.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services"
        ],
        "operationId": "getAppService",
        "responses": {
          "200": {
            "headers": {
              "ETag": {
                "description": "Entity tag for the resource, used for caching and conditional requests.",
                "schema": {
                  "type": "string",
                  "example": "Version: 1",
                  "description": "An ETag is a unique identifier assigned to a specific version of a resource on a web server.\nIt allows the server to identify whether the version of the resource on the client side matches the version on the server side.\nThis field represents the ETag value returned by the server for a particular resource.\n"
                }
              }
            },
            "description": "Successfully fetched the App Service based on the appServiceId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "description",
                    "cloudProvider",
                    "nodes",
                    "compute",
                    "clusterId",
                    "currentState",
                    "version",
                    "plan",
                    "audit"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the App Service created."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the App Service (up to 256 characters).",
                      "example": "My App Service",
                      "maxLength": 256
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the App Service (up to 1024 characters).",
                      "example": "Description of the App Service.",
                      "maxLength": 1024
                    },
                    "cloudProvider": {
                      "type": "string",
                      "description": "Provider is the cloud service provider for the App Service.",
                      "example": "aws"
                    },
                    "nodes": {
                      "type": "integer",
                      "description": "Number of nodes configured for the App Service.",
                      "example": 2
                    },
                    "compute": {
                      "type": "object",
                      "description": "The CPU and RAM configuration of the App Service. The supported combinations are:\n| CPU (cores)| RAM  (GB)   |\n| --------   |   -------   |\n| 2          | 4           |\n| 4          | 8           |\n| 8          | 16          |\n| 16         | 32          |\n| 36         | 72          |\n",
                      "required": [
                        "cpu",
                        "ram"
                      ],
                      "properties": {
                        "cpu": {
                          "type": "integer",
                          "description": "CPU units (cores).",
                          "example": 2
                        },
                        "ram": {
                          "type": "integer",
                          "description": "RAM units (GB).",
                          "example": 4
                        }
                      }
                    },
                    "clusterId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the cluster linked to the App Service."
                    },
                    "currentState": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "deploying",
                        "deploymentFailed",
                        "destroying",
                        "destroyFailed",
                        "healthy",
                        "degraded",
                        "scaling",
                        "scaleFailed",
                        "upgrading",
                        "upgradeFailed",
                        "turnedOff",
                        "turningOff",
                        "turnOffFailed",
                        "turningOn",
                        "turnOnFailed"
                      ],
                      "example": "deploying"
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the App Service server. If left empty, it will be defaulted to the latest available version.",
                      "example": "3.141.5"
                    },
                    "plan": {
                      "type": "string",
                      "description": "Plan type, either 'Basic', 'Developer Pro', or 'Enterprise'. \nPlan type allowed for singleNode cluster is either 'Basic', or 'Developer Pro'. \nIn case of 'Basic' plan timezone field value is ignored.\n\nFree tier plan is automatically assigned to free tier clusters.\n",
                      "enum": [
                        "free",
                        "basic",
                        "developer pro",
                        "enterprise"
                      ],
                      "example": "basic"
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update App Service",
        "description": "Updates an existing App Service.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "parameters": [
          {
            "name": "If-Match",
            "in": "header",
            "description": "A precondition header that specifies the entity tag of a resource.",
            "schema": {
              "type": "string",
              "example": "12"
            }
          }
        ],
        "tags": [
          "App Services"
        ],
        "operationId": "putAppService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "nodes",
                  "compute"
                ],
                "properties": {
                  "nodes": {
                    "type": "integer",
                    "description": "Number of nodes configured for the App Service. The number of nodes can range from 2 to 12.",
                    "example": 2
                  },
                  "compute": {
                    "type": "object",
                    "description": "The CPU and RAM configuration of the App Service. The supported combinations are:\n| CPU (cores)| RAM  (GB)   |\n| --------   |   -------   |\n| 2          | 4           |\n| 4          | 8           |\n| 8          | 16          |\n| 16         | 32          |\n| 36         | 72          |\n",
                    "required": [
                      "cpu",
                      "ram"
                    ],
                    "properties": {
                      "cpu": {
                        "type": "integer",
                        "description": "CPU units (cores).",
                        "example": 2
                      },
                      "ram": {
                        "type": "integer",
                        "description": "RAM units (GB).",
                        "example": 4
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully updated the App Service metadata."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete App Service",
        "description": "Deletes an existing App Service.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services"
        ],
        "operationId": "deleteAppService",
        "responses": {
          "202": {
            "description": "Successfully deleted the App Service by its appServiceId."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/activationState": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Turn On App Service",
        "description": "Turn App Service on. Free tier App Service can only be turned on when the linked free tier cluster is turned on.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services"
        ],
        "operationId": "appServiceOn",
        "responses": {
          "202": {
            "description": "Successfully switched the App Service to on state."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Turn Off App Service",
        "description": "Turn App Service off.\n\nTurn off an App Service to temporarily deactivate it and reduce its consumption of compute resources.\nThe App Service itself and its related infrastructure will be removed once turned off.\n\nFree tier App Service can only be turned off when the linked free tier cluster is turned off.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services"
        ],
        "operationId": "appServiceOff",
        "responses": {
          "202": {
            "description": "Successfully switched the App Service to off state."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/allowedcidrs/{allowedCidrId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "allowedCidrId",
          "description": "The GUID4 ID of the allowed CIDR.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "delete": {
        "summary": "Delete App Service Allowed CIDR",
        "description": "Deletes an Allowed CIDR by ID on the specified App Service.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Allowed CIDRs (App Services)"
        ],
        "operationId": "deleteAppServiceAllowedCidr",
        "responses": {
          "204": {
            "description": "Successfully deleted the Allowed CIDR by its ID."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/allowedcidrs": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "List Allowed CIDRs for an App Service",
        "description": "Lists the Allowed CIDRs for the specified App Service.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Allowed CIDRs (App Services)"
        ],
        "operationId": "listAppServiceAllowedCidrs",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **type**, **status**.",
            "example": [
              "id"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the allowed CIDRs for the App Service.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "cidr",
                          "status",
                          "type",
                          "audit"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the allowed CIDR.",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "cidr": {
                            "type": "string",
                            "description": "The trusted CIDR to allow network connections from. The example\nrepresents a single IP address (i.e. a subnet mask of 32).\n",
                            "example": "1.23.45.67/32"
                          },
                          "comment": {
                            "type": "string",
                            "description": "A short description of the allowed CIDR.",
                            "example": "Allows access from my local developer machine"
                          },
                          "expiresAt": {
                            "type": "string",
                            "description": "An RFC3339 timestamp determining when the allowed CIDR will expire.\nIf this field is omitted then the allowed CIDR is permanent and will never automatically expire.\n",
                            "format": "date-time",
                            "example": "2023-05-14T21:49:58.465Z"
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the allowed CIDR.",
                            "enum": [
                              "active",
                              "expired"
                            ],
                            "example": "active"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "temporary",
                              "permanent"
                            ],
                            "default": "permanent",
                            "description": "Whether the allowed CIDR is permanent or has an expiry.",
                            "example": "temporary"
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Allowed CIDR",
        "description": "Adds a trusted CIDR to the specified App Service's list of allowed CIDRs.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Allowed CIDRs (App Services)"
        ],
        "operationId": "postAppServiceAllowedCidr",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "cidr"
                ],
                "properties": {
                  "cidr": {
                    "type": "string",
                    "description": "The trusted CIDR to allow network connections from. The example\nrepresents a single IP address (i.e. a subnet mask of 32).\n",
                    "example": "6.60.28.100/32"
                  },
                  "comment": {
                    "type": "string",
                    "description": "A short description of the allowed CIDR.",
                    "example": "Allows access from my local developer machine"
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "An RFC3339 timestamp determining when the allowed CIDR should expire.\nIf this field is empty/omitted then the allowed CIDR is permanent and will never automatically expire.\n",
                    "example": "2023-05-14T21:49:58.465Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully added an Allowed CIDR for the App Service.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the allowed CIDR."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/adminUsers": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create App Service Admin User",
        "description": "Creates an Admin User on the specified App Service.\nThe user can either be granted access to all App Endpoints or to specific App Endpoints by listing them in the ```endpoints``` field.\n\nCurrently, the user will be granted admin access to all App Endpoints in a bucket (that is currently associated with the App Endpoint(s) specified in the endpoints field), including ones that are created in future.\nAn option to grant access to specific App Endpoints in a bucket will be available in the future.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services"
        ],
        "operationId": "AddAppServiceAdminUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "password",
                  "access"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the user.",
                    "example": "admin"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password of the user.",
                    "example": "password"
                  },
                  "enableBucketLevelAccess": {
                    "type": "boolean",
                    "description": "When set to true, the user will automatically be granted admin access to all App Endpoints in a bucket (that is currently associated with the App Endpoint(s) specified in the endpoints field), including ones that are created in future.\nThe flag defaults to true. Currently, the only supported value is true, which means that the user will have admin access to all App Endpoints in this bucket.\nIn the future, there will be the option to set this to false.\n",
                    "default": true
                  },
                  "access": {
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "accessAllEndpoints"
                        ],
                        "properties": {
                          "accessAllEndpoints": {
                            "type": "boolean",
                            "description": "Give user access to all App Endpoints.",
                            "example": false
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "endpoints"
                        ],
                        "properties": {
                          "endpoints": {
                            "type": "array",
                            "description": "The list of App Endpoints that the user has access to.",
                            "example": [
                              "appEndpoint1",
                              "appEndpoint2"
                            ],
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "examples": {
                "CreateAdminUserSpecificEndpoints": {
                  "value": {
                    "name": "user1",
                    "password": "password",
                    "enableBucketLevelAccess": false,
                    "access": {
                      "endpoints": [
                        "endpoint1",
                        "endpoint2"
                      ]
                    }
                  }
                },
                "CreateAdminUserAllEndpoints": {
                  "value": {
                    "name": "user1",
                    "password": "password",
                    "access": {
                      "accessAllEndpoints": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created an App Service Admin User.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The ID of the user",
                      "type": "string"
                    }
                  },
                  "example": {
                    "id": "eeeeeeee-aaaa-1414-eeee-999999999999"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List App Service Admin Users",
        "description": "List the admin users for the specified App Service.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "operationId": "ListAppServiceAdminUsers",
        "responses": {
          "200": {
            "description": "Successfully listed the Admin Users for the specified App Service.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier for the user.",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The GUID4 ID of the tenant.",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "projectId": {
                            "type": "string",
                            "description": "The GUID4 ID of the project.",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "clusterId": {
                            "type": "string",
                            "description": "The GUID4 ID of the cluster.",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the user.",
                            "example": "user1"
                          },
                          "endpoints": {
                            "type": "array",
                            "description": "The list of App Endpoints that the user has access to.",
                            "example": [
                              "appEndpoint1",
                              "appEndpoint2"
                            ],
                            "items": {
                              "type": "string"
                            }
                          },
                          "accessAllEndpoints": {
                            "description": "Give user access to all App Endpoints.",
                            "type": "boolean",
                            "example": false
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "data": [
                      {
                        "id": "eeeeeeee-aaaa-1414-eeee-999999999999",
                        "tenantId": "ffffffff-aaaa-1414-eeee-000000000000",
                        "projectId": "dddddddd-cccc-1414-eeee-77777777777",
                        "clusterId": "gggggggg-zzzz-1414-eeee-55555555555",
                        "name": "admin",
                        "endpoints": [
                          "appEndpoint1",
                          "appEndpoint2"
                        ],
                        "accessAllEndpoints": "false,",
                        "audit": {
                          "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                          "createdAt": "2024-09-01T12:34:56Z",
                          "modifiedBy": "",
                          "modifiedAt": "2024-09-01T12:34:56Z",
                          "version": 1
                        }
                      },
                      {
                        "id": "eeeeeeee-gggg-1456-tttt-999999999999",
                        "tenantId": "ffffffff-aaaa-1414-eeee-000000000000",
                        "projectId": "dddddddd-cccc-1414-eeee-77777777777",
                        "clusterId": "gggggggg-zzzz-1414-eeee-55555555555",
                        "name": "admin",
                        "endpoints": [
                          "appEndpoint1",
                          "appEndpoint2"
                        ],
                        "accessAllEndpoints": false,
                        "audit": {
                          "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                          "createdAt": "2024-09-01T12:34:56Z",
                          "modifiedBy": "",
                          "modifiedAt": "2024-09-01T12:34:56Z",
                          "version": 1
                        }
                      }
                    ],
                    "cursor": {
                      "pages": {
                        "page": 2,
                        "next": 3,
                        "previous": 1,
                        "last": 10,
                        "perPage": 10,
                        "totalItems": 10
                      },
                      "hrefs": {
                        "first": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                        "last": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                        "previous": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                        "next": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/adminUsers/{userId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "userId",
          "description": "The GUID4 ID of the database credential.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "put": {
        "summary": "Update App Service Admin User",
        "description": "Updates the Admin User's access to App Endpoints on the specified App Service.\nThe update operation can either grant access to all App Endpoints or to specific App Endpoints by listing them in the ```endpoints``` field.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services"
        ],
        "operationId": "UpdateAppServiceAdminUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "endpoints"
                    ],
                    "properties": {
                      "endpoints": {
                        "type": "array",
                        "description": "The list of App Endpoints that the user has access to.",
                        "example": [
                          "appEndpoint1",
                          "appEndpoint2"
                        ],
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "accessAllEndpoints"
                    ],
                    "properties": {
                      "accessAllEndpoints": {
                        "type": "boolean",
                        "description": "Give user access to all App Endpoints.",
                        "example": false
                      }
                    }
                  }
                ]
              },
              "examples": {
                "UpdateAdminUserSpecificEndpoints": {
                  "value": {
                    "endpoints": [
                      "endpoint1",
                      "endpoint2"
                    ]
                  }
                },
                "UpdateAdminUserAllEndpoints": {
                  "value": {
                    "accessAllEndpoints": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully updated the App Service Admin User."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete App Service Admin User",
        "description": "Deletes the Admin User.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services"
        ],
        "operationId": "DeleteAppServiceAdminUser",
        "responses": {
          "202": {
            "description": "Successfully deleted the App Service Admin User."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get App Service Admin User",
        "description": "Fetches the Admin User.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services"
        ],
        "operationId": "getAppServiceAdminUser",
        "responses": {
          "200": {
            "description": "Successfully fetched the App Service Admin User.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier for the user.",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000"
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The GUID4 ID of the tenant.",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000"
                    },
                    "projectId": {
                      "type": "string",
                      "description": "The GUID4 ID of the project.",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000"
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "The GUID4 ID of the cluster.",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the user.",
                      "example": "user1"
                    },
                    "endpoints": {
                      "type": "array",
                      "description": "The list of App Endpoints that the user has access to.",
                      "example": [
                        "appEndpoint1",
                        "appEndpoint2"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "accessAllEndpoints": {
                      "description": "Give user access to all App Endpoints.",
                      "type": "boolean",
                      "example": false
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/auditLog": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "put": {
        "summary": "Enable or Disable App Service Audit Logging",
        "description": "Enable or disable Audit Logging for an App Service.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n\n To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services Audit Logging"
        ],
        "operationId": "putAppServiceAuditLogState",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "auditEnabled"
                ],
                "properties": {
                  "auditEnabled": {
                    "type": "boolean",
                    "description": "Determines whether audit logging is enabled or not on the App Service."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "App service audit logging enabled/disabled successfully."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get App Service Audit Log State",
        "description": "Retrieves the audit logging state for a specific App Service.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "operationId": "getAppServiceAuditLogState",
        "tags": [
          "App Services Audit Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of audit log settings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "auditEnabled"
                  ],
                  "properties": {
                    "auditEnabled": {
                      "type": "boolean",
                      "description": "Determines whether audit logging is enabled or not on the App Service."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/certificates": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Public Certificate for App Service",
        "description": "The public certificate is a trusted Certificate Authority (CA) signed certificate.\nYou can copy or download the endpoint’s SSL public certificate to bundle into your mobile application.\nPinning your certificate to your App is not recommended as it can increase maintenance overhead and downtime risks.\nFor more information, see [here](https://docs.couchbase.com/cloud/app-services/connect/connect-apps-to-endpoint.html#setting-up-the-connection).\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services"
        ],
        "operationId": "getAppServiceCertificate",
        "responses": {
          "200": {
            "description": "Successfully fetched the App Service based on the appServiceId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "certificate"
                  ],
                  "properties": {
                    "certificate": {
                      "type": "string",
                      "example": "-----BEGIN CERTIFICATE-----\nMIIDFTCCAf2gAwIBAgI[...]CSYBWaK0ofivA==\n-----END CERTIFICATE-----\n"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/appEndpoints": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "List App Endpoints",
        "description": "Lists all the App Endpoints under a specific App Service along with their associated configurations such as Access Control function, Import Filter or user defined xattr key.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "listAppEndpoints",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **name**, **offline**, **bucket**.",
            "example": [
              "name"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed all the App Endpoints under a specific App Service.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "bucket"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "App Endpoint name.",
                            "example": "appEndpoint1"
                          },
                          "cors": {
                            "description": "Cross-Origin Resource Sharing (CORS) configuration, used to enable granular access control to trusted domains for Origin and Login purposes in browser-based and hybrid applications.",
                            "type": "object",
                            "required": [
                              "origin"
                            ],
                            "properties": {
                              "origin": {
                                "type": "array",
                                "description": "List of allowed origins, use ['*'] to allow access from everywhere",
                                "example": [
                                  "http://example.com",
                                  "http://staging.example.com"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              },
                              "loginOrigin": {
                                "type": "array",
                                "description": "List of allowed login origins",
                                "example": [
                                  "http://example.com"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              },
                              "headers": {
                                "type": "array",
                                "description": "List of allowed headers",
                                "example": [
                                  "Content-Type"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              },
                              "maxAge": {
                                "description": "Specifies the duration (in seconds) for which the results of a preflight request can be cached.",
                                "type": "integer",
                                "default": 5
                              },
                              "disabled": {
                                "description": "disable CORS",
                                "example": false,
                                "type": "boolean"
                              }
                            },
                            "example": {
                              "origin": [
                                "http://example.com",
                                "http://staging.example.com"
                              ],
                              "loginOrigin": [
                                "http://example.com"
                              ],
                              "headers": [
                                "Content-Type"
                              ],
                              "maxAge": 600,
                              "disabled": false
                            }
                          },
                          "deltaSyncEnabled": {
                            "type": "boolean",
                            "example": false,
                            "description": "Enable or disable delta sync"
                          },
                          "bucket": {
                            "type": "string",
                            "example": "bucket1",
                            "description": "The Capella Cluster backing bucket for the App Endpoint."
                          },
                          "scopes": {
                            "description": "Scopes and collection specific config.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "The scope config, defining Access control and validation functions, and import filters for each collection. The key to the scope config object is the name of the scope. Only one scope is allowed per App Endpoint.",
                              "required": [
                                "collections"
                              ],
                              "properties": {
                                "collections": {
                                  "type": "object",
                                  "description": "The collection config, defining Access control and validation functions and import filters for this collection. The key to the collection config object is the name of the collection.",
                                  "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                      "accessControlFunction": {
                                        "type": "string",
                                        "example": "function(doc){channel(\"collection name\");}",
                                        "description": "The Javascript function that is used to specify the access control policies to be applied to documents in this collection.\nEvery document update is processed by this function. The default access control function is 'function(doc){channel(doc.channels);}'\nfor the default collection and 'function(doc){channel(collectionName);}' for named collections.\n"
                                      },
                                      "importFilter": {
                                        "type": "string",
                                        "example": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }",
                                        "description": "The Javascript function used to specify the documents in this collection that are to be imported by the App Endpoint. By default, all documents in corresponding collection are imported."
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "example": {
                              "scope_1": {
                                "collections": {
                                  "collection_1": {
                                    "accessControlFunction": "function(doc){channel(doc.channels);}",
                                    "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                                  },
                                  "collection_2": {
                                    "accessControlFunction": "function(doc){channel(doc.channels);}",
                                    "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                                  }
                                }
                              }
                            },
                            "default": {
                              "_default": {
                                "collections": {
                                  "_default": {
                                    "accessControlFunction": "function(doc){channel(doc.channels);}",
                                    "importFilter": " function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                                  }
                                }
                              }
                            }
                          },
                          "userXattrKey": {
                            "type": "string",
                            "example": "syncFnXattr",
                            "description": "The key of the user-extended attributes (xattr) that will be accessible from the Access control and validation function. If left empty, the feature will be disabled."
                          },
                          "state": {
                            "type": "string",
                            "example": "Online",
                            "description": "App Endpoint state."
                          },
                          "oidc": {
                            "description": "OpenID Connect provider configuration.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "issuer",
                                "clientId"
                              ],
                              "properties": {
                                "issuer": {
                                  "type": "string",
                                  "example": "https://example.auth.com",
                                  "description": "The URL for the OpenID Connect issuer."
                                },
                                "register": {
                                  "type": "boolean",
                                  "example": true,
                                  "description": "Indicates whether to register a new App Service user account when a user logs in using OpenID Connect."
                                },
                                "clientId": {
                                  "type": "string",
                                  "example": "foo_client",
                                  "description": "The OpenID Connect provider client ID."
                                },
                                "userPrefix": {
                                  "type": "string",
                                  "example": "fooOIDC",
                                  "description": "Username prefix for all users created for this provider"
                                },
                                "discoveryUrl": {
                                  "type": "string",
                                  "example": "https://foo.com/.well-known/openid-configuration",
                                  "description": "The URL for the non-standard discovery endpoint."
                                },
                                "usernameClaim": {
                                  "type": "string",
                                  "example": "fooAlt",
                                  "description": "Allows a different OpenID Connect field to be specified instead of the Subject (sub)."
                                },
                                "rolesClaim": {
                                  "type": "string",
                                  "example": "roles",
                                  "description": "If set, the value(s) of the given OpenID Connect authentication token claim will be added to the user's roles.\nThe value of this claim in the OIDC token must be either a string or an array of strings, any other type will result in an error.\n"
                                },
                                "providerId": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "UUID of the provider."
                                },
                                "isDefault": {
                                  "type": "boolean",
                                  "readOnly": true,
                                  "description": "Indicates whether this is the default OpenID Connect provider."
                                }
                              },
                              "example": {
                                "issuer": "foo",
                                "register": true,
                                "clientId": "foo_client",
                                "userPrefix": "fooOIDC",
                                "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                                "usernameClaim": "fooAlt"
                              }
                            }
                          },
                          "requireResync": {
                            "type": "object",
                            "example": {
                              "scope_1": {
                                "items": [
                                  "collection_1"
                                ]
                              }
                            },
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "description": "Scopes and collections that require resyncing."
                          },
                          "isRequireResync": {
                            "type": "boolean",
                            "description": "Indicates whether the App Endpoint requires resyncing."
                          },
                          "adminURL": {
                            "type": "string",
                            "description": "A URL for the admin API used for the administration of App Endpoints. For more information, read the [Capella App Services Admin API Reference](https://docs.couchbase.com/cloud/app-services/references/rest-api-introduction.html#:~:text=Capella%20App%20Services%20Admin%20API%20Reference)"
                          },
                          "metricsURL": {
                            "type": "string",
                            "description": "A URL for the metrics API used for monitoring App Services performance metrics. For more information, read the [Capella App Services Metrics API Reference](https://docs.couchbase.com/cloud/app-services/references/rest_api_metric.html)"
                          },
                          "publicURL": {
                            "type": "string",
                            "description": "A URL for the public API used for access to functions for data access and manipulation. For more information, read the [Capella App Services Public API Reference](https://docs.couchbase.com/cloud/app-services/references/rest_api_public.html)"
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "ListAppEndpointsDefaultColl": {
                    "value": {
                      "data": {
                        "bucket": "bucket1",
                        "name": "defaultAppEndpoint",
                        "userXattrKey": "key",
                        "deltaSyncEnabled": true,
                        "oidc": [
                          {
                            "issuer": "https://example.auth.com",
                            "register": true,
                            "clientId": "foo_client",
                            "userPrefix": "fooOIDC",
                            "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                            "usernameClaim": "fooAlt",
                            "rolesClaim": "roles",
                            "providerId": "ffffffff-aaaa-1414-eeee-000000000000",
                            "isDefault": true
                          },
                          {
                            "issuer": "https://example.auth.com",
                            "register": true,
                            "clientId": "bar_client",
                            "userPrefix": "barOIDC",
                            "discoveryUrl": "https://bar.com/.well-known/openid-configuration",
                            "usernameClaim": "barAlt",
                            "providerId": "ffffffff-aaaa-1414-eeee-000000000000",
                            "isDefault": false
                          }
                        ],
                        "cors": {
                          "origin": [
                            "http://example.com",
                            "http://staging.example.com"
                          ],
                          "loginOrigin": [
                            "http://example.com"
                          ],
                          "headers": [
                            "Content-Type",
                            "X-Forwarded-Host"
                          ],
                          "disabled": false,
                          "maxAge": 120
                        },
                        "scopes": {
                          "_default": {
                            "collections": {
                              "_default": {
                                "accessControlFunction": "function(doc){channel(doc.channels);}",
                                "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                              }
                            }
                          }
                        },
                        "requireResync": {
                          "_default": {
                            "items": []
                          }
                        },
                        "adminURL": "https://wdltntbkyuqpaaco.apps.sandbox.project1.com:4985",
                        "metricsURL": "https://wdltntbkyuqpaaco.apps.sandbox.project1.com:4986",
                        "publicURL": "https://wdltntbkyuqpaaco.apps.sandbox.project1.com:4984"
                      },
                      "cursor": {
                        "hrefs": {},
                        "pages": {
                          "last": 1,
                          "page": 1,
                          "perPage": 5,
                          "totalItems": 5
                        }
                      }
                    }
                  },
                  "ListAppEndpointNamedColl": {
                    "value": {
                      "data": {
                        "bucket": "bucket1",
                        "name": "defaultAppEndpoint",
                        "userXattrKey": "key",
                        "deltaSyncEnabled": true,
                        "oidc": [
                          {
                            "issuer": "https://example.auth.com",
                            "register": true,
                            "clientId": "foo_client",
                            "userPrefix": "fooOIDC",
                            "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                            "usernameClaim": "fooAlt",
                            "rolesClaim": "roles",
                            "providerId": "ffffffff-aaaa-1414-eeee-000000000000",
                            "isDefault": true
                          },
                          {
                            "issuer": "https://example.auth.com",
                            "register": true,
                            "clientId": "bar_client",
                            "userPrefix": "barOIDC",
                            "discoveryUrl": "https://bar.com/.well-known/openid-configuration",
                            "usernameClaim": "barAlt",
                            "providerId": "ffffffff-aaaa-1414-eeee-000000000000",
                            "isDefault": false
                          }
                        ],
                        "cors": {
                          "origin": [
                            "http://example.com",
                            "http://staging.example.com"
                          ],
                          "loginOrigin": [
                            "http://example.com"
                          ],
                          "headers": [
                            "Content-Type"
                          ],
                          "disabled": false,
                          "maxAge": 60
                        },
                        "scopes": {
                          "scope_1": {
                            "collections": {
                              "collection_1": {
                                "accessControlFunction": "function(doc){channel(doc.channels);}",
                                "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                              },
                              "collection_2": {
                                "accessControlFunction": "function(doc){channel(doc.channels);}"
                              }
                            }
                          }
                        },
                        "requireResync": {
                          "_default": {
                            "items": []
                          }
                        },
                        "adminURL": "https://wdltntbkyuqpaaco.apps.sandbox.project1.com:4985",
                        "metricsURL": "https://wdltntbkyuqpaaco.apps.sandbox.project1.com:4986",
                        "publicURL": "https://wdltntbkyuqpaaco.apps.sandbox.project1.com:4984"
                      },
                      "cursor": {
                        "hrefs": {},
                        "pages": {
                          "last": 1,
                          "page": 1,
                          "perPage": 5,
                          "totalItems": 5
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create App Endpoint",
        "description": "Creates an App Endpoint within an App Service with specific configurations such as collection level Access Control function and Import Filter.\nIf the scopes property is not included in the request body, the default scope and collection will be used.\nThe first OpenID Connect provider given will be set as the default provider for the App Endpoint. To change the default, please use the Change App Endpoint OIDC Default Provider endpoint.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "postAppEndpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "bucket"
                ],
                "properties": {
                  "bucket": {
                    "type": "string",
                    "example": "store_locations",
                    "description": "The Capella Cluster backing bucket for the App Endpoint."
                  },
                  "oidc": {
                    "description": "OpenID Connect provider configuration.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "issuer",
                        "clientId"
                      ],
                      "properties": {
                        "issuer": {
                          "type": "string",
                          "example": "https://example.auth.com",
                          "description": "The URL for the OpenID Connect issuer."
                        },
                        "register": {
                          "type": "boolean",
                          "example": true,
                          "description": "Indicates whether to register a new App Service user account when a user logs in using OpenID Connect."
                        },
                        "clientId": {
                          "type": "string",
                          "example": "foo_client",
                          "description": "The OpenID Connect provider client ID."
                        },
                        "userPrefix": {
                          "type": "string",
                          "example": "fooOIDC",
                          "description": "Username prefix for all users created for this provider"
                        },
                        "discoveryUrl": {
                          "type": "string",
                          "example": "https://foo.com/.well-known/openid-configuration",
                          "description": "The URL for the non-standard discovery endpoint."
                        },
                        "usernameClaim": {
                          "type": "string",
                          "example": "fooAlt",
                          "description": "Allows a different OpenID Connect field to be specified instead of the Subject (sub)."
                        },
                        "rolesClaim": {
                          "type": "string",
                          "example": "roles",
                          "description": "If set, the value(s) of the given OpenID Connect authentication token claim will be added to the user's roles.\nThe value of this claim in the OIDC token must be either a string or an array of strings, any other type will result in an error.\n"
                        },
                        "providerId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "UUID of the provider."
                        },
                        "isDefault": {
                          "type": "boolean",
                          "readOnly": true,
                          "description": "Indicates whether this is the default OpenID Connect provider."
                        }
                      },
                      "example": {
                        "issuer": "foo",
                        "register": true,
                        "clientId": "foo_client",
                        "userPrefix": "fooOIDC",
                        "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                        "usernameClaim": "fooAlt"
                      }
                    }
                  },
                  "cors": {
                    "description": "Cross-Origin Resource Sharing (CORS) configuration, used to enable granular access control to trusted domains for Origin and Login purposes in browser-based and hybrid applications.",
                    "type": "object",
                    "required": [
                      "origin"
                    ],
                    "properties": {
                      "origin": {
                        "type": "array",
                        "description": "List of allowed origins, use ['*'] to allow access from everywhere",
                        "example": [
                          "http://example.com",
                          "http://staging.example.com"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "loginOrigin": {
                        "type": "array",
                        "description": "List of allowed login origins",
                        "example": [
                          "http://example.com"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "headers": {
                        "type": "array",
                        "description": "List of allowed headers",
                        "example": [
                          "Content-Type"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "maxAge": {
                        "description": "Specifies the duration (in seconds) for which the results of a preflight request can be cached.",
                        "type": "integer",
                        "default": 5
                      },
                      "disabled": {
                        "description": "disable CORS",
                        "example": false,
                        "type": "boolean"
                      }
                    },
                    "example": {
                      "origin": [
                        "http://example.com",
                        "http://staging.example.com"
                      ],
                      "loginOrigin": [
                        "http://example.com"
                      ],
                      "headers": [
                        "Content-Type"
                      ],
                      "maxAge": 600,
                      "disabled": false
                    }
                  },
                  "scopes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "description": "The scope config, defining Access control and validation functions, and import filters for each collection. The key to the scope config object is the name of the scope. Only one scope is allowed per App Endpoint.",
                      "required": [
                        "collections"
                      ],
                      "properties": {
                        "collections": {
                          "type": "object",
                          "description": "The collection config, defining Access control and validation functions and import filters for this collection. The key to the collection config object is the name of the collection.",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "accessControlFunction": {
                                "type": "string",
                                "example": "function(doc){channel(\"collection name\");}",
                                "description": "The Javascript function that is used to specify the access control policies to be applied to documents in this collection.\nEvery document update is processed by this function. The default access control function is 'function(doc){channel(doc.channels);}'\nfor the default collection and 'function(doc){channel(collectionName);}' for named collections.\n"
                              },
                              "importFilter": {
                                "type": "string",
                                "example": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }",
                                "description": "The Javascript function used to specify the documents in this collection that are to be imported by the App Endpoint. By default, all documents in corresponding collection are imported."
                              }
                            }
                          }
                        }
                      }
                    },
                    "example": {
                      "scope_1": {
                        "collections": {
                          "collection_1": {
                            "accessControlFunction": "function(doc){channel(doc.channels);}",
                            "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                          },
                          "collection_2": {
                            "accessControlFunction": "function(doc){channel(doc.channels);}",
                            "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                          }
                        }
                      }
                    },
                    "default": {
                      "_default": {
                        "collections": {
                          "_default": {
                            "accessControlFunction": "function(doc){channel(doc.channels);}",
                            "importFilter": " function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                          }
                        }
                      }
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "App Endpoint name. Must be less than 228 characters. It can only contain lowercase letters, numbers, or the following characters `-_$+()`",
                    "example": "appEndpoint1"
                  },
                  "deltaSyncEnabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable/disable delta sync"
                  },
                  "userXattrKey": {
                    "type": "string",
                    "example": "syncFnXattr",
                    "description": "The key of the user-extended attributes (xattr) that will be accessible from the Access control and validation function. If left empty, the feature will be disabled."
                  }
                }
              },
              "examples": {
                "CreateAppEndpointRequestDefaultCollection": {
                  "value": {
                    "bucket": "bucket1",
                    "name": "defaultAppEndpoint",
                    "userXattrKey": "key",
                    "deltaSyncEnabled": true,
                    "scopes": {
                      "_default": {
                        "collections": {
                          "_default": {
                            "accessControlFunction": "function(doc){channel(doc.channels);}",
                            "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                          }
                        }
                      }
                    },
                    "cors": {
                      "origin": [
                        "http://example.com",
                        "http://staging.example.com"
                      ],
                      "loginOrigin": [
                        "http://example.com"
                      ],
                      "headers": [
                        "Content-Type"
                      ],
                      "disabled": true
                    },
                    "oidc": [
                      {
                        "issuer": "https://example.auth.com",
                        "register": true,
                        "clientId": "foo_client",
                        "userPrefix": "fooOIDC",
                        "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                        "usernameClaim": "fooAlt",
                        "rolesClaim": "roles"
                      },
                      {
                        "issuer": "https://example.auth.com",
                        "register": true,
                        "clientId": "bar_client",
                        "userPrefix": "barOIDC",
                        "discoveryUrl": "https://bar.com/.well-known/openid-configuration",
                        "usernameClaim": "barAlt"
                      }
                    ]
                  }
                },
                "CreateAppEndpointRequestNamedCollections": {
                  "value": {
                    "bucket": "bucket1",
                    "name": "storeAppEndpoint",
                    "deltaSyncEnabled": false,
                    "userXattrKey": "key",
                    "scopes": {
                      "scope_1": {
                        "collections": {
                          "collection_1": {
                            "accessControlFunction": "function(doc){channel(doc.channels);}",
                            "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                          },
                          "collection_2": {
                            "accessControlFunction": "function(doc){channel(doc.channels);}"
                          }
                        }
                      }
                    },
                    "cors": {
                      "origin": [
                        "http://example.com",
                        "http://staging.example.com"
                      ],
                      "loginOrigin": [
                        "http://example.com"
                      ],
                      "headers": [
                        "Content-Type"
                      ],
                      "disabled": true
                    },
                    "oidc": [
                      {
                        "issuer": "https://example.auth.com",
                        "register": true,
                        "clientId": "bar_client",
                        "userPrefix": "barOIDC",
                        "discoveryUrl": "https://bar.com/.well-known/openid-configuration",
                        "usernameClaim": "barAlt"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created an App Endpoint."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/appEndpoints/{appEndpointName}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appEndpointName",
          "description": "The name of the App Endpoint.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "endpoint1"
          }
        }
      ],
      "get": {
        "summary": "Get App Endpoint",
        "description": "Fetches the details of the given App Endpoint, including operational and resync states and various configurations such as Access Control function and Import Filter.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "getAppEndpoint",
        "responses": {
          "200": {
            "description": "Successfully fetched the App Endpoint based on the App Endpoint name.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "bucket"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "App Endpoint name.",
                      "example": "appEndpoint1"
                    },
                    "cors": {
                      "description": "Cross-Origin Resource Sharing (CORS) configuration, used to enable granular access control to trusted domains for Origin and Login purposes in browser-based and hybrid applications.",
                      "type": "object",
                      "required": [
                        "origin"
                      ],
                      "properties": {
                        "origin": {
                          "type": "array",
                          "description": "List of allowed origins, use ['*'] to allow access from everywhere",
                          "example": [
                            "http://example.com",
                            "http://staging.example.com"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "loginOrigin": {
                          "type": "array",
                          "description": "List of allowed login origins",
                          "example": [
                            "http://example.com"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "List of allowed headers",
                          "example": [
                            "Content-Type"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "description": "Specifies the duration (in seconds) for which the results of a preflight request can be cached.",
                          "type": "integer",
                          "default": 5
                        },
                        "disabled": {
                          "description": "disable CORS",
                          "example": false,
                          "type": "boolean"
                        }
                      },
                      "example": {
                        "origin": [
                          "http://example.com",
                          "http://staging.example.com"
                        ],
                        "loginOrigin": [
                          "http://example.com"
                        ],
                        "headers": [
                          "Content-Type"
                        ],
                        "maxAge": 600,
                        "disabled": false
                      }
                    },
                    "deltaSyncEnabled": {
                      "type": "boolean",
                      "example": false,
                      "description": "Enable or disable delta sync"
                    },
                    "bucket": {
                      "type": "string",
                      "example": "bucket1",
                      "description": "The Capella Cluster backing bucket for the App Endpoint."
                    },
                    "scopes": {
                      "description": "Scopes and collection specific config.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "The scope config, defining Access control and validation functions, and import filters for each collection. The key to the scope config object is the name of the scope. Only one scope is allowed per App Endpoint.",
                        "required": [
                          "collections"
                        ],
                        "properties": {
                          "collections": {
                            "type": "object",
                            "description": "The collection config, defining Access control and validation functions and import filters for this collection. The key to the collection config object is the name of the collection.",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "accessControlFunction": {
                                  "type": "string",
                                  "example": "function(doc){channel(\"collection name\");}",
                                  "description": "The Javascript function that is used to specify the access control policies to be applied to documents in this collection.\nEvery document update is processed by this function. The default access control function is 'function(doc){channel(doc.channels);}'\nfor the default collection and 'function(doc){channel(collectionName);}' for named collections.\n"
                                },
                                "importFilter": {
                                  "type": "string",
                                  "example": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }",
                                  "description": "The Javascript function used to specify the documents in this collection that are to be imported by the App Endpoint. By default, all documents in corresponding collection are imported."
                                }
                              }
                            }
                          }
                        }
                      },
                      "example": {
                        "scope_1": {
                          "collections": {
                            "collection_1": {
                              "accessControlFunction": "function(doc){channel(doc.channels);}",
                              "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                            },
                            "collection_2": {
                              "accessControlFunction": "function(doc){channel(doc.channels);}",
                              "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                            }
                          }
                        }
                      },
                      "default": {
                        "_default": {
                          "collections": {
                            "_default": {
                              "accessControlFunction": "function(doc){channel(doc.channels);}",
                              "importFilter": " function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                            }
                          }
                        }
                      }
                    },
                    "userXattrKey": {
                      "type": "string",
                      "example": "syncFnXattr",
                      "description": "The key of the user-extended attributes (xattr) that will be accessible from the Access control and validation function. If left empty, the feature will be disabled."
                    },
                    "state": {
                      "type": "string",
                      "example": "Online",
                      "description": "App Endpoint state."
                    },
                    "oidc": {
                      "description": "OpenID Connect provider configuration.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "issuer",
                          "clientId"
                        ],
                        "properties": {
                          "issuer": {
                            "type": "string",
                            "example": "https://example.auth.com",
                            "description": "The URL for the OpenID Connect issuer."
                          },
                          "register": {
                            "type": "boolean",
                            "example": true,
                            "description": "Indicates whether to register a new App Service user account when a user logs in using OpenID Connect."
                          },
                          "clientId": {
                            "type": "string",
                            "example": "foo_client",
                            "description": "The OpenID Connect provider client ID."
                          },
                          "userPrefix": {
                            "type": "string",
                            "example": "fooOIDC",
                            "description": "Username prefix for all users created for this provider"
                          },
                          "discoveryUrl": {
                            "type": "string",
                            "example": "https://foo.com/.well-known/openid-configuration",
                            "description": "The URL for the non-standard discovery endpoint."
                          },
                          "usernameClaim": {
                            "type": "string",
                            "example": "fooAlt",
                            "description": "Allows a different OpenID Connect field to be specified instead of the Subject (sub)."
                          },
                          "rolesClaim": {
                            "type": "string",
                            "example": "roles",
                            "description": "If set, the value(s) of the given OpenID Connect authentication token claim will be added to the user's roles.\nThe value of this claim in the OIDC token must be either a string or an array of strings, any other type will result in an error.\n"
                          },
                          "providerId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "UUID of the provider."
                          },
                          "isDefault": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Indicates whether this is the default OpenID Connect provider."
                          }
                        },
                        "example": {
                          "issuer": "foo",
                          "register": true,
                          "clientId": "foo_client",
                          "userPrefix": "fooOIDC",
                          "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                          "usernameClaim": "fooAlt"
                        }
                      }
                    },
                    "requireResync": {
                      "type": "object",
                      "example": {
                        "scope_1": {
                          "items": [
                            "collection_1"
                          ]
                        }
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "description": "Scopes and collections that require resyncing."
                    },
                    "isRequireResync": {
                      "type": "boolean",
                      "description": "Indicates whether the App Endpoint requires resyncing."
                    },
                    "adminURL": {
                      "type": "string",
                      "description": "A URL for the admin API used for the administration of App Endpoints. For more information, read the [Capella App Services Admin API Reference](https://docs.couchbase.com/cloud/app-services/references/rest-api-introduction.html#:~:text=Capella%20App%20Services%20Admin%20API%20Reference)"
                    },
                    "metricsURL": {
                      "type": "string",
                      "description": "A URL for the metrics API used for monitoring App Services performance metrics. For more information, read the [Capella App Services Metrics API Reference](https://docs.couchbase.com/cloud/app-services/references/rest_api_metric.html)"
                    },
                    "publicURL": {
                      "type": "string",
                      "description": "A URL for the public API used for access to functions for data access and manipulation. For more information, read the [Capella App Services Public API Reference](https://docs.couchbase.com/cloud/app-services/references/rest_api_public.html)"
                    }
                  }
                },
                "examples": {
                  "GetAppEndpointDefaultCollection": {
                    "value": {
                      "bucket": "bucket1",
                      "name": "defaultAppEndpoint",
                      "userXattrKey": "key",
                      "deltaSyncEnabled": true,
                      "oidc": [
                        {
                          "issuer": "https://example.auth.com",
                          "register": true,
                          "clientId": "foo_client",
                          "userPrefix": "fooOIDC",
                          "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                          "usernameClaim": "fooAlt",
                          "rolesClaim": "roles",
                          "providerId": "ffffffff-aaaa-1414-eeee-000000000000",
                          "isDefault": true
                        }
                      ],
                      "cors": {
                        "origin": [
                          "http://example.com",
                          "http://staging.example.com"
                        ],
                        "loginOrigin": [
                          "http://example.com"
                        ],
                        "headers": [
                          "Content-Type"
                        ],
                        "maxAge": 600,
                        "disabled": false
                      },
                      "scopes": {
                        "_default": {
                          "collections": {
                            "_default": {
                              "accessControlFunction": "function(doc){channel(doc.channels);}",
                              "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                            }
                          }
                        }
                      },
                      "requireResync": {
                        "_default": {
                          "items": []
                        }
                      },
                      "adminURL": "https://wdltntbkyuqpaaco.apps.sandbox.project1.com:4985",
                      "metricsURL": "https://wdltntbkyuqpaaco.apps.sandbox.project1.com:4986",
                      "publicURL": "https://wdltntbkyuqpaaco.apps.sandbox.project1.com:4984"
                    }
                  },
                  "GetAppEndpointNamedCollection": {
                    "value": {
                      "bucket": "bucket1",
                      "name": "defaultAppEndpoint",
                      "userXattrKey": "key",
                      "deltaSyncEnabled": true,
                      "oidc": [
                        {
                          "issuer": "https://example.auth.com",
                          "register": true,
                          "clientId": "foo_client",
                          "userPrefix": "fooOIDC",
                          "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                          "usernameClaim": "fooAlt",
                          "rolesClaim": "roles",
                          "providerId": "ffffffff-aaaa-1414-eeee-000000000000",
                          "isDefault": true
                        }
                      ],
                      "cors": {
                        "origin": [
                          "http://example.com",
                          "http://staging.example.com"
                        ],
                        "loginOrigin": [
                          "http://example.com"
                        ],
                        "headers": [
                          "Content-Type"
                        ],
                        "disabled": true
                      },
                      "scopes": {
                        "scope_1": {
                          "collections": {
                            "collection_1": {
                              "accessControlFunction": "function(doc){channel(doc.channels);}",
                              "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                            },
                            "collection_2": {
                              "accessControlFunction": "function(doc){channel(doc.channels);}"
                            }
                          }
                        }
                      },
                      "requireResync": {
                        "scope_1": {
                          "items": []
                        }
                      },
                      "adminURL": "https://wdltntbkyuqpaaco.apps.sandbox.project1.com:4985",
                      "metricsURL": "https://wdltntbkyuqpaaco.apps.sandbox.project1.com:4986",
                      "publicURL": "https://wdltntbkyuqpaaco.apps.sandbox.project1.com:4984"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update App Endpoint",
        "description": "Replaces a specified App Endpoint’s configurations such as Access Control function, Import Filter, Delta Sync, or user defined xattr key.\nThe first OpenID Connect provider given will be set as the default provider for the App Endpoint. To change the default, please use the Change App Endpoint OIDC Default Provider endpoint.\nAll fields are required, the App Endpoint and bucket names cannot be changed.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "putAppEndpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "bucket",
                  "scopes",
                  "deltaSyncEnabled",
                  "userXattrKey",
                  "oidc",
                  "cors"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "App Endpoint name. Cannot be changed.",
                    "example": "appEndpoint1"
                  },
                  "bucket": {
                    "type": "string",
                    "example": "store_locations",
                    "description": "The Capella Cluster backing bucket for the App Endpoint. Cannot be changed."
                  },
                  "scopes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "description": "The scope config, defining Access control and validation functions, and import filters for each collection. The key to the scope config object is the name of the scope. Only one scope is allowed per App Endpoint.",
                      "required": [
                        "collections"
                      ],
                      "properties": {
                        "collections": {
                          "type": "object",
                          "description": "The collection config, defining Access control and validation functions and import filters for this collection. The key to the collection config object is the name of the collection.",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "accessControlFunction": {
                                "type": "string",
                                "example": "function(doc){channel(\"collection name\");}",
                                "description": "The Javascript function that is used to specify the access control policies to be applied to documents in this collection.\nEvery document update is processed by this function. The default access control function is 'function(doc){channel(doc.channels);}'\nfor the default collection and 'function(doc){channel(collectionName);}' for named collections.\n"
                              },
                              "importFilter": {
                                "type": "string",
                                "example": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }",
                                "description": "The Javascript function used to specify the documents in this collection that are to be imported by the App Endpoint. By default, all documents in corresponding collection are imported."
                              }
                            }
                          }
                        }
                      }
                    },
                    "example": {
                      "scope_1": {
                        "collections": {
                          "collection_1": {
                            "accessControlFunction": "function(doc){channel(doc.channels);}",
                            "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                          },
                          "collection_2": {
                            "accessControlFunction": "function(doc){channel(doc.channels);}",
                            "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                          }
                        }
                      }
                    },
                    "default": {
                      "_default": {
                        "collections": {
                          "_default": {
                            "accessControlFunction": "function(doc){channel(doc.channels);}",
                            "importFilter": " function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                          }
                        }
                      }
                    }
                  },
                  "deltaSyncEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable delta sync"
                  },
                  "userXattrKey": {
                    "type": "string",
                    "example": "syncFnXattr",
                    "description": "Key of user xattr that will be accessible from the Access control and validation function. If empty, the feature will be disabled."
                  },
                  "oidc": {
                    "description": "OpenID Connect provider configuration.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "issuer",
                        "clientId"
                      ],
                      "properties": {
                        "issuer": {
                          "type": "string",
                          "example": "https://example.auth.com",
                          "description": "The URL for the OpenID Connect issuer."
                        },
                        "register": {
                          "type": "boolean",
                          "example": true,
                          "description": "Indicates whether to register a new App Service user account when a user logs in using OpenID Connect."
                        },
                        "clientId": {
                          "type": "string",
                          "example": "foo_client",
                          "description": "The OpenID Connect provider client ID."
                        },
                        "userPrefix": {
                          "type": "string",
                          "example": "fooOIDC",
                          "description": "Username prefix for all users created for this provider"
                        },
                        "discoveryUrl": {
                          "type": "string",
                          "example": "https://foo.com/.well-known/openid-configuration",
                          "description": "The URL for the non-standard discovery endpoint."
                        },
                        "usernameClaim": {
                          "type": "string",
                          "example": "fooAlt",
                          "description": "Allows a different OpenID Connect field to be specified instead of the Subject (sub)."
                        },
                        "rolesClaim": {
                          "type": "string",
                          "example": "roles",
                          "description": "If set, the value(s) of the given OpenID Connect authentication token claim will be added to the user's roles.\nThe value of this claim in the OIDC token must be either a string or an array of strings, any other type will result in an error.\n"
                        },
                        "providerId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "UUID of the provider."
                        },
                        "isDefault": {
                          "type": "boolean",
                          "readOnly": true,
                          "description": "Indicates whether this is the default OpenID Connect provider."
                        }
                      },
                      "example": {
                        "issuer": "foo",
                        "register": true,
                        "clientId": "foo_client",
                        "userPrefix": "fooOIDC",
                        "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                        "usernameClaim": "fooAlt"
                      }
                    }
                  },
                  "cors": {
                    "description": "Cross-Origin Resource Sharing (CORS) configuration, used to enable granular access control to trusted domains for Origin and Login purposes in browser-based and hybrid applications.",
                    "type": "object",
                    "required": [
                      "origin"
                    ],
                    "properties": {
                      "origin": {
                        "type": "array",
                        "description": "List of allowed origins, use ['*'] to allow access from everywhere",
                        "example": [
                          "http://example.com",
                          "http://staging.example.com"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "loginOrigin": {
                        "type": "array",
                        "description": "List of allowed login origins",
                        "example": [
                          "http://example.com"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "headers": {
                        "type": "array",
                        "description": "List of allowed headers",
                        "example": [
                          "Content-Type"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "maxAge": {
                        "description": "Specifies the duration (in seconds) for which the results of a preflight request can be cached.",
                        "type": "integer",
                        "default": 5
                      },
                      "disabled": {
                        "description": "disable CORS",
                        "example": false,
                        "type": "boolean"
                      }
                    },
                    "example": {
                      "origin": [
                        "http://example.com",
                        "http://staging.example.com"
                      ],
                      "loginOrigin": [
                        "http://example.com"
                      ],
                      "headers": [
                        "Content-Type"
                      ],
                      "maxAge": 600,
                      "disabled": false
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully updated the App Endpoint metadata."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete App Endpoint",
        "description": "Deletes an existing App Endpoint given its name.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "deleteAppEndpoint",
        "responses": {
          "202": {
            "description": "Successfully deleted the App Endpoint by its App Endpoint name."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/appEndpoints/{appEndpointName}/collections": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appEndpointName",
          "description": "The name of the App Endpoint.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "endpoint1"
          }
        }
      ],
      "get": {
        "summary": "List App Endpoint Collections",
        "description": "Lists all the collections under a specific App Endpoint along with their associated configurations such as Access Control function, Import Filter or user defined xattr key.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "listAppEndpointCollections",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed all the collections under a specific App Endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "The scope config, defining Access control and validation functions, and import filters for each collection. The key to the scope config object is the name of the scope. Only one scope is allowed per App Endpoint.",
                    "required": [
                      "collections"
                    ],
                    "properties": {
                      "collections": {
                        "type": "object",
                        "description": "The collection config, defining Access control and validation functions and import filters for this collection. The key to the collection config object is the name of the collection.",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "accessControlFunction": {
                              "type": "string",
                              "example": "function(doc){channel(\"collection name\");}",
                              "description": "The Javascript function that is used to specify the access control policies to be applied to documents in this collection.\nEvery document update is processed by this function. The default access control function is 'function(doc){channel(doc.channels);}'\nfor the default collection and 'function(doc){channel(collectionName);}' for named collections.\n"
                            },
                            "importFilter": {
                              "type": "string",
                              "example": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }",
                              "description": "The Javascript function used to specify the documents in this collection that are to be imported by the App Endpoint. By default, all documents in corresponding collection are imported."
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "scope_1": {
                      "collections": {
                        "collection_1": {
                          "accessControlFunction": "function(doc){channel(doc.channels);}",
                          "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                        },
                        "collection_2": {
                          "accessControlFunction": "function(doc){channel(doc.channels);}",
                          "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                        }
                      }
                    }
                  },
                  "default": {
                    "_default": {
                      "collections": {
                        "_default": {
                          "accessControlFunction": "function(doc){channel(doc.channels);}",
                          "importFilter": " function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "ListAppEndpointCollectionsDefaultColl": {
                    "value": {
                      "scopes": {
                        "_default": {
                          "collections": {
                            "_default": {
                              "accessControlFunction": "function(doc){channel(doc.channels);}",
                              "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                            }
                          }
                        }
                      }
                    }
                  },
                  "ListAppEndpointCollectionsNamedColl": {
                    "value": {
                      "scopes": {
                        "scope_1": {
                          "collections": {
                            "collection_1": {
                              "accessControlFunction": "function(doc){channel(doc.channels);}",
                              "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                            },
                            "collection_2": {
                              "accessControlFunction": "function(doc){channel(doc.channels);}",
                              "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                            }
                          }
                        }
                      }
                    }
                  },
                  "ListAppEndpointCollectionsDefaultNamedColl": {
                    "value": {
                      "scopes": {
                        "scope_1": {
                          "collections": {
                            "_default": {
                              "accessControlFunction": "function(doc){channel(doc.channels);}",
                              "importFilter": "function(doc) { if (doc.type != 'mobile') { return false; } return true; }"
                            },
                            "collection_2": {
                              "accessControlFunction": "function(doc){channel(\"footer);}"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/appEndpoints/{appEndpointName}/activationStatus": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appEndpointName",
          "description": "The name of the App Endpoint.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "endpoint1"
          }
        }
      ],
      "post": {
        "summary": "Resume or Bring an App Endpoint online",
        "description": "Brings an App Endpoint online to close and reopen the connection to the backing Cluster bucket,\nre-establish access from the Public REST API and accept all incoming Admin API requests.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "postAppEndpointActivationStatus",
        "responses": {
          "202": {
            "description": "Accepted request to resume App Endpoint."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Pause or Take an App Endpoint offline",
        "description": "Take the database offline to run resync or to make changes without disrupting current App Endpoint operations.\nClients currently connected to the App Endpoint will not be able to sync data with the Cluster while the App Endpoint is paused.\nThis will not take the backing Cluster bucket offline.\nPausing an App Endpoint that is in the progress of coming online will pause the App Endpoint after it comes online.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "deleteAppEndpointActivationStatus",
        "responses": {
          "202": {
            "description": "Accepted request to pause App Endpoint."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/appEndpoints/{appEndpointName}/cors": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appEndpointName",
          "description": "The name of the App Endpoint.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "endpoint1"
          }
        }
      ],
      "get": {
        "summary": "Get the App Endpoint Cross-Origin Resource Sharing (CORS) Configuration.",
        "description": "Fetch the App Endpoint Cross-Origin Resource Sharing (CORS) Configuration.\nCORS is disabled by default. For more information\nSee [Cross-Origin Resource Sharing (CORS) on App Endpoints.](https://docs.couchbase.com/cloud/app-services/deployment/cors-configuration-for-app-services.html)\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "getAppEndpointCORS",
        "responses": {
          "200": {
            "description": "Successfully fetched the App Endpoint CORS config.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "origin"
                  ],
                  "properties": {
                    "origin": {
                      "type": "array",
                      "description": "List of allowed origins, use ['*'] to allow access from everywhere",
                      "example": [
                        "http://example.com",
                        "http://staging.example.com"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "loginOrigin": {
                      "type": "array",
                      "description": "List of allowed login origins",
                      "example": [
                        "http://example.com"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "headers": {
                      "type": "array",
                      "description": "List of allowed headers",
                      "example": [
                        "Content-Type"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "maxAge": {
                      "description": "Specifies the duration (in seconds) for which the results of a preflight request can be cached.",
                      "type": "integer",
                      "default": 5
                    },
                    "disabled": {
                      "description": "disable CORS",
                      "example": false,
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "origin": [
                      "http://example.com",
                      "http://staging.example.com"
                    ],
                    "loginOrigin": [
                      "http://example.com"
                    ],
                    "headers": [
                      "Content-Type"
                    ],
                    "maxAge": 600,
                    "disabled": false
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "The server did not get a response in time from the upstream server in order to complete the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "GatewayTimeout": {
                    "value": {
                      "httpStatusCode": 504,
                      "code": 1002,
                      "message": "The request timed out while waiting for a response from the upstream server.",
                      "hint": "The server exceeded the deadline for a response. Please try again."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Upsert the App Endpoint Cross-Origin Resource Sharing (CORS) Configuration.",
        "description": "Upsert the App Endpoint Cross-Origin Resource Sharing (CORS) Configuration.\nCORS is disabled by default. For more information\nSee [Cross-Origin Resource Sharing (CORS) on App Endpoints.](https://docs.couchbase.com/cloud/app-services/deployment/cors-configuration-for-app-services.html)\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "putAppEndpointCORS",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "origin"
                ],
                "properties": {
                  "origin": {
                    "type": "array",
                    "description": "List of allowed origins, use ['*'] to allow access from everywhere",
                    "example": [
                      "http://example.com",
                      "http://staging.example.com"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "loginOrigin": {
                    "type": "array",
                    "description": "List of allowed login origins",
                    "example": [
                      "http://example.com"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "headers": {
                    "type": "array",
                    "description": "List of allowed headers",
                    "example": [
                      "Content-Type"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "maxAge": {
                    "description": "Specifies the duration (in seconds) for which the results of a preflight request can be cached.",
                    "type": "integer",
                    "default": 5
                  },
                  "disabled": {
                    "description": "disable CORS",
                    "example": false,
                    "type": "boolean"
                  }
                },
                "example": {
                  "origin": [
                    "http://example.com",
                    "http://staging.example.com"
                  ],
                  "loginOrigin": [
                    "http://example.com"
                  ],
                  "headers": [
                    "Content-Type"
                  ],
                  "maxAge": 600,
                  "disabled": false
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Succesfully upserted App Endpoint CORS config."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "The server did not get a response in time from the upstream server in order to complete the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "GatewayTimeout": {
                    "value": {
                      "httpStatusCode": 504,
                      "code": 1002,
                      "message": "The request timed out while waiting for a response from the upstream server.",
                      "hint": "The server exceeded the deadline for a response. Please try again."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/appEndpoints/{appEndpointName}/adminUsers": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appEndpointName",
          "description": "The name of the App Endpoint.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "endpoint1"
          }
        }
      ],
      "get": {
        "summary": "List App Endpoint Admin Users",
        "description": "Lists the Admin Users that have access to the specified App Endpoint.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services"
        ],
        "operationId": "ListAppEndpointAdminUsers",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed the Admin Users for the specified App Endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier for the user.",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The GUID4 ID of the tenant.",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "projectId": {
                            "type": "string",
                            "description": "The GUID4 ID of the project.",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "clusterId": {
                            "type": "string",
                            "description": "The GUID4 ID of the cluster.",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the user.",
                            "example": "user1"
                          },
                          "endpoints": {
                            "type": "array",
                            "description": "The list of App Endpoints that the user has access to.",
                            "example": [
                              "appEndpoint1",
                              "appEndpoint2"
                            ],
                            "items": {
                              "type": "string"
                            }
                          },
                          "accessAllEndpoints": {
                            "description": "Give user access to all App Endpoints.",
                            "type": "boolean",
                            "example": false
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "data": [
                      {
                        "id": "eeeeeeee-aaaa-1414-eeee-999999999999",
                        "tenantId": "ffffffff-aaaa-1414-eeee-000000000000",
                        "projectId": "dddddddd-cccc-1414-eeee-77777777777",
                        "clusterId": "gggggggg-zzzz-1414-eeee-55555555555",
                        "name": "admin",
                        "endpoints": [
                          "appEndpoint1",
                          "appEndpoint2"
                        ],
                        "accessAllEndpoints": "false,",
                        "audit": {
                          "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                          "createdAt": "2024-09-01T12:34:56Z",
                          "modifiedBy": "",
                          "modifiedAt": "2024-09-01T12:34:56Z",
                          "version": 1
                        }
                      },
                      {
                        "id": "eeeeeeee-gggg-1456-tttt-999999999999",
                        "tenantId": "ffffffff-aaaa-1414-eeee-000000000000",
                        "projectId": "dddddddd-cccc-1414-eeee-77777777777",
                        "clusterId": "gggggggg-zzzz-1414-eeee-55555555555",
                        "name": "admin",
                        "endpoints": [
                          "appEndpoint1",
                          "appEndpoint2"
                        ],
                        "accessAllEndpoints": false,
                        "audit": {
                          "createdBy": "ffffffff-aaaa-1414-eeee-000000000000",
                          "createdAt": "2024-09-01T12:34:56Z",
                          "modifiedBy": "",
                          "modifiedAt": "2024-09-01T12:34:56Z",
                          "version": 1
                        }
                      }
                    ],
                    "cursor": {
                      "pages": {
                        "page": 2,
                        "next": 3,
                        "previous": 1,
                        "last": 10,
                        "perPage": 10,
                        "totalItems": 10
                      },
                      "hrefs": {
                        "first": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                        "last": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                        "previous": "https://cloud.couchbase.com/v4/users?page=1&perPage=10",
                        "next": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/appEndpoints/{appEndpointName}/auditLogEvents": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appEndpointName",
          "description": "The name of the App Endpoint.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "endpoint1"
          }
        }
      ],
      "get": {
        "summary": "List App Endpoint Audit Log Event IDs",
        "description": "Retrieves all audit log event ids, their descriptions and enabled status for an App Endpoint.\nThe list of filterable event IDs can be specified while configuring audit logging for the App Service.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services Audit Logging"
        ],
        "operationId": "getAppServiceAuditLogEvents",
        "responses": {
          "200": {
            "description": "Successful retrieval of audit log events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "object",
                      "description": "A map of audit event IDs to their verbose details",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Description of the audit event"
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "Indicates if the audit event is enabled"
                          },
                          "filterable": {
                            "type": "boolean",
                            "description": "Indicates if the audit event is filterable"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the audit event"
                          }
                        }
                      },
                      "example": {
                        "53290": {
                          "description": "Admin API user successfully authenticated",
                          "enabled": true,
                          "filterable": true,
                          "name": "Admin API user authenticated"
                        },
                        "53292": {
                          "description": "Admin API user failed to authorize",
                          "enabled": true,
                          "filterable": true,
                          "name": "Admin API user authorization failed"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/appEndpoints/{appEndpointName}/auditLog": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appEndpointName",
          "description": "The name of the App Endpoint.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "endpoint1"
          }
        }
      ],
      "put": {
        "summary": "Update App Endpoint Audit Logging Config",
        "description": "Updates the audit logging configuration for a specific App Endpoint. Operations performed by disabled users and roles are excluded from audit logs.\nSee a list of event IDs by calling /auditLogEvents, add event IDs to the enabledEventIds field to enable audit logging for those events.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n\n To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services Audit Logging"
        ],
        "operationId": "putAppEndpointAuditLogConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "auditEnabled": {
                    "type": "boolean",
                    "description": "Determines whether audit logging is enabled"
                  },
                  "enabledEventIds": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID of the enabled event"
                        }
                      }
                    }
                  },
                  "disabledUsers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "domain",
                        "name"
                      ],
                      "properties": {
                        "domain": {
                          "type": "string",
                          "description": "Domain of the user/role. Can be used to filter logs by domain. Example values:\n  - sgw\n  - cbs\n"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the user/role",
                          "maxLength": 256
                        }
                      }
                    }
                  },
                  "disabledRoles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "domain",
                        "name"
                      ],
                      "properties": {
                        "domain": {
                          "type": "string",
                          "description": "Domain of the user/role. Can be used to filter logs by domain. Example values:\n  - sgw\n  - cbs\n"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the user/role",
                          "maxLength": 256
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful update of audit logging configuration"
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get App Endpoint Audit Logging Config",
        "description": "Retrieves the audit logging configuration for a specific App Endpoint.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services Audit Logging"
        ],
        "operationId": "getAppEndpointAuditLogConfig",
        "responses": {
          "200": {
            "description": "Successful retrieval of audit logging configuration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "auditEnabled": {
                      "type": "boolean",
                      "description": "Determines whether audit logging is enabled"
                    },
                    "enabledEventIds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "ID of the enabled event"
                          }
                        }
                      }
                    },
                    "disabledUsers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "domain",
                          "name"
                        ],
                        "properties": {
                          "domain": {
                            "type": "string",
                            "description": "Domain of the user/role. Can be used to filter logs by domain. Example values:\n  - sgw\n  - cbs\n"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the user/role",
                            "maxLength": 256
                          }
                        }
                      }
                    },
                    "disabledRoles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "domain",
                          "name"
                        ],
                        "properties": {
                          "domain": {
                            "type": "string",
                            "description": "Domain of the user/role. Can be used to filter logs by domain. Example values:\n  - sgw\n  - cbs\n"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the user/role",
                            "maxLength": 256
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/appEndpoints/{appEndpointKeyspace}/accessControlFunction": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appEndpointKeyspace",
          "description": "A specific collection denoted by the App Endpoint name, the scope name and collection name separated by a period, for example \"endpoint1.scope1.collection1\".\nIf only an App Endpoint name is provided this will be interpreted as \"endpoint1._default._default\". If only an App Endpoint name and collection name are\nprovided these will interpreted as a named collection within the default scope, for example \"endpoint1.collection1\" will be interpreted as \"endpoint1._default.collection1\".\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "endpoint1.scope1.collection1"
          }
        }
      ],
      "get": {
        "summary": "Get Access Control and Validation function",
        "description": "Retrieves the Access Control and Validation function for the given keyspace.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "getAccessFunction",
        "responses": {
          "200": {
            "description": "Successfully retrieved the Access control and validation function.",
            "content": {
              "application/javascript": {
                "schema": {
                  "type": "string",
                  "description": "All mutations in this collection are processed by this Javascript function",
                  "example": "function(doc,oldDoc,meta){channel('collection name');}"
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Upsert custom Access Control and Validation function",
        "description": "Used to upsert a custom Access Control and Validation function for the given keyspace.\nThis is a Javascript function specified at a keyspace, where a user’s read/write access is defined for documents in that particular keyspace.\nEvery document mutation is processed by this function. If an Access Control function is not explicitly defined, a default is applied.\n[Read more.](https://docs.couchbase.com/cloud/app-services/deployment/access-control-data-validation.html?)\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "putAccessFunction",
        "requestBody": {
          "content": {
            "application/javascript": {
              "schema": {
                "type": "string",
                "description": "All mutations in this collection are processed by this Javascript function",
                "example": "function(doc,oldDoc,meta){channel('collection name');}"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully upserted the Access control and validation function ."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Access Control and Validation function",
        "description": "Deletes the Access Control and Validation function for the given keyspace.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "deleteAccessFunction",
        "responses": {
          "202": {
            "description": "Successfully deleted the Access control and validation function."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/appEndpoints/{appEndpointKeyspace}/importFilter": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appEndpointKeyspace",
          "description": "A specific collection denoted by the App Endpoint name, the scope name and collection name separated by a period, for example \"endpoint1.scope1.collection1\".\nIf only an App Endpoint name is provided this will be interpreted as \"endpoint1._default._default\". If only an App Endpoint name and collection name are\nprovided these will interpreted as a named collection within the default scope, for example \"endpoint1.collection1\" will be interpreted as \"endpoint1._default.collection1\".\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "endpoint1.scope1.collection1"
          }
        }
      ],
      "get": {
        "summary": "Get Import Filter",
        "description": "Retrieves the Import Filter for the given keyspace.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "getImportFilter",
        "responses": {
          "200": {
            "description": "Successfully retrieved the Import Filter.",
            "content": {
              "application/javascript": {
                "schema": {
                  "type": "string",
                  "description": "The Javascript function used to specify the documents in this collection that are to be imported by the App Endpoint. By default, all documents in corresponding collection are imported.",
                  "example": " function(doc) { if (doc.type == 'mobile') { return true; } }"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Upsert Import Filter",
        "description": "Upserts the Import Filter for the given keyspace. By default, there is no import filter and all documents are imported.\nImport Filters identify the subset of documents eligible to be replicated by App services based on user-defined requirements.\nThis subset is applied to all future mutations.\nOnce the document has been imported and processed by the App Endpoint, changing the Import Filter will not remove it,\neven if the updated import filters would prevent newer mutations or iterations of the document from getting imported.\n[Read more.](https://docs.couchbase.com/cloud/app-services/deployment/import-filters.html)\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "putImportFilter",
        "requestBody": {
          "content": {
            "application/javascript": {
              "schema": {
                "type": "string",
                "description": "The Javascript function used to specify the documents in this collection that are to be imported by the App Endpoint. By default, all documents in corresponding collection are imported.",
                "example": " function(doc) { if (doc.type == 'mobile') { return true; } }"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully upserted the Import Filter ."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Import Filter",
        "description": "Deletes the Import Filter for the given keyspace.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "deleteImportFilter",
        "responses": {
          "202": {
            "description": "Successfully deleted the Import Filter."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/appEndpoints/{appEndpointName}/oidcProviders": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appEndpointName",
          "description": "The name of the App Endpoint.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "endpoint1"
          }
        }
      ],
      "post": {
        "summary": "Create App Endpoint OpenID Connect (OIDC) Provider",
        "description": "Creates an OIDC provider for the specified App Endpoint.\nThe first OIDC provider will automatically be set as the default OIDC provider.\nAll client requests will use the default OIDC provider, unless the OIDC provider for the request is explicitly specified on authentication.\nSee more [here](https://docs.couchbase.com/cloud/app-services/user-management/set-up-authentication-provider.html#oidc-authorization-step-by-step).\n\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "createAppEndpointOIDCProvider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "issuer",
                  "clientId"
                ],
                "properties": {
                  "issuer": {
                    "type": "string",
                    "example": "https://example.auth.com",
                    "description": "The URL for the OpenID Connect issuer."
                  },
                  "register": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicates whether to register a new App Service user account when a user logs in using OpenID Connect."
                  },
                  "clientId": {
                    "type": "string",
                    "example": "foo_client",
                    "description": "The OpenID Connect provider client ID."
                  },
                  "userPrefix": {
                    "type": "string",
                    "example": "fooOIDC",
                    "description": "Username prefix for all users created for this provider"
                  },
                  "discoveryUrl": {
                    "type": "string",
                    "example": "https://foo.com/.well-known/openid-configuration",
                    "description": "The URL for the non-standard discovery endpoint."
                  },
                  "usernameClaim": {
                    "type": "string",
                    "example": "fooAlt",
                    "description": "Allows a different OpenID Connect field to be specified instead of the Subject (sub)."
                  },
                  "rolesClaim": {
                    "type": "string",
                    "example": "roles",
                    "description": "If set, the value(s) of the given OpenID Connect authentication token claim will be added to the user's roles.\nThe value of this claim in the OIDC token must be either a string or an array of strings, any other type will result in an error.\n"
                  }
                },
                "example": {
                  "issuer": "foo",
                  "register": true,
                  "clientId": "foo_client",
                  "userPrefix": "fooOIDC",
                  "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                  "usernameClaim": "fooAlt"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created OIDC Provider.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "providerId"
                  ],
                  "description": "The UUID of the OpenID Connect provider.",
                  "properties": {
                    "providerId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "The server did not get a response in time from the upstream server in order to complete the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "GatewayTimeout": {
                    "value": {
                      "httpStatusCode": 504,
                      "code": 1002,
                      "message": "The request timed out while waiting for a response from the upstream server.",
                      "hint": "The server exceeded the deadline for a response. Please try again."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List App Endpoint OpenID Connect (OIDC) Providers",
        "description": "List OpenID Connect (OIDC) Providers configured on an App Endpoint.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "listAppEndpointOIDCProviders",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched OIDC Providers.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "issuer",
                          "clientId"
                        ],
                        "properties": {
                          "issuer": {
                            "type": "string",
                            "example": "https://example.auth.com",
                            "description": "The URL for the OpenID Connect issuer."
                          },
                          "register": {
                            "type": "boolean",
                            "example": true,
                            "description": "Indicates whether to register a new App Service user account when a user logs in using OpenID Connect."
                          },
                          "clientId": {
                            "type": "string",
                            "example": "foo_client",
                            "description": "The OpenID Connect provider client ID."
                          },
                          "userPrefix": {
                            "type": "string",
                            "example": "fooOIDC",
                            "description": "Username prefix for all users created for this provider"
                          },
                          "discoveryUrl": {
                            "type": "string",
                            "example": "https://foo.com/.well-known/openid-configuration",
                            "description": "The URL for the non-standard discovery endpoint."
                          },
                          "usernameClaim": {
                            "type": "string",
                            "example": "fooAlt",
                            "description": "Allows a different OpenID Connect field to be specified instead of the Subject (sub)."
                          },
                          "rolesClaim": {
                            "type": "string",
                            "example": "roles",
                            "description": "If set, the value(s) of the given OpenID Connect authentication token claim will be added to the user's roles.\nThe value of this claim in the OIDC token must be either a string or an array of strings, any other type will result in an error.\n"
                          },
                          "providerId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "UUID of the provider."
                          },
                          "isDefault": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Indicates whether this is the default OpenID Connect provider."
                          }
                        },
                        "example": {
                          "issuer": "foo",
                          "register": true,
                          "clientId": "foo_client",
                          "userPrefix": "fooOIDC",
                          "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                          "usernameClaim": "fooAlt"
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "ListOIDCProvidersExample": {
                    "value": {
                      "data": [
                        {
                          "issuer": "https://example.auth.com",
                          "register": true,
                          "clientId": "foo_client",
                          "userPrefix": "fooOIDC",
                          "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                          "usernameClaim": "fooAlt",
                          "rolesClaim": "roles",
                          "providerId": "ffffffff-aaaa-1414-eeee-000000000000",
                          "isDefault": true
                        },
                        {
                          "issuer": "https://example.auth.com",
                          "register": true,
                          "clientId": "bar_client",
                          "userPrefix": "barOIDC",
                          "discoveryUrl": "https://bar.com/.well-known/openid-configuration",
                          "usernameClaim": "barAlt",
                          "providerId": "ffffffff-aaaa-1414-eeee-000000000000",
                          "isDefault": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "The server did not get a response in time from the upstream server in order to complete the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "GatewayTimeout": {
                    "value": {
                      "httpStatusCode": 504,
                      "code": 1002,
                      "message": "The request timed out while waiting for a response from the upstream server.",
                      "hint": "The server exceeded the deadline for a response. Please try again."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/appEndpoints/{appEndpointName}/oidcProviders/{OIDCProviderId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appEndpointName",
          "description": "The name of the App Endpoint.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "endpoint1"
          }
        },
        {
          "name": "OIDCProviderId",
          "description": "The GUID4 ID of the OpenID Connect Provider.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get App Endpoint OpenID Connect (OIDC) Provider",
        "description": "Fetches an OIDC provider by ID for the specified App Endpoint.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "getAppEndpointOIDCProvider",
        "responses": {
          "200": {
            "description": "Successfully fetched the OIDC Provider.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "issuer",
                    "clientId"
                  ],
                  "properties": {
                    "issuer": {
                      "type": "string",
                      "example": "https://example.auth.com",
                      "description": "The URL for the OpenID Connect issuer."
                    },
                    "register": {
                      "type": "boolean",
                      "example": true,
                      "description": "Indicates whether to register a new App Service user account when a user logs in using OpenID Connect."
                    },
                    "clientId": {
                      "type": "string",
                      "example": "foo_client",
                      "description": "The OpenID Connect provider client ID."
                    },
                    "userPrefix": {
                      "type": "string",
                      "example": "fooOIDC",
                      "description": "Username prefix for all users created for this provider"
                    },
                    "discoveryUrl": {
                      "type": "string",
                      "example": "https://foo.com/.well-known/openid-configuration",
                      "description": "The URL for the non-standard discovery endpoint."
                    },
                    "usernameClaim": {
                      "type": "string",
                      "example": "fooAlt",
                      "description": "Allows a different OpenID Connect field to be specified instead of the Subject (sub)."
                    },
                    "rolesClaim": {
                      "type": "string",
                      "example": "roles",
                      "description": "If set, the value(s) of the given OpenID Connect authentication token claim will be added to the user's roles.\nThe value of this claim in the OIDC token must be either a string or an array of strings, any other type will result in an error.\n"
                    },
                    "providerId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID of the provider."
                    },
                    "isDefault": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates whether this is the default OpenID Connect provider."
                    }
                  },
                  "example": {
                    "issuer": "foo",
                    "register": true,
                    "clientId": "foo_client",
                    "userPrefix": "fooOIDC",
                    "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                    "usernameClaim": "fooAlt"
                  }
                },
                "examples": {
                  "GetOIDCProviderResponse": {
                    "value": {
                      "issuer": "foo",
                      "register": true,
                      "clientId": "foo_client",
                      "userPrefix": "fooOIDC",
                      "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                      "usernameClaim": "fooAlt",
                      "isDefault": true
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "The server did not get a response in time from the upstream server in order to complete the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "GatewayTimeout": {
                    "value": {
                      "httpStatusCode": 504,
                      "code": 1002,
                      "message": "The request timed out while waiting for a response from the upstream server.",
                      "hint": "The server exceeded the deadline for a response. Please try again."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update App Endpoint OpenID Connect (OIDC) Provider",
        "description": "Updates an OIDC provider for the specified App Endpoint.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "updateAppEndpointOIDCProvider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "issuer",
                  "clientId"
                ],
                "properties": {
                  "issuer": {
                    "type": "string",
                    "example": "https://example.auth.com",
                    "description": "The URL for the OpenID Connect issuer."
                  },
                  "register": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicates whether to register a new App Service user account when a user logs in using OpenID Connect."
                  },
                  "clientId": {
                    "type": "string",
                    "example": "foo_client",
                    "description": "The OpenID Connect provider client ID."
                  },
                  "userPrefix": {
                    "type": "string",
                    "example": "fooOIDC",
                    "description": "Username prefix for all users created for this provider"
                  },
                  "discoveryUrl": {
                    "type": "string",
                    "example": "https://foo.com/.well-known/openid-configuration",
                    "description": "The URL for the non-standard discovery endpoint."
                  },
                  "usernameClaim": {
                    "type": "string",
                    "example": "fooAlt",
                    "description": "Allows a different OpenID Connect field to be specified instead of the Subject (sub)."
                  },
                  "rolesClaim": {
                    "type": "string",
                    "example": "roles",
                    "description": "If set, the value(s) of the given OpenID Connect authentication token claim will be added to the user's roles.\nThe value of this claim in the OIDC token must be either a string or an array of strings, any other type will result in an error.\n"
                  }
                },
                "example": {
                  "issuer": "foo",
                  "register": true,
                  "clientId": "foo_client",
                  "userPrefix": "fooOIDC",
                  "discoveryUrl": "https://foo.com/.well-known/openid-configuration",
                  "usernameClaim": "fooAlt"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully updated the App Endpoint OIDC provider based on the OIDCProviderId."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "The server did not get a response in time from the upstream server in order to complete the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "GatewayTimeout": {
                    "value": {
                      "httpStatusCode": 504,
                      "code": 1002,
                      "message": "The request timed out while waiting for a response from the upstream server.",
                      "hint": "The server exceeded the deadline for a response. Please try again."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete App Endpoint OpenID Connect (OIDC) Provider",
        "description": "Deletes an OIDC provider for the specified App Endpoint. Deleting the default provider will error unless it is the only provider.\nBefore deleting the default provider, you must set a new provider as default or have no other providers.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "deleteAppEndpointOIDCProvider",
        "responses": {
          "202": {
            "description": "Successfully deleted the OIDC Provider."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "The server did not get a response in time from the upstream server in order to complete the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "GatewayTimeout": {
                    "value": {
                      "httpStatusCode": 504,
                      "code": 1002,
                      "message": "The request timed out while waiting for a response from the upstream server.",
                      "hint": "The server exceeded the deadline for a response. Please try again."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/appEndpoints/{appEndpointName}/oidcProviders/defaultProvider": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appEndpointName",
          "description": "The name of the App Endpoint.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "endpoint1"
          }
        }
      ],
      "put": {
        "summary": "Update App Endpoint Default OIDC Provider",
        "description": "Updates the default OIDC provider for the specified App Endpoint.\nAll client requests will use the default OIDC provider, unless the OIDC provider for the request is explicitly specified.\nSee more [here](https://docs.couchbase.com/cloud/app-services/user-management/set-up-authentication-provider.html#oidc-authorization-step-by-step).\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "updateAppEndpointOIDCDefaultProvider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "providerId"
                ],
                "description": "The UUID of the OpenID Connect provider.",
                "properties": {
                  "providerId": {
                    "type": "string",
                    "example": "ffffffff-aaaa-1414-eeee-000000000000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully updated the default OIDC provider."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "The server did not get a response in time from the upstream server in order to complete the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "GatewayTimeout": {
                    "value": {
                      "httpStatusCode": 504,
                      "code": 1002,
                      "message": "The request timed out while waiting for a response from the upstream server.",
                      "hint": "The server exceeded the deadline for a response. Please try again."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/appEndpoints/{appEndpointName}/resync": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appEndpointName",
          "description": "The name of the App Endpoint.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "endpoint1"
          }
        }
      ],
      "get": {
        "summary": "Get Resync Status",
        "description": "Fetches the Resync status of the given App Endpoint. If no resync operation was triggered, the response will say the status is completed\nwith 0 values for other properties.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "getAppEndpointResync",
        "responses": {
          "200": {
            "description": "Successfully fetched the App Endpoint Resync status based on the App Endpoint name.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "state",
                    "startTime",
                    "docsChanged",
                    "lastError",
                    "docsProcessed"
                  ],
                  "properties": {
                    "state": {
                      "type": "string",
                      "description": "The status of the current operation.",
                      "enum": [
                        "running",
                        "completed",
                        "stopping",
                        "stopped",
                        "error"
                      ],
                      "example": "running"
                    },
                    "startTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The ISO-8601 date and time the resync operation was started.",
                      "example": "2023-10-12T07:20:50.52Z"
                    },
                    "lastError": {
                      "type": "string",
                      "description": "The last error that occurred in the resync operation (if any)."
                    },
                    "docsChanged": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of documents that were changed during the resync operation.",
                      "example": 100
                    },
                    "docsProcessed": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The amount of docs that have been processed so far in the resync operation.",
                      "example": 500
                    },
                    "collections_processing": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Scope name with one or more collection names for which resync is triggered.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": {
                          "scope1": [
                            "collection_1",
                            "collection_2"
                          ]
                        }
                      },
                      "example": {
                        "scope1": [
                          "collection_1",
                          "collection_2"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "The server did not get a response in time from the upstream server in order to complete the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "GatewayTimeout": {
                    "value": {
                      "httpStatusCode": 504,
                      "code": 1002,
                      "message": "The request timed out while waiting for a response from the upstream server.",
                      "hint": "The server exceeded the deadline for a response. Please try again."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Start Resync",
        "description": "Initialises the Resync operation for the given collections.\nBy default, all collections that require resync will be resynced unless they are specified in the scopes property, in which case only\nthe specified collections that require resync will be resynced.\n\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "postAppEndpointResync",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scopes": {
                    "type": "object",
                    "additionalProperties": {
                      "description": "Scope name with one or more collection names for which resync is triggered.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": {
                        "scope1": [
                          "collection_1",
                          "collection_2"
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "scopes": {
                    "scope1": [
                      "collection1",
                      "collection2"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The request to start the resync operation has been accepted."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "The server did not get a response in time from the upstream server in order to complete the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "GatewayTimeout": {
                    "value": {
                      "httpStatusCode": 504,
                      "code": 1002,
                      "message": "The request timed out while waiting for a response from the upstream server.",
                      "hint": "The server exceeded the deadline for a response. Please try again."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Stop Resync",
        "description": "Stops the Resync operation. When stopping resync, it will be stopped for all collections being processed.\nIn order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader/Writer\n - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Endpoints"
        ],
        "operationId": "deleteAppEndpointResync",
        "responses": {
          "202": {
            "description": "The request to stop the resync operation has been accepted."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource. This response can also indicate that\nthe requested App Endpoint or bucket does not exist or the user does not have access to it.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "description": "The client does not have the necessary permissions to access this resource.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "httpStatusCode",
                            "message",
                            "code",
                            "hint"
                          ],
                          "properties": {
                            "httpStatusCode": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "hint": {
                              "type": "string"
                            }
                          }
                        },
                        "examples": {
                          "AccessForbidden": {
                            "value": {
                              "httpStatusCode": 403,
                              "code": 1002,
                              "message": "Access Denied.",
                              "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The server is currently unable to handle the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 503,
                      "code": 1007,
                      "message": "The server is currently unable to handle the request.",
                      "hint": "Please ensure the resource is in the correct state to handle requests."
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "The server did not get a response in time from the upstream server in order to complete the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "GatewayTimeout": {
                    "value": {
                      "httpStatusCode": 504,
                      "code": 1002,
                      "message": "The request timed out while waiting for a response from the upstream server.",
                      "hint": "The server exceeded the deadline for a response. Please try again."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/auditLogStreaming": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "put": {
        "summary": "Configure App Service Audit Log Streaming",
        "description": "Sets up audit log streaming for a specific App Service with filters. If streamingEnabled is true log streaming will begin.\n\nEnsure you have provided collector credentials if you wish to begin streaming; log streaming cannot be enabled without credentials.\nRefer to schema below to see required fields for your log collection provider.\nProviders include Datadog, Sumo Logic, Grafana Loki, Elasticsearch (versions 8 and newer only) and generic HTTP.\nTo start or resume streaming, set streamingEnabled to true while providing the rest of the log collector config.\n\nTo disable log streaming and remove the log streaming config including credentials, set streamingEnabled to false and leave the rest of the payload empty.\n\nTo pause log streaming, set streamingEnabled to false while providing the rest of the log collector config.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n\n To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services Audit Logging"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "streamingEnabled": {
                    "type": "boolean",
                    "description": "Determines whether audit log streaming is enabled or not. To start or resume streaming, set this to true. To disable or pause log streaming, set this to false."
                  },
                  "disabledAppEndpoints": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of App Endpoints to be excluded from audit log streaming."
                  },
                  "outputType": {
                    "type": "string",
                    "description": "The type of output for the audit log streaming. Required when starting, resuming or pausing log streaming.",
                    "example": "datadog"
                  },
                  "credentials": {
                    "description": "Secrets for audit log streaming configuration. Required when starting, resuming or pausing log streaming.",
                    "type": "object",
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "apiKey",
                          "url"
                        ],
                        "properties": {
                          "apiKey": {
                            "type": "string",
                            "description": "The API key for authentication"
                          },
                          "url": {
                            "type": "string",
                            "description": "The DataDog log ingestion URL"
                          }
                        },
                        "example": {
                          "apiKey": "apiKey",
                          "url": "https://http-intake.logs.datadoghq.eu"
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "The SumoLogic signed URL for the log ingestion"
                          }
                        },
                        "example": {
                          "url": "https://endpoint1.collection.us2.sumologic.com/receiver/v1/http/AaBbCc12345678"
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "user": {
                            "type": "string",
                            "description": "The username for HTTP authentication, if required"
                          },
                          "password": {
                            "type": "string",
                            "description": "The password for HTTP authentication, if required"
                          },
                          "url": {
                            "type": "string",
                            "description": "The URL for a generic HTTP log collector"
                          }
                        },
                        "example": {
                          "user": "httpUser",
                          "password": "password",
                          "url": "https://host:8080/endpoint"
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "user",
                          "password",
                          "url"
                        ],
                        "properties": {
                          "user": {
                            "type": "string",
                            "description": "The username for the Elasticsearch log collector"
                          },
                          "password": {
                            "type": "string",
                            "description": "The password for the Elasticsearch log collector"
                          },
                          "url": {
                            "type": "string",
                            "description": "The URL for the Elasticsearch log collector"
                          }
                        },
                        "example": {
                          "user": "elasticUser",
                          "password": "password",
                          "url": "https://elasticsearch:9200/_bulk"
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "user",
                          "password",
                          "url"
                        ],
                        "properties": {
                          "user": {
                            "type": "string",
                            "description": "The username for the Grafana Loki log collector"
                          },
                          "password": {
                            "type": "string",
                            "description": "The password for the Grafana Loki log collector"
                          },
                          "url": {
                            "type": "string",
                            "description": "The URL for the Grafana Loki log collector"
                          }
                        },
                        "example": {
                          "user": "lokiUser",
                          "password": "password",
                          "url": "https://loki:3100/loki/api/v1/push"
                        }
                      }
                    ],
                    "required": [
                      "streamingEnabled"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "putAppServiceAuditLogStreaming",
        "responses": {
          "202": {
            "description": "Successful Setup of Audit Log Streaming"
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Start or Resume Audit Log Streaming",
        "description": "To start or resume streaming, set streamingEnabled to true. To pause log streaming, set streamingEnabled to false.\n\nIf log streaming is paused we will retain the collector credentials. To clear these use the PUT request.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n  - Organization Owner\n  - Project Owner\n  - Project Manager\n\n  To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services Audit Logging"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "op",
                  "path",
                  "value"
                ],
                "properties": {
                  "op": {
                    "type": "string",
                    "description": "Type of operation.",
                    "enum": [
                      "update"
                    ]
                  },
                  "path": {
                    "type": "string",
                    "example": "/streamingEnabled",
                    "description": "Path of resource that needs to be updated.\n"
                  },
                  "value": {
                    "type": "boolean",
                    "description": "Determines whether audit log streaming is enabled or not."
                  }
                }
              }
            }
          }
        },
        "operationId": "patchAppServiceAuditLogStreaming",
        "responses": {
          "202": {
            "description": "Successfully patched Audit Log Streaming config."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get App Service Audit Log Streaming State",
        "description": "Retrieves the current state of audit log streaming for a specific App Service, as well as the output type and enabled App endpoints.\n\nThe audit log streaming states are:\n  - disabled\n  - disabling\n  - enabled\n  - enabling\n  - paused\n  - pausing\n  - errored\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n\n To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services Audit Logging"
        ],
        "operationId": "getAppServiceAuditLogStreaming",
        "responses": {
          "200": {
            "description": "Successful retrieval of audit log streaming state",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "streamingEnabled": {
                      "type": "boolean",
                      "description": "Determines whether audit log streaming is enabled or not."
                    },
                    "logStreamingState": {
                      "type": "string",
                      "description": "The current status of audit log streaming",
                      "example": "enabling"
                    },
                    "disabledAppEndpoints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of App Endpoints to be excluded from audit log streaming."
                    },
                    "outputType": {
                      "type": "string",
                      "description": "The type of output for the audit log streaming",
                      "example": "datadog"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/auditLogExports": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Initiate Audit Log Export",
        "description": "Initiates an audit log export for a specific App Service.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n\n To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services Audit Logging"
        ],
        "operationId": "postAppServiceAuditLogExport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "start",
                  "end"
                ],
                "properties": {
                  "start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Specifies the audit log's start date and time.",
                    "example": "2023-05-15T04:56:07.000+00:00"
                  },
                  "end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Specifies the audit log's end date and time.",
                    "example": "2023-05-16T04:56:07.000+00:00"
                  }
                }
              },
              "examples": {
                "PostClusterCreateAuditLogExport": {
                  "value": {
                    "start": "2022-09-04T00:56:07.000Z",
                    "end": "2022-09-05T04:56:07.000Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successfully created audit export job for the cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "exportId"
                  ],
                  "properties": {
                    "exportId": {
                      "type": "string",
                      "description": "The export ID of the export job.",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Audit Log Export Jobs",
        "description": "Retrieves a list of all audit log export jobs for an App Service.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "tags": [
          "App Services Audit Logging"
        ],
        "operationId": "listAppServiceAuditLogExports",
        "responses": {
          "200": {
            "description": "Successfully retrieved list of audit export documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "nullable": true
                          },
                          "download_id": {
                            "type": "string",
                            "nullable": true
                          },
                          "download_expires": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "status": {
                            "type": "string",
                            "nullable": true
                          },
                          "appServiceId": {
                            "type": "string",
                            "nullable": true
                          },
                          "tenantId": {
                            "type": "string",
                            "nullable": true
                          },
                          "clusterId": {
                            "type": "string",
                            "nullable": true
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          }
                        },
                        "example": {
                          "id": "920e7b93-28c7-421b-993b-9fffecfd3598",
                          "download_id": "https://cb-audit-logs-333d2ad2-1408-405e-9995-XXXX.s3.us-east-1.amazonaws.com/export/app-service-audit-logs-XXXX-from-2024-07-06-to-2024-08-05.tar.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X",
                          "download_expires": "2024-08-08T13:43:48.420487299Z",
                          "status": "Ready",
                          "appServiceId": "01071798-23e5-4ec6-b814-13bebef70572",
                          "tenantId": "333d2ad2-1408-405e-9995-68338d20ab5c",
                          "clusterId": "71dd1cb2-34ac-43ae-a503-b2a9202f02d4",
                          "createdByUserID": "d4fa667c-206a-4916-9a24-3a03c2ec5771",
                          "upsertedByUserID": "",
                          "createdAt": "2024-08-05T13:43:45.998790923Z",
                          "upsertedAt": "0001-01-01T00:00:00Z",
                          "modifiedByUserID": "d4fa667c-206a-4916-9a24-3a03c2ec5771",
                          "modifiedAt": "2024-08-05T13:43:48.420521466Z",
                          "version": 3
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}/auditLogExports/{auditLogExportId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "appServiceId",
          "description": "The GUID4 ID of the appService.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "auditLogExportId",
          "description": "The export ID of the audit log export job.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Audit Log Export Job",
        "description": "Retrieves details of a specific audit log export job for a given App Service.\n\n In order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n\n To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "App Services Audit Logging"
        ],
        "operationId": "getAppServiceAuditLogExportById",
        "responses": {
          "200": {
            "description": "Successfully retrieved details of audit export job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "nullable": true
                    },
                    "download_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "download_expires": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "nullable": true
                    },
                    "appServiceId": {
                      "type": "string",
                      "nullable": true
                    },
                    "tenantId": {
                      "type": "string",
                      "nullable": true
                    },
                    "clusterId": {
                      "type": "string",
                      "nullable": true
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    }
                  },
                  "example": {
                    "id": "920e7b93-28c7-421b-993b-9fffecfd3598",
                    "download_id": "https://cb-audit-logs-333d2ad2-1408-405e-9995-XXXX.s3.us-east-1.amazonaws.com/export/app-service-audit-logs-XXXX-from-2024-07-06-to-2024-08-05.tar.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X",
                    "download_expires": "2024-08-08T13:43:48.420487299Z",
                    "status": "Ready",
                    "appServiceId": "01071798-23e5-4ec6-b814-13bebef70572",
                    "tenantId": "333d2ad2-1408-405e-9995-68338d20ab5c",
                    "clusterId": "71dd1cb2-34ac-43ae-a503-b2a9202f02d4",
                    "createdByUserID": "d4fa667c-206a-4916-9a24-3a03c2ec5771",
                    "upsertedByUserID": "",
                    "createdAt": "2024-08-05T13:43:45.998790923Z",
                    "upsertedAt": "0001-01-01T00:00:00Z",
                    "modifiedByUserID": "d4fa667c-206a-4916-9a24-3a03c2ec5771",
                    "modifiedAt": "2024-08-05T13:43:48.420521466Z",
                    "version": 3
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/users/{userId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "userId",
          "description": "The GUID4 ID of the database credential.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Database Credentials",
        "description": "Fetches the details of a given cluster's database credential information.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Viewer\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Database Credentials"
        ],
        "operationId": "getDatabaseCredential",
        "responses": {
          "200": {
            "headers": {
              "ETag": {
                "description": "Entity tag for the resource, used for caching and conditional requests.",
                "schema": {
                  "type": "string",
                  "example": "Version: 1",
                  "description": "An ETag is a unique identifier assigned to a specific version of a resource on a web server.\nIt allows the server to identify whether the version of the resource on the client side matches the version on the server side.\nThis field represents the ETag value returned by the server for a particular resource.\n"
                }
              }
            },
            "description": "Successfully fetched the cluster's database credential information based on the userId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "access",
                    "audit"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the database credential created."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database credential created (up to 256 characters).",
                      "example": "ReadInventory",
                      "maxLength": 256
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    },
                    "access": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "privileges"
                        ],
                        "properties": {
                          "privileges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The `privileges` field in this API represents the privilege level for users.\nIt accepts one of the following values:\n\n- `data_reader`\n- `data_writer`\n- `read`: Equivalent to `data_reader`.\n- `write`: Equivalent to `data_writer`.\n",
                            "example": [
                              "data_reader",
                              "data_writer",
                              "read",
                              "write"
                            ]
                          },
                          "resources": {
                            "type": "object",
                            "description": "The resources for which access will be granted on. Leaving this empty will grant access to all buckets.",
                            "properties": {
                              "buckets": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the bucket.",
                                      "example": "travel-sample"
                                    },
                                    "scopes": {
                                      "type": "array",
                                      "description": "The scopes under a bucket.",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "inventory",
                                            "description": "The name of the scope."
                                          },
                                          "collections": {
                                            "type": "array",
                                            "description": "The collections under a scope.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "example": [
                                              "airlines",
                                              "airport",
                                              "tickets"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Database Credentials",
        "description": "Updates an existing database credential.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "parameters": [
          {
            "name": "If-Match",
            "in": "header",
            "description": "A precondition header that specifies the entity tag of a resource.",
            "schema": {
              "type": "string",
              "example": "12"
            }
          }
        ],
        "tags": [
          "Database Credentials"
        ],
        "operationId": "putDatabaseCredential",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access": {
                    "type": "array",
                    "description": "Describes the access information of the database credential.",
                    "items": {
                      "type": "object",
                      "required": [
                        "privileges"
                      ],
                      "properties": {
                        "privileges": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The `privileges` field in this API represents the privilege level for users.\nIt accepts one of the following values:\n\n- `data_reader`\n- `data_writer`\n- `read`: Equivalent to `data_reader`.\n- `write`: Equivalent to `data_writer`.\n",
                          "example": [
                            "data_reader",
                            "data_writer",
                            "read",
                            "write"
                          ]
                        },
                        "resources": {
                          "type": "object",
                          "description": "The resources for which access will be granted on. Leaving this empty will grant access to all buckets.",
                          "properties": {
                            "buckets": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the bucket.",
                                    "example": "travel-sample"
                                  },
                                  "scopes": {
                                    "type": "array",
                                    "description": "The scopes under a bucket.",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "inventory",
                                          "description": "The name of the scope."
                                        },
                                        "collections": {
                                          "type": "array",
                                          "description": "The collections under a scope.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "example": [
                                            "airlines",
                                            "airport",
                                            "tickets"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "password": {
                    "type": "string",
                    "example": "Pa$$w0rd",
                    "description": "The updated password of the database credential."
                  }
                }
              },
              "examples": {
                "UpdateDatabaseCredentials": {
                  "value": {
                    "access": [
                      {
                        "privileges": [
                          "data_reader",
                          "data_writer"
                        ],
                        "resources": {
                          "buckets": [
                            {
                              "name": "travel-sample",
                              "scopes": [
                                {
                                  "name": "inventory",
                                  "collections": [
                                    "airport",
                                    "airline",
                                    "tickets"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully updated the access in the cluster's database credential."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Database Credentials",
        "description": "Deletes an existing cluster's database credential.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Database Credentials"
        ],
        "operationId": "deleteDatabaseCredential",
        "responses": {
          "204": {
            "description": "Successfully deleted the cluster's database access record by its userId."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/freeTier": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create Free Tier Bucket",
        "description": "Creates a new free tier bucket.  This is a Couchbase bucket where only the name a memory quota is configurable.\nOther bucket properties use default values.  \n\nThe following features are not available for free tier buckets:\n  - bucket flush \n  - migrate to another storage engine like magma\n\nNote that you can only create a free tier bucket on a free tier cluster.\n\nTo learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Free Tier"
        ],
        "operationId": "createFreeTierBucket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the bucket. This field cannot be changed later. The name should adhere to the following rules:\n\n1. Characters used for the name should be in the ranges of A-Z, a-z, and 0-9; plus the underscore, period, dash, and percent characters.\n\n2. The name can be a maximum of 100 characters in length.\n\n3. The name cannot have 0 characters or empty. Minimum length of name is 1.\n\n4. The name cannot start with a `.` (period).\n",
                    "maxLength": 100,
                    "example": "Free-Tier-Bucket"
                  },
                  "memoryAllocationInMb": {
                    "type": "integer",
                    "description": "The bucket memory quota. It defaults to 100 MiB.\n",
                    "example": 200,
                    "default": 100
                  }
                }
              },
              "examples": {
                "PostFreeTierBucket": {
                  "value": {
                    "name": "A-Free-Tier-Bucket",
                    "memoryAllocationInMb": 200
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a free tier bucket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "dGVzdA",
                      "description": "The ID of the bucket. This is the base64 encoding of the bucket name."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Free Tier Buckets",
        "description": "Lists all buckets in the free tier cluster. While only name and memory quota are configurable for free tier buckets, the response will show\nadditional read only bucket properties such as replicas, etc.\n\nTo learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Free Tier"
        ],
        "operationId": "listFreeTierBuckets",
        "responses": {
          "200": {
            "description": "Successfully listed all the buckets in the free tier cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "timeToLiveInSeconds",
                          "replicas",
                          "type",
                          "storageBackend",
                          "memoryAllocationInMb",
                          "bucketConflictResolution",
                          "durabilityLevel",
                          "evictionPolicy",
                          "stats"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "dGVzdA",
                            "description": "The ID of the bucket. This is the base64 encoding of the bucket name."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the bucket.",
                            "example": "My-First-Bucket"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the bucket. If selected Ephemeral, it is not eligible for imports or App Endpoints creation. The options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket)."
                          },
                          "storageBackend": {
                            "type": "string",
                            "description": "Type of the bucket. If selected Ephemeral, it is not eligible for imports or App Endpoints creation.\nThe options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).",
                            "example": "couchstore"
                          },
                          "memoryAllocationInMb": {
                            "type": "integer",
                            "description": "The amount of memory to allocate for the bucket memory in MiB. The maximum limit is dependent on the allocation of the KV service.For example, 80% of the allocation.",
                            "example": 100
                          },
                          "bucketConflictResolution": {
                            "type": "string",
                            "description": "The means in which conflicts are resolved during replication. This field may be referred to as conflictResolution in the Couchbase documentation, and seqno and lww may be referred to as sequence Number and Timestamp respectively.\nTo learn more, see [Conflict Resolution](https://docs.couchbase.com/cloud/clusters/xdcr/xdcr.html#conflict-resolution)."
                          },
                          "durabilityLevel": {
                            "type": "string",
                            "description": "This is the minimum level at which all writes to the Couchbase bucket must occur.\n\nThe options for Durability level are as follows, according to the bucket type.\n\n- For a Couchbase bucket:\n\n  1. None\n\n  2. Replicate to Majority\n\n  3. Majority and Persist to Active\n\n  4. Persist to Majority\n\n- For an Ephemeral bucket:\n\n  1. None\n\n  2. Replicate to Majority\n\n To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).\n"
                          },
                          "replicas": {
                            "type": "integer",
                            "description": "The number of replicas for the bucket.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket)."
                          },
                          "flush": {
                            "type": "boolean",
                            "description": "Replaced by flushEnabled.\n\nDetermines whether bucket flush is enabled. Set property to true to be able to delete all items in this bucket using the /flush endpoint. Disable property to avoid inadvertent data loss by calling the  the /flush endpoint .\n",
                            "example": false,
                            "deprecated": true
                          },
                          "flushEnabled": {
                            "type": "boolean",
                            "description": "Determines whether bucket flush is enabled. Set flushEnabled to true to be able to delete all items in this bucket using the /flush endpoint. Disable flushEnabled to avoid inadvertent data loss by calling the /flush endpoint .",
                            "example": false
                          },
                          "timeToLiveInSeconds": {
                            "type": "integer",
                            "description": "Specifies the time to live (TTL) value in seconds. This is the maximum time to live for items in the bucket. If specified as 0, TTL is disabled. This is a non-negative value.",
                            "example": 100
                          },
                          "evictionPolicy": {
                            "type": "string",
                            "description": "The policy which Capella adopts to prevent data loss due to memory exhaustion.\nThis may be also known as Ejection Policy in the Couchbase documentation. \n\n- For Couchbase bucket, Eviction Policy is `fullEviction` by default.\n\n- For Ephemeral buckets, Eviction Policy is a required field, and should be one of the following:\n\n   1. noEviction\n\n   2. nruEviction\n\n  To learn more, see [Ejection Policy](https://docs.couchbase.com/server/current/rest-api/rest-bucket-create.html#evictionpolicy).\n",
                            "enum": [
                              "fullEviction",
                              "noEviction",
                              "nruEviction"
                            ],
                            "example": "fullEviction",
                            "default": "fullEviction"
                          },
                          "stats": {
                            "type": "object",
                            "required": [
                              "itemCount",
                              "opsPerSecond",
                              "diskUsedInMib",
                              "memoryUsedInMib"
                            ],
                            "properties": {
                              "itemCount": {
                                "type": "integer",
                                "description": "Number of documents in the bucket.",
                                "example": 10
                              },
                              "opsPerSecond": {
                                "type": "integer",
                                "description": "Number of operations per second.",
                                "example": 0
                              },
                              "diskUsedInMib": {
                                "type": "integer",
                                "description": "The amount of disk used (in MiB).",
                                "example": 17
                              },
                              "memoryUsedInMib": {
                                "type": "integer",
                                "description": "The amount of memory used (in MiB).",
                                "example": 50
                              }
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "description": "Priority of the bucket.\n\n- Specify relative bucket priority so that buckets will be recovered in the order specified during failover.\n\n- Bucket ranking/priority is only available in Couchbase Server 7.6 and above\n\n- Default bucket priority is 0 and can be set to a value between 0 and 1000. 1000 is the highest priority and 0 is the lowest.\n",
                            "default": 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create Bucket",
        "description": "Creates a new bucket configuration under a cluster.\n\nTo learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "operationId": "postBucket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the bucket. This field cannot be changed later. The name should adhere to the following rules:\n\n1. Characters used for the name should be in the ranges of A-Z, a-z, and 0-9; plus the underscore, period, dash, and percent characters.\n\n2. The name can be a maximum of 100 characters in length.\n\n3. The name cannot have 0 characters or empty. Minimum length of name is 1.\n\n4. The name cannot start with a `.` (period).\n",
                    "maxLength": 100,
                    "example": "My-First-Bucket"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the bucket.\n\n- If selected Ephemeral, it is not eligible for imports or App Endpoints creation. This field cannot be changed later.\n\n- The options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.\n\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).\n",
                    "enum": [
                      "couchbase",
                      "ephemeral"
                    ],
                    "default": "couchbase"
                  },
                  "storageBackend": {
                    "type": "string",
                    "description": "The storage engine to be assigned to and used by the bucket.\n\n- Ephemeral buckets do not support StorageBackend, hence not applicable for Ephemeral buckets and throws an error if this field is added.\n\n- This field is only applicable for a Couchbase bucket. The default value mentioned (Couchstore) is for Couchbase bucket.\n\n- This field cannot be changed later.\n\n  To learn more, see [Storage Engines](https://docs.couchbase.com/cloud/clusters/data-service/storage-engines.html).\n",
                    "enum": [
                      "couchstore",
                      "magma"
                    ],
                    "example": "couchstore",
                    "default": "couchstore"
                  },
                  "memoryAllocationInMb": {
                    "type": "integer",
                    "description": "The amount of memory to allocate for the bucket memory in MiB. This is the maximum limit is dependent on the allocation of the KV service. For example, 80% of the allocation.\n\n- The default value (100MiB) mentioned is for Couchbase type buckets with Couchstore as the Storage Backend.\n\n- For Couchbase buckets, the default and minimum memory allocation changes according to the Storage Backend type as follows:\n\n  1. For Couchstore, the default and minimum memory allocation is 100 MiB.\n\n  2. For Magma, the default and minimum memory allocation is 1024 MiB.\n\n- For Ephemeral buckets, the default and minimum memory allocation is 100 MiB.\n",
                    "example": 100,
                    "default": 100
                  },
                  "bucketConflictResolution": {
                    "type": "string",
                    "description": "The means by which conflicts are resolved during replication.\n\n- This field may be referred to as \"conflict resolution\" in the Couchbase documentation, and `seqno` and `lww` may be referred to as \"sequence number\" and \"timestamp\" respectively.\n\n- This field cannot be changed later.\n\n To learn more, see [Conflict Resolution](https://docs.couchbase.com/cloud/clusters/xdcr/xdcr.html#conflict-resolution).\n",
                    "enum": [
                      "seqno",
                      "lww"
                    ],
                    "default": "seqno"
                  },
                  "durabilityLevel": {
                    "type": "string",
                    "description": "This is the minimum level at which all writes to the bucket must occur.\n\n The options for Durability level are as follows, according to the bucket type.\n\n - For a Couchbase bucket:\n\n   1. None\n\n   2. Replicate to Majority\n\n   3. Majority and Persist to Active\n\n   4. Persist to Majority\n\n - For an Ephemeral bucket:\n\n   1. None\n\n   2. Replicate to Majority\n\n To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).\n",
                    "enum": [
                      "none",
                      "majority",
                      "majorityAndPersistActive",
                      "persistToMajority"
                    ],
                    "default": "none"
                  },
                  "replicas": {
                    "type": "integer",
                    "description": "The number of replicas for the bucket.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).",
                    "enum": [
                      1,
                      2,
                      3
                    ],
                    "default": 1
                  },
                  "flush": {
                    "type": "boolean",
                    "description": "Replaced by flushEnabled. This property is deprecated and will be removed in a future release.\n\nDetermines whether flushing is enabled on the bucket. Enable Flush to delete all items in this bucket at the earliest opportunity. Disable Flush to avoid inadvertent data loss.\n",
                    "default": false,
                    "example": false,
                    "deprecated": true
                  },
                  "flushEnabled": {
                    "type": "boolean",
                    "description": "Determines whether bucket flush is enabled. Set flushEnabled to true to be able to delete all items in this bucket using the /flush endpoint. Disable flushEnabled to avoid inadvertent data loss by calling the /flush endpoint .",
                    "default": false,
                    "example": false
                  },
                  "timeToLiveInSeconds": {
                    "type": "integer",
                    "description": "Specify the time to live (TTL) value in seconds. This is the maximum time to live for items in the bucket. Default is 0, that means TTL is disabled. This is a non-negative value.",
                    "default": 0,
                    "example": 0
                  },
                  "evictionPolicy": {
                    "type": "string",
                    "description": "The policy which Capella adopts to prevent data loss due to memory exhaustion.\nThis may be also known as Ejection Policy in the Couchbase documentation. \n\n- For Couchbase bucket, Eviction Policy is `fullEviction` by default.\n\n- For Ephemeral buckets, Eviction Policy is a required field, and should be one of the following:\n\n   1. noEviction\n\n   2. nruEviction\n\n  To learn more, see [Ejection Policy](https://docs.couchbase.com/server/current/rest-api/rest-bucket-create.html#evictionpolicy).\n",
                    "enum": [
                      "fullEviction",
                      "noEviction",
                      "nruEviction"
                    ],
                    "example": "fullEviction",
                    "default": "fullEviction"
                  },
                  "priority": {
                    "type": "integer",
                    "description": "Priority of the bucket.\n\n- Specify relative bucket priority so that buckets will be recovered in the order specified during failover.\n\n- Bucket ranking/priority is only available in Couchbase Server 7.6 and above\n\n- Default bucket priority is 0 and can be set to a value between 0 and 1000. 1000 is the highest priority and 0 is the lowest.\n",
                    "default": 0
                  }
                }
              },
              "examples": {
                "PostBucketTypeCouchbase": {
                  "value": {
                    "name": "CBExample1",
                    "type": "couchbase",
                    "storageBackend": "couchstore",
                    "memoryAllocationInMb": 105,
                    "bucketConflictResolution": "seqno",
                    "durabilityLevel": "majorityAndPersistActive",
                    "replicas": 2,
                    "flush": true,
                    "timeToLiveInSeconds": 100
                  }
                },
                "PostBucketTypeEphemeral": {
                  "value": {
                    "name": "EPExample2",
                    "type": "ephemeral",
                    "memoryAllocationInMb": 105,
                    "bucketConflictResolution": "seqno",
                    "durabilityLevel": "majority",
                    "replicas": 2,
                    "flush": true,
                    "timeToLiveInSeconds": 100,
                    "evictionPolicy": "nruEviction"
                  }
                },
                "PostBucketWithDefaults": {
                  "value": {
                    "name": "test-default-bucket"
                  }
                },
                "PostBucketWithEphemeralDefaults": {
                  "value": {
                    "name": "ephemeral-default",
                    "type": "ephemeral"
                  }
                },
                "PostBucketWithPersistToMajority": {
                  "value": {
                    "name": "test-cb2",
                    "memoryAllocationInMb": 120,
                    "bucketConflictResolution": "seqno",
                    "durabilityLevel": "persistToMajority"
                  }
                },
                "PostBucketWithEphemeralNoEviction": {
                  "value": {
                    "name": "testEph",
                    "type": "ephemeral",
                    "evictionPolicy": "nruEviction",
                    "durabilityLevel": "majority",
                    "replicas": 2,
                    "flush": true,
                    "timeToLiveInSeconds": 100
                  }
                },
                "PostBucketWithCouchbaseMagma": {
                  "value": {
                    "name": "testCbMagmadefault",
                    "type": "couchbase",
                    "storageBackend": "magma"
                  }
                },
                "PostBucketWithBucketPriority": {
                  "value": {
                    "name": "testCbBucketPriority",
                    "priority": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a bucket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "dGVzdA",
                      "description": "The ID of the bucket. This is the base64 encoding of the bucket name."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Buckets",
        "description": "Lists all the buckets under the cluster.\n\nTo learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "operationId": "listBuckets",
        "responses": {
          "200": {
            "description": "Successfully listed all the buckets under the cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "timeToLiveInSeconds",
                          "replicas",
                          "type",
                          "storageBackend",
                          "memoryAllocationInMb",
                          "bucketConflictResolution",
                          "durabilityLevel",
                          "evictionPolicy",
                          "stats"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "dGVzdA",
                            "description": "The ID of the bucket. This is the base64 encoding of the bucket name."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the bucket.",
                            "example": "My-First-Bucket"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the bucket. If selected Ephemeral, it is not eligible for imports or App Endpoints creation. The options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket)."
                          },
                          "storageBackend": {
                            "type": "string",
                            "description": "Type of the bucket. If selected Ephemeral, it is not eligible for imports or App Endpoints creation.\nThe options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).",
                            "example": "couchstore"
                          },
                          "memoryAllocationInMb": {
                            "type": "integer",
                            "description": "The amount of memory to allocate for the bucket memory in MiB. The maximum limit is dependent on the allocation of the KV service.For example, 80% of the allocation.",
                            "example": 100
                          },
                          "bucketConflictResolution": {
                            "type": "string",
                            "description": "The means in which conflicts are resolved during replication. This field may be referred to as conflictResolution in the Couchbase documentation, and seqno and lww may be referred to as sequence Number and Timestamp respectively.\nTo learn more, see [Conflict Resolution](https://docs.couchbase.com/cloud/clusters/xdcr/xdcr.html#conflict-resolution)."
                          },
                          "durabilityLevel": {
                            "type": "string",
                            "description": "This is the minimum level at which all writes to the Couchbase bucket must occur.\n\nThe options for Durability level are as follows, according to the bucket type.\n\n- For a Couchbase bucket:\n\n  1. None\n\n  2. Replicate to Majority\n\n  3. Majority and Persist to Active\n\n  4. Persist to Majority\n\n- For an Ephemeral bucket:\n\n  1. None\n\n  2. Replicate to Majority\n\n To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).\n"
                          },
                          "replicas": {
                            "type": "integer",
                            "description": "The number of replicas for the bucket.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket)."
                          },
                          "flush": {
                            "type": "boolean",
                            "description": "Replaced by flushEnabled.\n\nDetermines whether bucket flush is enabled. Set property to true to be able to delete all items in this bucket using the /flush endpoint. Disable property to avoid inadvertent data loss by calling the  the /flush endpoint .\n",
                            "example": false,
                            "deprecated": true
                          },
                          "flushEnabled": {
                            "type": "boolean",
                            "description": "Determines whether bucket flush is enabled. Set flushEnabled to true to be able to delete all items in this bucket using the /flush endpoint. Disable flushEnabled to avoid inadvertent data loss by calling the /flush endpoint .",
                            "example": false
                          },
                          "timeToLiveInSeconds": {
                            "type": "integer",
                            "description": "Specifies the time to live (TTL) value in seconds. This is the maximum time to live for items in the bucket. If specified as 0, TTL is disabled. This is a non-negative value.",
                            "example": 100
                          },
                          "evictionPolicy": {
                            "type": "string",
                            "description": "The policy which Capella adopts to prevent data loss due to memory exhaustion.\nThis may be also known as Ejection Policy in the Couchbase documentation. \n\n- For Couchbase bucket, Eviction Policy is `fullEviction` by default.\n\n- For Ephemeral buckets, Eviction Policy is a required field, and should be one of the following:\n\n   1. noEviction\n\n   2. nruEviction\n\n  To learn more, see [Ejection Policy](https://docs.couchbase.com/server/current/rest-api/rest-bucket-create.html#evictionpolicy).\n",
                            "enum": [
                              "fullEviction",
                              "noEviction",
                              "nruEviction"
                            ],
                            "example": "fullEviction",
                            "default": "fullEviction"
                          },
                          "stats": {
                            "type": "object",
                            "required": [
                              "itemCount",
                              "opsPerSecond",
                              "diskUsedInMib",
                              "memoryUsedInMib"
                            ],
                            "properties": {
                              "itemCount": {
                                "type": "integer",
                                "description": "Number of documents in the bucket.",
                                "example": 10
                              },
                              "opsPerSecond": {
                                "type": "integer",
                                "description": "Number of operations per second.",
                                "example": 0
                              },
                              "diskUsedInMib": {
                                "type": "integer",
                                "description": "The amount of disk used (in MiB).",
                                "example": 17
                              },
                              "memoryUsedInMib": {
                                "type": "integer",
                                "description": "The amount of memory used (in MiB).",
                                "example": 50
                              }
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "description": "Priority of the bucket.\n\n- Specify relative bucket priority so that buckets will be recovered in the order specified during failover.\n\n- Bucket ranking/priority is only available in Couchbase Server 7.6 and above\n\n- Default bucket priority is 0 and can be set to a value between 0 and 1000. 1000 is the highest priority and 0 is the lowest.\n",
                            "default": 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/freeTier/{bucketId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "bucketId",
          "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "dGVzdA"
          }
        }
      ],
      "get": {
        "summary": "Get Free Tier Bucket",
        "description": "Get bucket.  While only name and memory quota are configurable for free tier buckets, the response will show\nadditional read only bucket properties such as replicas, etc.\n\nTo learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Free Tier"
        ],
        "operationId": "getFreeTierBucketByID",
        "responses": {
          "200": {
            "headers": {
              "ETag": {
                "description": "Entity tag for the resource, used for caching and conditional requests.",
                "schema": {
                  "type": "string",
                  "example": "Version: 1",
                  "description": "An ETag is a unique identifier assigned to a specific version of a resource on a web server.\nIt allows the server to identify whether the version of the resource on the client side matches the version on the server side.\nThis field represents the ETag value returned by the server for a particular resource.\n"
                }
              }
            },
            "description": "Successfully fetched free tier bucket by bucket id.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "timeToLiveInSeconds",
                    "replicas",
                    "type",
                    "storageBackend",
                    "memoryAllocationInMb",
                    "bucketConflictResolution",
                    "durabilityLevel",
                    "evictionPolicy",
                    "stats"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "dGVzdA",
                      "description": "The ID of the bucket. This is the base64 encoding of the bucket name."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the bucket.",
                      "example": "My-First-Bucket"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the bucket. If selected Ephemeral, it is not eligible for imports or App Endpoints creation. The options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket)."
                    },
                    "storageBackend": {
                      "type": "string",
                      "description": "Type of the bucket. If selected Ephemeral, it is not eligible for imports or App Endpoints creation.\nThe options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).",
                      "example": "couchstore"
                    },
                    "memoryAllocationInMb": {
                      "type": "integer",
                      "description": "The amount of memory to allocate for the bucket memory in MiB. The maximum limit is dependent on the allocation of the KV service.For example, 80% of the allocation.",
                      "example": 100
                    },
                    "bucketConflictResolution": {
                      "type": "string",
                      "description": "The means in which conflicts are resolved during replication. This field may be referred to as conflictResolution in the Couchbase documentation, and seqno and lww may be referred to as sequence Number and Timestamp respectively.\nTo learn more, see [Conflict Resolution](https://docs.couchbase.com/cloud/clusters/xdcr/xdcr.html#conflict-resolution)."
                    },
                    "durabilityLevel": {
                      "type": "string",
                      "description": "This is the minimum level at which all writes to the Couchbase bucket must occur.\n\nThe options for Durability level are as follows, according to the bucket type.\n\n- For a Couchbase bucket:\n\n  1. None\n\n  2. Replicate to Majority\n\n  3. Majority and Persist to Active\n\n  4. Persist to Majority\n\n- For an Ephemeral bucket:\n\n  1. None\n\n  2. Replicate to Majority\n\n To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).\n"
                    },
                    "replicas": {
                      "type": "integer",
                      "description": "The number of replicas for the bucket.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket)."
                    },
                    "flush": {
                      "type": "boolean",
                      "description": "Replaced by flushEnabled.\n\nDetermines whether bucket flush is enabled. Set property to true to be able to delete all items in this bucket using the /flush endpoint. Disable property to avoid inadvertent data loss by calling the  the /flush endpoint .\n",
                      "example": false,
                      "deprecated": true
                    },
                    "flushEnabled": {
                      "type": "boolean",
                      "description": "Determines whether bucket flush is enabled. Set flushEnabled to true to be able to delete all items in this bucket using the /flush endpoint. Disable flushEnabled to avoid inadvertent data loss by calling the /flush endpoint .",
                      "example": false
                    },
                    "timeToLiveInSeconds": {
                      "type": "integer",
                      "description": "Specifies the time to live (TTL) value in seconds. This is the maximum time to live for items in the bucket. If specified as 0, TTL is disabled. This is a non-negative value.",
                      "example": 100
                    },
                    "evictionPolicy": {
                      "type": "string",
                      "description": "The policy which Capella adopts to prevent data loss due to memory exhaustion.\nThis may be also known as Ejection Policy in the Couchbase documentation. \n\n- For Couchbase bucket, Eviction Policy is `fullEviction` by default.\n\n- For Ephemeral buckets, Eviction Policy is a required field, and should be one of the following:\n\n   1. noEviction\n\n   2. nruEviction\n\n  To learn more, see [Ejection Policy](https://docs.couchbase.com/server/current/rest-api/rest-bucket-create.html#evictionpolicy).\n",
                      "enum": [
                        "fullEviction",
                        "noEviction",
                        "nruEviction"
                      ],
                      "example": "fullEviction",
                      "default": "fullEviction"
                    },
                    "stats": {
                      "type": "object",
                      "required": [
                        "itemCount",
                        "opsPerSecond",
                        "diskUsedInMib",
                        "memoryUsedInMib"
                      ],
                      "properties": {
                        "itemCount": {
                          "type": "integer",
                          "description": "Number of documents in the bucket.",
                          "example": 10
                        },
                        "opsPerSecond": {
                          "type": "integer",
                          "description": "Number of operations per second.",
                          "example": 0
                        },
                        "diskUsedInMib": {
                          "type": "integer",
                          "description": "The amount of disk used (in MiB).",
                          "example": 17
                        },
                        "memoryUsedInMib": {
                          "type": "integer",
                          "description": "The amount of memory used (in MiB).",
                          "example": 50
                        }
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "description": "Priority of the bucket.\n\n- Specify relative bucket priority so that buckets will be recovered in the order specified during failover.\n\n- Bucket ranking/priority is only available in Couchbase Server 7.6 and above\n\n- Default bucket priority is 0 and can be set to a value between 0 and 1000. 1000 is the highest priority and 0 is the lowest.\n",
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Free Tier Bucket",
        "description": "Updates an existing free tier bucket.  Only bucket memory quota is configurable.  Once created bucket name cannot be changed.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Free Tier"
        ],
        "operationId": "updateFreeTierBucket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "memoryAllocationInMb"
                ],
                "properties": {
                  "memoryAllocationInMb": {
                    "type": "integer",
                    "description": "The new amount of memory to allocate for the bucket memory in MiB.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully accepted updated bucket configuration."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Free Tier Bucket",
        "description": "Deletes an existing free tier bucket.\n\nTo learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Free Tier"
        ],
        "operationId": "deleteFreeTierBucketByID",
        "responses": {
          "204": {
            "description": "Successfully deleted the free tier bucket by its bucket id."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returned when there is a conflict with the current state of a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "httpStatusCode": 409,
                      "code": 1010,
                      "message": "There is a conflict with the current state of a resource.",
                      "hint": "Returned when trying to create or update a resource that already exists or has conflicting information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "bucketId",
          "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "dGVzdA"
          }
        }
      ],
      "get": {
        "summary": "Get Bucket",
        "description": "Fetches the configuration of the given bucket.\n\nTo learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "operationId": "getBucketByID",
        "responses": {
          "200": {
            "headers": {
              "ETag": {
                "description": "Entity tag for the resource, used for caching and conditional requests.",
                "schema": {
                  "type": "string",
                  "example": "Version: 1",
                  "description": "An ETag is a unique identifier assigned to a specific version of a resource on a web server.\nIt allows the server to identify whether the version of the resource on the client side matches the version on the server side.\nThis field represents the ETag value returned by the server for a particular resource.\n"
                }
              }
            },
            "description": "Successfully fetched the bucket based on the bucketId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "timeToLiveInSeconds",
                    "replicas",
                    "type",
                    "storageBackend",
                    "memoryAllocationInMb",
                    "bucketConflictResolution",
                    "durabilityLevel",
                    "evictionPolicy",
                    "stats"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "dGVzdA",
                      "description": "The ID of the bucket. This is the base64 encoding of the bucket name."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the bucket.",
                      "example": "My-First-Bucket"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the bucket. If selected Ephemeral, it is not eligible for imports or App Endpoints creation. The options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket)."
                    },
                    "storageBackend": {
                      "type": "string",
                      "description": "Type of the bucket. If selected Ephemeral, it is not eligible for imports or App Endpoints creation.\nThe options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).",
                      "example": "couchstore"
                    },
                    "memoryAllocationInMb": {
                      "type": "integer",
                      "description": "The amount of memory to allocate for the bucket memory in MiB. The maximum limit is dependent on the allocation of the KV service.For example, 80% of the allocation.",
                      "example": 100
                    },
                    "bucketConflictResolution": {
                      "type": "string",
                      "description": "The means in which conflicts are resolved during replication. This field may be referred to as conflictResolution in the Couchbase documentation, and seqno and lww may be referred to as sequence Number and Timestamp respectively.\nTo learn more, see [Conflict Resolution](https://docs.couchbase.com/cloud/clusters/xdcr/xdcr.html#conflict-resolution)."
                    },
                    "durabilityLevel": {
                      "type": "string",
                      "description": "This is the minimum level at which all writes to the Couchbase bucket must occur.\n\nThe options for Durability level are as follows, according to the bucket type.\n\n- For a Couchbase bucket:\n\n  1. None\n\n  2. Replicate to Majority\n\n  3. Majority and Persist to Active\n\n  4. Persist to Majority\n\n- For an Ephemeral bucket:\n\n  1. None\n\n  2. Replicate to Majority\n\n To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).\n"
                    },
                    "replicas": {
                      "type": "integer",
                      "description": "The number of replicas for the bucket.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket)."
                    },
                    "flush": {
                      "type": "boolean",
                      "description": "Replaced by flushEnabled.\n\nDetermines whether bucket flush is enabled. Set property to true to be able to delete all items in this bucket using the /flush endpoint. Disable property to avoid inadvertent data loss by calling the  the /flush endpoint .\n",
                      "example": false,
                      "deprecated": true
                    },
                    "flushEnabled": {
                      "type": "boolean",
                      "description": "Determines whether bucket flush is enabled. Set flushEnabled to true to be able to delete all items in this bucket using the /flush endpoint. Disable flushEnabled to avoid inadvertent data loss by calling the /flush endpoint .",
                      "example": false
                    },
                    "timeToLiveInSeconds": {
                      "type": "integer",
                      "description": "Specifies the time to live (TTL) value in seconds. This is the maximum time to live for items in the bucket. If specified as 0, TTL is disabled. This is a non-negative value.",
                      "example": 100
                    },
                    "evictionPolicy": {
                      "type": "string",
                      "description": "The policy which Capella adopts to prevent data loss due to memory exhaustion.\nThis may be also known as Ejection Policy in the Couchbase documentation. \n\n- For Couchbase bucket, Eviction Policy is `fullEviction` by default.\n\n- For Ephemeral buckets, Eviction Policy is a required field, and should be one of the following:\n\n   1. noEviction\n\n   2. nruEviction\n\n  To learn more, see [Ejection Policy](https://docs.couchbase.com/server/current/rest-api/rest-bucket-create.html#evictionpolicy).\n",
                      "enum": [
                        "fullEviction",
                        "noEviction",
                        "nruEviction"
                      ],
                      "example": "fullEviction",
                      "default": "fullEviction"
                    },
                    "stats": {
                      "type": "object",
                      "required": [
                        "itemCount",
                        "opsPerSecond",
                        "diskUsedInMib",
                        "memoryUsedInMib"
                      ],
                      "properties": {
                        "itemCount": {
                          "type": "integer",
                          "description": "Number of documents in the bucket.",
                          "example": 10
                        },
                        "opsPerSecond": {
                          "type": "integer",
                          "description": "Number of operations per second.",
                          "example": 0
                        },
                        "diskUsedInMib": {
                          "type": "integer",
                          "description": "The amount of disk used (in MiB).",
                          "example": 17
                        },
                        "memoryUsedInMib": {
                          "type": "integer",
                          "description": "The amount of memory used (in MiB).",
                          "example": 50
                        }
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "description": "Priority of the bucket.\n\n- Specify relative bucket priority so that buckets will be recovered in the order specified during failover.\n\n- Bucket ranking/priority is only available in Couchbase Server 7.6 and above\n\n- Default bucket priority is 0 and can be set to a value between 0 and 1000. 1000 is the highest priority and 0 is the lowest.\n",
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Bucket",
        "description": "Updates an existing bucket.\n\nTo learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "operationId": "putBucket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "memoryAllocationInMb",
                  "durabilityLevel",
                  "replicas",
                  "timeToLiveInSeconds"
                ],
                "properties": {
                  "memoryAllocationInMb": {
                    "type": "integer",
                    "description": "The new amount of memory to allocate for the bucket memory in MiB.\nThe maximum limit is dependent on the allocation of the KV service; for example, 80% of the allocation.\n\n- For Couchbase buckets, the default and minimum memory allocation changes according to the Storage Backend type, as follows:\n\n  1. For Couchstore, the default and minimum memory allocation is 100 MiB.\n\n  2. For Magma, the default and minimum memory allocation is 1024 MiB.\n\n- For Ephemeral buckets, the default and minimum memory allocation is 100 MiB.\n",
                    "example": 100
                  },
                  "durabilityLevel": {
                    "type": "string",
                    "description": "This is the minimum level at which all writes to the bucket must occur.\n\nThe options for Durability level are as follows, according to the bucket type.\n\n- For a Couchbase bucket:\n\n  1. None\n\n  2. Replicate to Majority\n\n  3. Majority and Persist to Active\n\n  4. Persist to Majority\n\n- For an Ephemeral bucket:\n\n  1. None\n\n  2. Replicate to Majority\n\n  To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).\n",
                    "enum": [
                      "none",
                      "majority",
                      "majorityAndPersistActive",
                      "persistToMajority"
                    ]
                  },
                  "replicas": {
                    "type": "integer",
                    "description": "The number of replicas for the bucket.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).",
                    "enum": [
                      1,
                      2,
                      3
                    ]
                  },
                  "flush": {
                    "type": "boolean",
                    "description": "Replaced by flushEnabled. This property is deprecated and will be removed in a future release.\n\nThe new value of flush property. This determines whether bucket flush is enabled. Enable Flush to be able to delete all items in this bucket at the earliest opportunity using /flush endpoint. Disable Flush to avoid inadvertent data loss by calling the /flush endpoint\n",
                    "default": false,
                    "deprecated": true
                  },
                  "flushEnabled": {
                    "type": "boolean",
                    "description": "This determines whether bucket flush is enabled. Enable flushEnabled to delete all items in this bucket at the earliest opportunity by calling the /flush endpoint. Disable flushEnabled to avoid inadvertent data loss by calling the /flush endpoint.",
                    "default": false
                  },
                  "timeToLiveInSeconds": {
                    "type": "integer",
                    "description": "Specify the new time to live (TTL) value in seconds. This is the maximum time to live for items in the bucket. If specified as 0, TTL is disabled. This is a non-negative value.",
                    "example": 100
                  },
                  "priority": {
                    "type": "integer",
                    "description": "Priority of the bucket.\n\n- Specify relative bucket priority so that buckets will be recovered in the order specified during failover.\n\n- Bucket ranking/priority is only available in Couchbase Server 7.6 and above\n\n- Default bucket priority is 0 and can be set to a value between 0 and 1000. 1000 is the highest priority and 0 is the lowest.\n",
                    "default": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully accepted updated bucket configuration."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Bucket",
        "description": "Deletes an existing bucket.\n\nTo learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "operationId": "deleteBucketByID",
        "responses": {
          "204": {
            "description": "Successfully deleted the bucket by its bucketId."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}/flush": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "bucketId",
          "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "dGVzdA"
          }
        }
      ],
      "put": {
        "summary": "Flush Bucket Data",
        "description": "Flushing of the bucket occurs, causing all items in the bucket to be deleted by the system at the earliest opportunity.\nThis operation can only be performed if the bucket has been configured with flushEnabled to true. If it is disabled, \nit will throw an error.\n\nIt is recommended not to run with the flushEnabled configuration set to true in production; \ndue to the danger of all a bucket's data being inadvertently lost. \n\nTo learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "operationId": "FlushBucket",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "responses": {
          "200": {
            "description": "Successfully flushed a bucket."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/bucketStorageMigration": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "put": {
        "summary": "Migrate Buckets",
        "description": "Updates the storage backend of an existing bucket from Couchstore to Magma.\n\nThe following should be noted while doing this operation -\n\n1. The outcome of this migration is that all data service nodes in the cluster will be replaced.\n- During the migration all buckets will remain operational and still be able to perform read and writes. Hence applications will not incur any downtime during this migration and can continue to read/write to the cluster.\n- The re-balances that occur from the node replacements will result in the bucket(s) being migrated to Magma.\n- The status of the cluster can be monitored via the [GET cluster API](https://docs.couchbase.com/cloud/management-api-reference/index.html#tag/clusters/operation/getCluster). The cluster will transition to healthy state after migration is completed for all listed buckets.\n\n2. This operation is only allowed for clusters with server version >= 7.6.0. The storage backend cannot be updated for the cluster with server versions lower than this. All the nodes must be upgraded to 7.6.0 before the bucket migration can be performed.\n\n3. Before migrating from Couchstore to Magma, the bucket memory allocation should be upgraded to at least the minimum amount required for a Magma bucket that is 1024 MiB.\n\n4. Cluster must be in a healthy state to perform this operation.\n\nTo learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Clusters"
        ],
        "operationId": "putBucketStorageBackend",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "buckets"
                ],
                "properties": {
                  "buckets": {
                    "type": "array",
                    "description": "Names of the buckets which need to be migrated from Couchstore to Magma.",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "sample-bucket",
                      "my-bucket"
                    ],
                    "maxItems": 30
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successfully accepted updated storage backend for the bucket."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The client does not have the valid credentials to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "httpStatusCode": 401,
                      "code": 1001,
                      "message": "The request is unauthorized. Please ensure you have proper authentication credentials and try again.",
                      "hint": "The request is unauthorized. Please ensure you have proper authentication credentials and try again."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/privateEndpointService": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Private Endpoint Service Status",
        "description": "Private endpoint service allows you to access your Capella cluster from your private network, using private endpoints.\n\nThis endpoint determines if the endpoint service is enabled or disabled on your cluster.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n  - Organization Owner\n  - Project Owner\n  - Project Manager\n  - Project Viewer\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Private Endpoint Service"
        ],
        "operationId": "getPrivateEndpointServiceStatus",
        "responses": {
          "200": {
            "description": "Successfully retrieved private endpoint status of cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "enabled"
                  ],
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "The status of the private endpoint service.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Enable Private Endpoint Service",
        "description": "Enable private endpoint service on your cluster.\n\nSupporting infrastructure is deployed and it may take a few minutes for private endpoints to be available.\nAfter it's enabled, you can create private endpoint in your network.  You can do this using the cloud provider's CLI.  For an example, use\nthe POST privateEndpointService/endpointCommand endpoint to get the command.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Manager\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Private Endpoint Service"
        ],
        "operationId": "enablePrivateEndpointService",
        "responses": {
          "202": {
            "description": "Successfully submitted request to enable private endpoint service."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Disable Private Endpoint Service",
        "description": "Disable private endpoint service on your cluster.\n\nSupporting infrastructure is removed and it may take a few minutes before private endpoints is disabled.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Private Endpoint Service"
        ],
        "operationId": "disablePrivateEndpointService",
        "responses": {
          "202": {
            "description": "Successfully submitted request to disable private endpoint service."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/privateEndpointService/endpoints": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "List Private Endpoints",
        "description": "Returns a list of private endpoints associated with the endpoint service for your Capella cluster, along\nwith the endpoint state.  Each private endpoint connects a private network to the Capella cluster.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n  - Organization Owner\n  - Project Owner\n  - Project Manager\n  - Project Creator\n  - Project Viewer\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Private Endpoint Service"
        ],
        "operationId": "listPrivateEndpoints",
        "responses": {
          "200": {
            "description": "Successfully retrieved list of private endpoints.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "endpoints"
                  ],
                  "properties": {
                    "endpoints": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "status"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "endpoint id",
                            "example": "vpce-000000000000aaaaa"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "pendingAcceptance",
                              "linked",
                              "rejected",
                              "failed",
                              "unrecognized"
                            ],
                            "example": "linked"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/privateEndpointService/endpointCommand": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Get Private Endpoint CLI Command required to setup private endpoint for specific CSP",
        "description": "Retrieve the command or script to be executed in order to create the private endpoint which will provides a private connection between the specified VPC and the specified Capella private endpoint service.  An example for AWS:\n\n```\naws ec2 create-vpc-endpoint \\\n  --vpc-id vpc-1234 \\\n  --region us-east-1 \\\n  --service-name com.amazonaws.vpce.us-east-1.vpce-svc-1234 \\\n  --vpc-endpoint-type Interface \\\n  --subnet-ids subnet-1234\n```\n\nAn example for Azure:\n\n```\naz network private-endpoint create \\\n  --connection-name connection-1 \\\n  --name private-endpoint \\\n  --private-connection-resource-id svc-1 \\\n  --resource-group test-rg \\\n  --subnet subnet-1 \\\n  --group-id sites \\\n  --vnet-name vnet-1\n```\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n  - Organization Owner\n  - Project Owner\n  - Project Manager\n  - Project Viewer\n\n  To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Private Endpoint Service"
        ],
        "operationId": "getPrivateEndpointCommand",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "vpcID",
                      "subnetIDs"
                    ],
                    "properties": {
                      "vpcID": {
                        "type": "string",
                        "minLength": 12,
                        "maxLength": 21,
                        "description": "The ID of your virtual network",
                        "example": "vpc-1234"
                      },
                      "subnetIDs": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "subnet-1234"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "resourceGroupName",
                      "virtualNetwork"
                    ],
                    "properties": {
                      "resourceGroupName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 90,
                        "description": "The name of your resource group",
                        "example": "test-rg"
                      },
                      "virtualNetwork": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 64,
                        "description": "The virtual network and subnet name",
                        "example": "vnet-1/subnet-1"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "PostAWSCommandRequest": {
                  "value": {
                    "vpcID": "vpc-1234",
                    "subnetIDs": [
                      "subnet-1234"
                    ]
                  }
                },
                "PostAzureCommandRequest": {
                  "value": {
                    "resourceGroupName": "test-rg",
                    "virtualNetwork": "vnet-1/subnet-1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully provided command to create a private endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "command"
                  ],
                  "properties": {
                    "command": {
                      "type": "string",
                      "description": "The CLI command or script used to create private endpoint within your CSP.",
                      "example": "aws ec2 create-vpc-endpoint --vpc-id  vpc-1234 --region us-east-1 --service-name com.amazonaws.vpce.us-east-1.vpce-svc-1234 --vpc-endpoint-type Interface --subnet-ids subnet-1234"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/privateEndpointService/endpoints/{endpointId}/associate": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "endpointId",
          "description": "The VPC endpoint ID.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "vpce-1234"
          }
        }
      ],
      "post": {
        "summary": "Accept Private Endpoint Request",
        "description": "Accept a new private endpoint connection request so that it is associated with the endpoint service.  This means the private endpoint is available for use.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n  - Organization Owner\n  - Project Owner\n  - Project Manager\n\n  To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Private Endpoint Service"
        ],
        "operationId": "acceptPrivateEndpoint",
        "responses": {
          "204": {
            "description": "Successfully accepted private endpoint."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/privateEndpointService/endpoints/{endpointId}/unassociate": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "endpointId",
          "description": "The VPC endpoint ID.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "vpce-1234"
          }
        }
      ],
      "post": {
        "summary": "Reject or disassociate Private Endpoint",
        "description": "Removes the private endpoint associated with the endpoint service.  This means the private endpoint is no\nlonger able to connect to the private endpoint service.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Private Endpoint Service"
        ],
        "operationId": "deletePrivateEndpoint",
        "responses": {
          "204": {
            "description": "Successfully deleted private endpoint."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Organization",
        "description": "Fetches the details of an organization by ID.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Creator\n- Organization Member\n\nTo learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n",
        "tags": [
          "Organizations"
        ],
        "operationId": "getOrganizationByID",
        "responses": {
          "200": {
            "headers": {
              "ETag": {
                "description": "Entity tag for the resource, used for caching and conditional requests.",
                "schema": {
                  "type": "string",
                  "example": "Version: 1",
                  "description": "An ETag is a unique identifier assigned to a specific version of a resource on a web server.\nIt allows the server to identify whether the version of the resource on the client side matches the version on the server side.\nThis field represents the ETag value returned by the server for a particular resource.\n"
                }
              }
            },
            "description": "Successfully returned the organization details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "description",
                    "audit",
                    "preferences"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "A GUID4 identifier of the organization.",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "example": "My-Organization",
                      "description": "The name of the organization."
                    },
                    "subdomain": {
                      "type": "string",
                      "description": "The new name of the subdomain for the organization.",
                      "example": "abc",
                      "maxLength": 30
                    },
                    "description": {
                      "type": "string",
                      "example": "The description of the organization.",
                      "description": "The description of a particular organization."
                    },
                    "preferences": {
                      "type": "object",
                      "description": "Preferences stores preferences for the organization.",
                      "properties": {
                        "sessionDuration": {
                          "type": "integer",
                          "format": "uint32",
                          "description": "Maximum allowed time in seconds inside the organization for a user.",
                          "example": 3600,
                          "default": 7200
                        }
                      }
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/configuration": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "put": {
        "summary": "Update Organization Configuration",
        "description": "Updates an existing organization configuration. Use this endpoint to add, update, and delete network subdomains.\n\nSubdomains:\n- Can have a maximum of 30 alphanumeric characters.\n- Must be a unique string and not already in use in another tenant or organization. Empty strings are allowed.\n- Only affect new clusters. You cannot update existing clusters to include a new subdomain.\n- Currently only supported for AWS clusters.\n\nIn order to access this endpoint, the provided API key must have the following role:\n- Organization Owner\n\nSubdomains are not automatically available. You must contact Couchbase support to enable this feature.\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "parameters": [
          {
            "name": "If-Match",
            "in": "header",
            "description": "A precondition header that specifies the entity tag of a resource.",
            "schema": {
              "type": "string",
              "example": "12"
            }
          }
        ],
        "tags": [
          "Organizations"
        ],
        "operationId": "putOrganizationConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "subdomain"
                ],
                "properties": {
                  "subdomain": {
                    "type": "string",
                    "description": "The new name of the subdomain for the organization.",
                    "example": "abc",
                    "maxLength": 30
                  }
                }
              },
              "examples": {
                "UpdateSubdomain": {
                  "value": {
                    "subdomain": "abc"
                  }
                },
                "DeleteSubdomain": {
                  "value": {
                    "subdomain": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully updated the organization configuration."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations": {
      "get": {
        "summary": "List Organizations",
        "description": "Returns a list of all organizations the user has access to.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Creator\n- Organization Member\n\nTo learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n",
        "tags": [
          "Organizations"
        ],
        "operationId": "listOrganizations",
        "responses": {
          "200": {
            "description": "Successfully listed all the organizations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "description",
                          "audit",
                          "preferences"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "A GUID4 identifier of the organization.",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string",
                            "example": "My-Organization",
                            "description": "The name of the organization."
                          },
                          "subdomain": {
                            "type": "string",
                            "description": "The new name of the subdomain for the organization.",
                            "example": "abc",
                            "maxLength": 30
                          },
                          "description": {
                            "type": "string",
                            "example": "The description of the organization.",
                            "description": "The description of a particular organization."
                          },
                          "preferences": {
                            "type": "object",
                            "description": "Preferences stores preferences for the organization.",
                            "properties": {
                              "sessionDuration": {
                                "type": "integer",
                                "format": "uint32",
                                "description": "Maximum allowed time in seconds inside the organization for a user.",
                                "example": 3600,
                                "default": 7200
                              }
                            }
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/certificates": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Certificate",
        "description": "In order to access this endpoint, the provided API key must have at least one of the following roles:\n  - Organization Owner\n  - Project Owner\n  - Project Manager\n  - Project Viewer\n  - Database Data Reader/Writer\n  - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Certificates"
        ],
        "operationId": "getCertificate",
        "responses": {
          "200": {
            "description": "Successfully returned a self-signed certificate.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "certificate"
                  ],
                  "properties": {
                    "certificate": {
                      "type": "string",
                      "example": "-----BEGIN CERTIFICATE-----\nMIIDFTCCAf2gAwIBAgI[...]CSYBWaK0ofivA==\n-----END CERTIFICATE-----\n"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/sampleBuckets": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Load Sample Data",
        "description": "Loads predefined sample data into a cluster by selecting from three available options:\n\n- travel-sample \n- gamesim-sample\n- beer-sample \n\nUpon a successful request, a new bucket is created within the cluster, and populated with the chosen sample data.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Sample Bucket"
        ],
        "operationId": "postSampleBucket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "enum": [
                      "travel-sample",
                      "gamesim-sample",
                      "beer-sample"
                    ],
                    "description": "The name of the sample dataset to be loaded. The name has to be one of the following sample datasets.\n\n - travel-sample \n - gamesim-sample\n - beer-sample \n \n",
                    "example": "travel-sample"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully started sample data load.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "bucketId",
                    "name"
                  ],
                  "properties": {
                    "bucketId": {
                      "type": "string",
                      "example": "dGVzdA",
                      "description": "The ID of the sample data import job. This field will be present for clusters running on server versions above 7.5."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the bucket in which the sample data will be loaded.",
                      "example": "travel-sample"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Sample Data Import Buckets",
        "description": "Lists all the sample buckets under the organization.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Sample Bucket"
        ],
        "operationId": "listSampleBuckets",
        "responses": {
          "200": {
            "description": "Successfully listed all the sample buckets under the organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "timeToLiveInSeconds",
                          "replicas",
                          "type",
                          "storageBackend",
                          "memoryAllocationInMb",
                          "bucketConflictResolution",
                          "durabilityLevel",
                          "evictionPolicy",
                          "stats"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "dGVzdA",
                            "description": "The ID of the bucket. This is the base64 encoding of the bucket name."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the bucket.",
                            "example": "My-First-Bucket"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the bucket. If selected Ephemeral, it is not eligible for imports or App Endpoints creation. The options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket)."
                          },
                          "storageBackend": {
                            "type": "string",
                            "description": "Type of the bucket. If selected Ephemeral, it is not eligible for imports or App Endpoints creation.\nThe options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).",
                            "example": "couchstore"
                          },
                          "memoryAllocationInMb": {
                            "type": "integer",
                            "description": "The amount of memory to allocate for the bucket memory in MiB. The maximum limit is dependent on the allocation of the KV service.For example, 80% of the allocation.",
                            "example": 100
                          },
                          "bucketConflictResolution": {
                            "type": "string",
                            "description": "The means in which conflicts are resolved during replication. This field may be referred to as conflictResolution in the Couchbase documentation, and seqno and lww may be referred to as sequence Number and Timestamp respectively.\nTo learn more, see [Conflict Resolution](https://docs.couchbase.com/cloud/clusters/xdcr/xdcr.html#conflict-resolution)."
                          },
                          "durabilityLevel": {
                            "type": "string",
                            "description": "This is the minimum level at which all writes to the Couchbase bucket must occur.\n\nThe options for Durability level are as follows, according to the bucket type.\n\n- For a Couchbase bucket:\n\n  1. None\n\n  2. Replicate to Majority\n\n  3. Majority and Persist to Active\n\n  4. Persist to Majority\n\n- For an Ephemeral bucket:\n\n  1. None\n\n  2. Replicate to Majority\n\n To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).\n"
                          },
                          "replicas": {
                            "type": "integer",
                            "description": "The number of replicas for the bucket.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket)."
                          },
                          "flush": {
                            "type": "boolean",
                            "description": "Replaced by flushEnabled.\n\nDetermines whether bucket flush is enabled. Set property to true to be able to delete all items in this bucket using the /flush endpoint. Disable property to avoid inadvertent data loss by calling the  the /flush endpoint .\n",
                            "example": false,
                            "deprecated": true
                          },
                          "flushEnabled": {
                            "type": "boolean",
                            "description": "Determines whether bucket flush is enabled. Set flushEnabled to true to be able to delete all items in this bucket using the /flush endpoint. Disable flushEnabled to avoid inadvertent data loss by calling the /flush endpoint .",
                            "example": false
                          },
                          "timeToLiveInSeconds": {
                            "type": "integer",
                            "description": "Specifies the time to live (TTL) value in seconds. This is the maximum time to live for items in the bucket. If specified as 0, TTL is disabled. This is a non-negative value.",
                            "example": 100
                          },
                          "evictionPolicy": {
                            "type": "string",
                            "description": "The policy which Capella adopts to prevent data loss due to memory exhaustion.\nThis may be also known as Ejection Policy in the Couchbase documentation. \n\n- For Couchbase bucket, Eviction Policy is `fullEviction` by default.\n\n- For Ephemeral buckets, Eviction Policy is a required field, and should be one of the following:\n\n   1. noEviction\n\n   2. nruEviction\n\n  To learn more, see [Ejection Policy](https://docs.couchbase.com/server/current/rest-api/rest-bucket-create.html#evictionpolicy).\n",
                            "enum": [
                              "fullEviction",
                              "noEviction",
                              "nruEviction"
                            ],
                            "example": "fullEviction",
                            "default": "fullEviction"
                          },
                          "stats": {
                            "type": "object",
                            "required": [
                              "itemCount",
                              "opsPerSecond",
                              "diskUsedInMib",
                              "memoryUsedInMib"
                            ],
                            "properties": {
                              "itemCount": {
                                "type": "integer",
                                "description": "Number of documents in the bucket.",
                                "example": 10
                              },
                              "opsPerSecond": {
                                "type": "integer",
                                "description": "Number of operations per second.",
                                "example": 0
                              },
                              "diskUsedInMib": {
                                "type": "integer",
                                "description": "The amount of disk used (in MiB).",
                                "example": 17
                              },
                              "memoryUsedInMib": {
                                "type": "integer",
                                "description": "The amount of memory used (in MiB).",
                                "example": 50
                              }
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "description": "Priority of the bucket.\n\n- Specify relative bucket priority so that buckets will be recovered in the order specified during failover.\n\n- Bucket ranking/priority is only available in Couchbase Server 7.6 and above\n\n- Default bucket priority is 0 and can be set to a value between 0 and 1000. 1000 is the highest priority and 0 is the lowest.\n",
                            "default": 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/sampleBuckets/{bucketId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "bucketId",
          "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "dGVzdA"
          }
        }
      ],
      "get": {
        "summary": "Get Sample Import Bucket",
        "description": "Fetches the configuration of the given bucket.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Sample Bucket"
        ],
        "operationId": "getSampleBucketById",
        "responses": {
          "200": {
            "description": "Successfully fetched the sample bucket based on the bucketId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "timeToLiveInSeconds",
                    "replicas",
                    "type",
                    "storageBackend",
                    "memoryAllocationInMb",
                    "bucketConflictResolution",
                    "durabilityLevel",
                    "evictionPolicy",
                    "stats"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "dGVzdA",
                      "description": "The ID of the bucket. This is the base64 encoding of the bucket name."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the bucket.",
                      "example": "My-First-Bucket"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the bucket. If selected Ephemeral, it is not eligible for imports or App Endpoints creation. The options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket)."
                    },
                    "storageBackend": {
                      "type": "string",
                      "description": "Type of the bucket. If selected Ephemeral, it is not eligible for imports or App Endpoints creation.\nThe options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).",
                      "example": "couchstore"
                    },
                    "memoryAllocationInMb": {
                      "type": "integer",
                      "description": "The amount of memory to allocate for the bucket memory in MiB. The maximum limit is dependent on the allocation of the KV service.For example, 80% of the allocation.",
                      "example": 100
                    },
                    "bucketConflictResolution": {
                      "type": "string",
                      "description": "The means in which conflicts are resolved during replication. This field may be referred to as conflictResolution in the Couchbase documentation, and seqno and lww may be referred to as sequence Number and Timestamp respectively.\nTo learn more, see [Conflict Resolution](https://docs.couchbase.com/cloud/clusters/xdcr/xdcr.html#conflict-resolution)."
                    },
                    "durabilityLevel": {
                      "type": "string",
                      "description": "This is the minimum level at which all writes to the Couchbase bucket must occur.\n\nThe options for Durability level are as follows, according to the bucket type.\n\n- For a Couchbase bucket:\n\n  1. None\n\n  2. Replicate to Majority\n\n  3. Majority and Persist to Active\n\n  4. Persist to Majority\n\n- For an Ephemeral bucket:\n\n  1. None\n\n  2. Replicate to Majority\n\n To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).\n"
                    },
                    "replicas": {
                      "type": "integer",
                      "description": "The number of replicas for the bucket.\nTo learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket)."
                    },
                    "flush": {
                      "type": "boolean",
                      "description": "Replaced by flushEnabled.\n\nDetermines whether bucket flush is enabled. Set property to true to be able to delete all items in this bucket using the /flush endpoint. Disable property to avoid inadvertent data loss by calling the  the /flush endpoint .\n",
                      "example": false,
                      "deprecated": true
                    },
                    "flushEnabled": {
                      "type": "boolean",
                      "description": "Determines whether bucket flush is enabled. Set flushEnabled to true to be able to delete all items in this bucket using the /flush endpoint. Disable flushEnabled to avoid inadvertent data loss by calling the /flush endpoint .",
                      "example": false
                    },
                    "timeToLiveInSeconds": {
                      "type": "integer",
                      "description": "Specifies the time to live (TTL) value in seconds. This is the maximum time to live for items in the bucket. If specified as 0, TTL is disabled. This is a non-negative value.",
                      "example": 100
                    },
                    "evictionPolicy": {
                      "type": "string",
                      "description": "The policy which Capella adopts to prevent data loss due to memory exhaustion.\nThis may be also known as Ejection Policy in the Couchbase documentation. \n\n- For Couchbase bucket, Eviction Policy is `fullEviction` by default.\n\n- For Ephemeral buckets, Eviction Policy is a required field, and should be one of the following:\n\n   1. noEviction\n\n   2. nruEviction\n\n  To learn more, see [Ejection Policy](https://docs.couchbase.com/server/current/rest-api/rest-bucket-create.html#evictionpolicy).\n",
                      "enum": [
                        "fullEviction",
                        "noEviction",
                        "nruEviction"
                      ],
                      "example": "fullEviction",
                      "default": "fullEviction"
                    },
                    "stats": {
                      "type": "object",
                      "required": [
                        "itemCount",
                        "opsPerSecond",
                        "diskUsedInMib",
                        "memoryUsedInMib"
                      ],
                      "properties": {
                        "itemCount": {
                          "type": "integer",
                          "description": "Number of documents in the bucket.",
                          "example": 10
                        },
                        "opsPerSecond": {
                          "type": "integer",
                          "description": "Number of operations per second.",
                          "example": 0
                        },
                        "diskUsedInMib": {
                          "type": "integer",
                          "description": "The amount of disk used (in MiB).",
                          "example": 17
                        },
                        "memoryUsedInMib": {
                          "type": "integer",
                          "description": "The amount of memory used (in MiB).",
                          "example": 50
                        }
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "description": "Priority of the bucket.\n\n- Specify relative bucket priority so that buckets will be recovered in the order specified during failover.\n\n- Bucket ranking/priority is only available in Couchbase Server 7.6 and above\n\n- Default bucket priority is 0 and can be set to a value between 0 and 1000. 1000 is the highest priority and 0 is the lowest.\n",
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Sample Import Bucket",
        "description": "Deletes an existing bucket which was loaded with sample data.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Sample Bucket"
        ],
        "operationId": "deleteSampleDataByBucketID",
        "responses": {
          "204": {
            "description": "Successfully deleted the bucket by its bucketId."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}/backups": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "bucketId",
          "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "dGVzdA"
          }
        }
      ],
      "post": {
        "summary": "Create Backup",
        "description": "Creates an on-demand backup for a bucket.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Backups & Restore (Bucket)"
        ],
        "operationId": "postBackup",
        "responses": {
          "202": {
            "description": "Successfully created an on-demand backup for a bucket."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/backups": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "List Cluster Backups",
        "description": "Lists the latest backup for all buckets in a cluster.\n\nNote: This endpoint doesn’t return queued backups and only returns ones that are actively being processed or are completed/failed.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Backups & Restore (Bucket)"
        ],
        "operationId": "listClusterBackups",
        "responses": {
          "200": {
            "description": "Successfully listed the latest backups for all buckets under the cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "clusterID",
                          "tenantID",
                          "projectID",
                          "cycleID",
                          "status",
                          "method",
                          "bucketName",
                          "bucketID",
                          "source",
                          "provider",
                          "stats",
                          "elapsedTimeInSeconds",
                          "scheduleInfo"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the backup created."
                          },
                          "clusterID": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the cluster."
                          },
                          "tenantID": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the organization."
                          },
                          "projectID": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the project."
                          },
                          "cycleID": {
                            "type": "string",
                            "description": "The ID of the cycle this backup belongs to."
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The RFC3339 timestamp representing the time at which backup was created.\n",
                            "example": "2021-09-01T12:34:56Z"
                          },
                          "restoreBefore": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The RFC3339 timestamp representing the time at which backup will expire.\n",
                            "example": "2021-09-02T12:34:56Z"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the backup.",
                            "enum": [
                              "pending",
                              "ready",
                              "failed"
                            ],
                            "example": "pending"
                          },
                          "method": {
                            "type": "string",
                            "description": "The mechanism of the backup.\n1. Incremental backups include the data that has changed since the last scheduled backup.\n2. Full backup includes all bucket data from the time the backup was created.\n",
                            "enum": [
                              "incremental",
                              "full"
                            ],
                            "example": "incremental"
                          },
                          "bucketName": {
                            "type": "string",
                            "description": "The name of the bucket for which the backup belongs to.",
                            "example": "My-First-Bucket"
                          },
                          "bucketID": {
                            "type": "string",
                            "example": "dGVzdA",
                            "description": "The ID of the bucket.This is the base64 encoding of the bucket name."
                          },
                          "source": {
                            "type": "string",
                            "description": "The way a backup job was initiated.\n1. Manual represents a manually triggered backup job or on-demand.\n2. Scheduled represents a backup job created from a schedule.\n",
                            "enum": [
                              "manual",
                              "scheduled"
                            ],
                            "example": "scheduled"
                          },
                          "provider": {
                            "type": "string",
                            "description": "The cloud provider where the cluster is hosted.",
                            "example": "aws"
                          },
                          "stats": {
                            "description": "Represents various backup level data that couchbase provides. To learn more, see [Backup Summary](https://docs.couchbase.com/cloud/clusters/manage-backup.html#backup-summary)",
                            "type": "object",
                            "required": [
                              "cbas",
                              "event",
                              "fts",
                              "gsi",
                              "tombstones",
                              "mutations",
                              "items",
                              "sizeInMb"
                            ],
                            "properties": {
                              "sizeInMb": {
                                "type": "number",
                                "format": "float",
                                "description": "Backup size in megabytes."
                              },
                              "items": {
                                "type": "integer",
                                "description": "The number of items saved during the backup.",
                                "example": 150
                              },
                              "mutations": {
                                "type": "integer",
                                "description": "The number of mutations saved during the backup.",
                                "example": 150
                              },
                              "tombstones": {
                                "type": "integer",
                                "description": "The number of tombstones saved during the backup.",
                                "example": 4
                              },
                              "gsi": {
                                "type": "integer",
                                "description": "The number of global secondary indexes saved during the backup.",
                                "example": 46
                              },
                              "fts": {
                                "type": "integer",
                                "description": "The number of full text search entities saved during the backup.",
                                "example": 30
                              },
                              "cbas": {
                                "type": "integer",
                                "description": "The number of analytics entities saved during the backup.",
                                "example": 30
                              },
                              "event": {
                                "type": "integer",
                                "description": "The number of event entities saved during the backup.",
                                "example": 25
                              }
                            }
                          },
                          "elapsedTimeInSeconds": {
                            "type": "integer",
                            "description": "The amount of seconds that have elapsed between the creation and completion of the backup.",
                            "example": 30
                          },
                          "scheduleInfo": {
                            "description": "Represents the schedule information of the backup.",
                            "type": "object",
                            "required": [
                              "backupType",
                              "backupTime",
                              "increment",
                              "retention"
                            ],
                            "properties": {
                              "backupType": {
                                "type": "string",
                                "description": "Represents whether the backup is a Weekly or Daily backup.",
                                "example": "Weekly"
                              },
                              "backupTime": {
                                "type": "string",
                                "description": "The timestamp indicating the backup created time.",
                                "example": "2023-07-13 20:26:54.990864215 +0000 UTC"
                              },
                              "increment": {
                                "type": "integer",
                                "description": "Represents interval in hours for incremental backup.",
                                "example": 4
                              },
                              "retention": {
                                "type": "string",
                                "description": "Represents retention time in days.",
                                "example": "90days"
                              }
                            }
                          },
                          "bucketDownloadsCount": {
                            "type": "integer",
                            "description": "The number of downloadable backups the bucket this backup belongs to has.",
                            "example": 2
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/backups/{backupId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "backupId",
          "description": "The GUID4 ID of the backup.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Backup",
        "description": "Fetches the details of an existing backup.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Backups & Restore (Bucket)"
        ],
        "operationId": "getBackupByID",
        "responses": {
          "200": {
            "description": "Successfully fetched the backup by its backupId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "clusterID",
                    "tenantID",
                    "projectID",
                    "cycleID",
                    "status",
                    "method",
                    "bucketName",
                    "bucketID",
                    "source",
                    "provider",
                    "stats",
                    "elapsedTimeInSeconds",
                    "scheduleInfo"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the backup created."
                    },
                    "clusterID": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the cluster."
                    },
                    "tenantID": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the organization."
                    },
                    "projectID": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the project."
                    },
                    "cycleID": {
                      "type": "string",
                      "description": "The ID of the cycle this backup belongs to."
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The RFC3339 timestamp representing the time at which backup was created.\n",
                      "example": "2021-09-01T12:34:56Z"
                    },
                    "restoreBefore": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The RFC3339 timestamp representing the time at which backup will expire.\n",
                      "example": "2021-09-02T12:34:56Z"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the backup.",
                      "enum": [
                        "pending",
                        "ready",
                        "failed"
                      ],
                      "example": "pending"
                    },
                    "method": {
                      "type": "string",
                      "description": "The mechanism of the backup.\n1. Incremental backups include the data that has changed since the last scheduled backup.\n2. Full backup includes all bucket data from the time the backup was created.\n",
                      "enum": [
                        "incremental",
                        "full"
                      ],
                      "example": "incremental"
                    },
                    "bucketName": {
                      "type": "string",
                      "description": "The name of the bucket for which the backup belongs to.",
                      "example": "My-First-Bucket"
                    },
                    "bucketID": {
                      "type": "string",
                      "example": "dGVzdA",
                      "description": "The ID of the bucket.This is the base64 encoding of the bucket name."
                    },
                    "source": {
                      "type": "string",
                      "description": "The way a backup job was initiated.\n1. Manual represents a manually triggered backup job or on-demand.\n2. Scheduled represents a backup job created from a schedule.\n",
                      "enum": [
                        "manual",
                        "scheduled"
                      ],
                      "example": "scheduled"
                    },
                    "provider": {
                      "type": "string",
                      "description": "The cloud provider where the cluster is hosted.",
                      "example": "aws"
                    },
                    "stats": {
                      "description": "Represents various backup level data that couchbase provides. To learn more, see [Backup Summary](https://docs.couchbase.com/cloud/clusters/manage-backup.html#backup-summary)",
                      "type": "object",
                      "required": [
                        "cbas",
                        "event",
                        "fts",
                        "gsi",
                        "tombstones",
                        "mutations",
                        "items",
                        "sizeInMb"
                      ],
                      "properties": {
                        "sizeInMb": {
                          "type": "number",
                          "format": "float",
                          "description": "Backup size in megabytes."
                        },
                        "items": {
                          "type": "integer",
                          "description": "The number of items saved during the backup.",
                          "example": 150
                        },
                        "mutations": {
                          "type": "integer",
                          "description": "The number of mutations saved during the backup.",
                          "example": 150
                        },
                        "tombstones": {
                          "type": "integer",
                          "description": "The number of tombstones saved during the backup.",
                          "example": 4
                        },
                        "gsi": {
                          "type": "integer",
                          "description": "The number of global secondary indexes saved during the backup.",
                          "example": 46
                        },
                        "fts": {
                          "type": "integer",
                          "description": "The number of full text search entities saved during the backup.",
                          "example": 30
                        },
                        "cbas": {
                          "type": "integer",
                          "description": "The number of analytics entities saved during the backup.",
                          "example": 30
                        },
                        "event": {
                          "type": "integer",
                          "description": "The number of event entities saved during the backup.",
                          "example": 25
                        }
                      }
                    },
                    "elapsedTimeInSeconds": {
                      "type": "integer",
                      "description": "The amount of seconds that have elapsed between the creation and completion of the backup.",
                      "example": 30
                    },
                    "scheduleInfo": {
                      "description": "Represents the schedule information of the backup.",
                      "type": "object",
                      "required": [
                        "backupType",
                        "backupTime",
                        "increment",
                        "retention"
                      ],
                      "properties": {
                        "backupType": {
                          "type": "string",
                          "description": "Represents whether the backup is a Weekly or Daily backup.",
                          "example": "Weekly"
                        },
                        "backupTime": {
                          "type": "string",
                          "description": "The timestamp indicating the backup created time.",
                          "example": "2023-07-13 20:26:54.990864215 +0000 UTC"
                        },
                        "increment": {
                          "type": "integer",
                          "description": "Represents interval in hours for incremental backup.",
                          "example": 4
                        },
                        "retention": {
                          "type": "string",
                          "description": "Represents retention time in days.",
                          "example": "90days"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Backup Cycle",
        "description": "Deletes the backup records that belong to the same cycle from the DB by using the backup ID.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Backups & Restore (Bucket)"
        ],
        "operationId": "deleteBackupCycleByID",
        "responses": {
          "202": {
            "description": "Successfully deleted the backup by its backupId."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/cloudsnapshotbackups": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create Cloud Snapshot Backup",
        "description": "Creates a cloud snapshot backup for a cluster.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "operationId": "createCloudSnapshotBackup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "retention": {
                    "type": "integer",
                    "description": "Represents interval in hours to retain the backup.",
                    "example": 730
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successfully created a cloud snapshot backup for a cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "backupId": {
                      "type": "string",
                      "example": "53b504e2-3f1e-4601-9e44-c04aa0195057",
                      "description": "The id is a unique identifier for a backup.\n"
                    }
                  }
                },
                "examples": {
                  "createCloudSnapshotBackup": {
                    "value": {
                      "backupId": "IS9DrRsw4KWFS72Zhbj4xmhllHvPcdCL"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Cloud Snapshot Backups",
        "description": "List the backups belonging to a cluster.\n\nNote: This endpoint doesn’t return queued backups and only returns ones that are actively being processed or are completed/failed.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "operationId": "listCloudSnapshotBackups",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **createdAt**, **expiration**, **retention**, **sizee**, **type**.",
            "example": [
              "createdAt"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed the backups belonging to a cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "clusterId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "expiration": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "id": {
                            "type": "string"
                          },
                          "progress": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          },
                          "projectId": {
                            "type": "string"
                          },
                          "appService": {
                            "type": "string",
                            "description": "The version of any App Services which are associated with the cluster.",
                            "example": "3.141.5"
                          },
                          "cmek": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "UUID of the customer managed encryption key.",
                                  "example": "ffffffff-aaaa-1414-eeee-000000000000"
                                },
                                "providerId": {
                                  "type": "string",
                                  "description": "ProviderId is the ID of the customer managed encryption key as stored by the cloud provider.",
                                  "example": "arn:aws:kms:us-west-1:123456789012:key/abcd1234-a123-456a-a12b-a123b4cd56ef"
                                }
                              }
                            }
                          },
                          "retention": {
                            "type": "integer"
                          },
                          "server": {
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "string",
                                "description": "Version of the Couchbase Server to be installed in the cluster. Refer to documentation [here](https://docs.couchbase.com/cloud/clusters/upgrade-database.html#server-version-maintenance-support) for list of supported versions. The latest Couchbase Server version will be deployed by default.",
                                "example": "7.1"
                              }
                            }
                          },
                          "databaseSize": {
                            "type": "integer",
                            "format": "uint64"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "listClusterBackups": {
                    "value": {
                      "cursor": {
                        "hrefs": {},
                        "pages": {
                          "last": 1,
                          "page": 1,
                          "perPage": 5,
                          "totalItems": 5
                        }
                      },
                      "data": [
                        {
                          "data": {
                            "clusterId": "49b2c7f7-9612-4c99-b202-d4067b276b89",
                            "createdAt": "2023-11-25T13:02:32.409980126Z",
                            "expiration": "2023-12-25T13:02:32.409980126Z",
                            "id": "42bf3a6c-ebd9-495f-a391-57708b8c267d",
                            "progress": {
                              "status": "complete",
                              "time": "2024-01-18T10:47:18Z"
                            },
                            "projectId": "39387120-0a23-41bf-8d53-9048e6080dd1",
                            "retention": 604800000000000,
                            "cmek": [
                              {
                                "id": "ffffffff-aaaa-1414-eeee-000000000000",
                                "providerId": "example-arn-1"
                              }
                            ],
                            "server": "7.2.3",
                            "size": 127569288,
                            "tenantId": "10f52cbd-8367-47f8-a840-e692339b4b04",
                            "type": "on_demand"
                          },
                          "permissions": {
                            "create": {
                              "accessible": true
                            },
                            "delete": {
                              "accessible": true
                            },
                            "read": {
                              "accessible": true
                            },
                            "update": {
                              "accessible": true
                            }
                          }
                        },
                        {
                          "data": {
                            "clusterId": "49b2c7f7-9612-4c99-b202-d4067b276b89",
                            "createdAt": "2023-11-25T13:02:32.409980126Z",
                            "expiration": "2023-12-25T13:02:32.409980126Z",
                            "id": "42bf3a6c-ebd9-495f-a391-57708b8c267d",
                            "progress": {
                              "status": "pending",
                              "time": "2024-01-18T10:47:18Z"
                            },
                            "projectId": "39387120-0a23-41bf-8d53-9048e6080dd1",
                            "retention": 604800000000000,
                            "cmek": [
                              {
                                "id": "ffffffff-aaaa-1414-eeee-000000000000",
                                "providerId": "example-arn-1"
                              },
                              {
                                "id": "ffffffff-aaaa-1414-eeee-000000000000",
                                "providerId": "example-arn-2"
                              }
                            ],
                            "server": "7.2.3",
                            "databaseSize": 127569,
                            "tenantId": "10f52cbd-8367-47f8-a840-e692339b4b04",
                            "type": "scheduled"
                          },
                          "permissions": {
                            "create": {
                              "accessible": true
                            },
                            "delete": {
                              "accessible": true
                            },
                            "read": {
                              "accessible": true
                            },
                            "update": {
                              "accessible": true
                            }
                          }
                        }
                      ],
                      "permissions": {
                        "create": {
                          "accessible": true
                        },
                        "delete": {
                          "accessible": true
                        },
                        "read": {
                          "accessible": true
                        },
                        "update": {
                          "accessible": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/cloudsnapshotbackups/restores": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "List Cloud Snapshot Restores",
        "description": "Lists the restores that have taken place for a given cluster.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "operationId": "listCloudSnapshotRestores",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **createdAt**, **expiration**, **retention**, **sizee**, **type**.",
            "example": [
              "createdAt"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed the cloud snapshot restores belonging to a cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "clusterId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "projectId": {
                            "type": "string"
                          },
                          "restoreEnd": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "restoreTo": {
                            "type": "string"
                          },
                          "snapshot": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "listRestores": {
                    "value": {
                      "cursor": {
                        "hrefs": {},
                        "pages": {
                          "last": 1,
                          "page": 1,
                          "perPage": 5,
                          "totalItems": 5
                        }
                      },
                      "data": [
                        {
                          "data": {
                            "clusterId": "49b2c7f7-9612-4c99-b202-d4067b276b89",
                            "createdAt": "2023-11-25T13:02:32.409980126Z",
                            "expiration": "2023-12-25T13:02:32.409980126Z",
                            "id": "42bf3a6c-ebd9-495f-a391-57708b8c267d",
                            "progress": {
                              "status": "complete",
                              "time": "2024-01-18T10:47:18Z"
                            },
                            "projectId": "39387120-0a23-41bf-8d53-9048e6080dd1",
                            "retention": 604800000000000,
                            "server": "7.2.3",
                            "size": 127569288,
                            "tenantId": "10f52cbd-8367-47f8-a840-e692339b4b04",
                            "type": "on_demand"
                          },
                          "permissions": {
                            "create": {
                              "accessible": true
                            },
                            "delete": {
                              "accessible": true
                            },
                            "read": {
                              "accessible": true
                            },
                            "update": {
                              "accessible": true
                            }
                          }
                        },
                        {
                          "data": {
                            "clusterId": "49b2c7f7-9612-4c99-b202-d4067b276b89",
                            "createdAt": "2023-11-25T13:02:32.409980126Z",
                            "expiration": "2023-12-25T13:02:32.409980126Z",
                            "id": "42bf3a6c-ebd9-495f-a391-57708b8c267d",
                            "progress": {
                              "status": "pending",
                              "time": "2024-01-18T10:47:18Z"
                            },
                            "projectId": "39387120-0a23-41bf-8d53-9048e6080dd1",
                            "retention": 604800000000000,
                            "server": "7.2.3",
                            "size": 127569288,
                            "tenantId": "10f52cbd-8367-47f8-a840-e692339b4b04",
                            "type": "scheduled"
                          },
                          "permissions": {
                            "create": {
                              "accessible": true
                            },
                            "delete": {
                              "accessible": true
                            },
                            "read": {
                              "accessible": true
                            },
                            "update": {
                              "accessible": true
                            }
                          }
                        }
                      ],
                      "permissions": {
                        "create": {
                          "accessible": true
                        },
                        "delete": {
                          "accessible": true
                        },
                        "read": {
                          "accessible": true
                        },
                        "update": {
                          "accessible": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/cloudsnapshotbackups/{backupId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "backupId",
          "description": "The GUID4 ID of the backup.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "put": {
        "summary": "Edit Backup Retention",
        "description": "Edits the retention time for a backup.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "operationId": "editCloudSnapshotBackupRetention",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "retention": {
                    "type": "integer",
                    "description": "Represents interval in hours to retain the backup.",
                    "example": 730
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully edited backup retention time."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Backup",
        "description": "Deletes the backup.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "operationId": "deleteCloudSnapshotBackup",
        "responses": {
          "202": {
            "description": "Successfully deleted the backup.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/cloudsnapshotbackups/{backupId}/restore": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "backupId",
          "description": "The GUID4 ID of the backup.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Restore Backup",
        "description": "Creates a restore job for a backup immediately.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "operationId": "restore",
        "responses": {
          "202": {
            "description": "Successfully triggered a restore of a cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "restoreId": {
                      "type": "string",
                      "example": "53b504e2-3f1e-4601-9e44-c04aa0195057",
                      "description": "The id is a unique identifier for a restore.\n"
                    }
                  }
                },
                "examples": {
                  "createCloudSnapshotRestore": {
                    "value": {
                      "restoreId": "IS9DrRsw4KWFS72Zhbj4xmhllHvPcdCL"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/cloudsnapshotbackups": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "List Cloud Snapshot Backups at the Project Level",
        "description": "Lists cloud snapshot backups associated with operational clusters within a specific project.\n\nThe \"most recent\" and \"oldest\" backup fields do not include backups that are in a queued state. Only backups that are actively being processed, successfully completed, or marked as failed are returned.\n\nFor detailed guidance on backup and restore functionality, please refer to [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n\nThe provided API key must have at least one of the following roles.\n- Organization Owner\n- Project Owner\n- Project Manager\n\nFor more information about roles and access, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "operationId": "listProjectLevelCloudSnapshotBackups",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "Specifies the sorting criteria for the results, including the key by which the results should be ordered. Valid fields to sort the results include the following. - **creationDateTime** - **createdBy** - **currentStatus** - **cloudProvider** - **region**\nProvide the desired fields in the order of sorting preference.\n",
            "example": [
              "creationDateTime"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "creationDateTime",
                  "createdBy",
                  "currentStatus",
                  "cloudProvider",
                  "region"
                ]
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the list of backups associated with the clusters within the project.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "clusterId": {
                            "type": "string",
                            "description": "The unique identifier of the cluster.",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "clusterName": {
                            "type": "string",
                            "description": "The name assigned to the cluster.",
                            "example": "example-cluster"
                          },
                          "creationDateTime": {
                            "type": "string",
                            "description": "The date and time when the cluster was created, in ISO 8601 format.",
                            "format": "date-time",
                            "example": "2024-11-14T14:14:22.122057304Z"
                          },
                          "createdBy": {
                            "type": "string",
                            "description": "The identifier or name of the user who created the cluster.",
                            "example": "user@company.com"
                          },
                          "currentStatus": {
                            "type": "string",
                            "description": "The current operational status of the cluster (e.g., healthy, destroyed, scaling).",
                            "example": "healthy"
                          },
                          "cloudProvider": {
                            "type": "string",
                            "description": "The cloud service provider hosting the cluster (e.g., AWS, Azure, GCP).",
                            "example": "hostedAWS"
                          },
                          "region": {
                            "type": "string",
                            "description": "The geographical region where the cluster is deployed.",
                            "example": "us-east-1"
                          },
                          "mostRecentSnapshot": {
                            "type": "object",
                            "properties": {
                              "clusterId": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "expiration": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "id": {
                                "type": "string"
                              },
                              "progress": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string"
                                  },
                                  "time": {
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                }
                              },
                              "projectId": {
                                "type": "string"
                              },
                              "appService": {
                                "type": "string",
                                "description": "The version of any App Services which are associated with the cluster.",
                                "example": "3.141.5"
                              },
                              "cmek": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "id"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "UUID of the customer managed encryption key.",
                                      "example": "ffffffff-aaaa-1414-eeee-000000000000"
                                    },
                                    "providerId": {
                                      "type": "string",
                                      "description": "ProviderId is the ID of the customer managed encryption key as stored by the cloud provider.",
                                      "example": "arn:aws:kms:us-west-1:123456789012:key/abcd1234-a123-456a-a12b-a123b4cd56ef"
                                    }
                                  }
                                }
                              },
                              "retention": {
                                "type": "integer"
                              },
                              "server": {
                                "type": "object",
                                "properties": {
                                  "version": {
                                    "type": "string",
                                    "description": "Version of the Couchbase Server to be installed in the cluster. Refer to documentation [here](https://docs.couchbase.com/cloud/clusters/upgrade-database.html#server-version-maintenance-support) for list of supported versions. The latest Couchbase Server version will be deployed by default.",
                                    "example": "7.1"
                                  }
                                }
                              },
                              "databaseSize": {
                                "type": "integer",
                                "format": "uint64"
                              },
                              "tenantId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "description": "Details of the most recent snapshot backup associated with the cluster."
                          },
                          "oldestSnapshot": {
                            "type": "object",
                            "properties": {
                              "clusterId": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "expiration": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "id": {
                                "type": "string"
                              },
                              "progress": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string"
                                  },
                                  "time": {
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                }
                              },
                              "projectId": {
                                "type": "string"
                              },
                              "appService": {
                                "type": "string",
                                "description": "The version of any App Services which are associated with the cluster.",
                                "example": "3.141.5"
                              },
                              "cmek": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "id"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "UUID of the customer managed encryption key.",
                                      "example": "ffffffff-aaaa-1414-eeee-000000000000"
                                    },
                                    "providerId": {
                                      "type": "string",
                                      "description": "ProviderId is the ID of the customer managed encryption key as stored by the cloud provider.",
                                      "example": "arn:aws:kms:us-west-1:123456789012:key/abcd1234-a123-456a-a12b-a123b4cd56ef"
                                    }
                                  }
                                }
                              },
                              "retention": {
                                "type": "integer"
                              },
                              "server": {
                                "type": "object",
                                "properties": {
                                  "version": {
                                    "type": "string",
                                    "description": "Version of the Couchbase Server to be installed in the cluster. Refer to documentation [here](https://docs.couchbase.com/cloud/clusters/upgrade-database.html#server-version-maintenance-support) for list of supported versions. The latest Couchbase Server version will be deployed by default.",
                                    "example": "7.1"
                                  }
                                }
                              },
                              "databaseSize": {
                                "type": "integer",
                                "format": "uint64"
                              },
                              "tenantId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "description": "Details of the oldest snapshot backup associated with the cluster."
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/cloudsnapshotbackups/{backupId}/clone": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "backupId",
          "description": "The GUID4 ID of the backup.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Clone Cluster Backup",
        "description": "Clones the cluster backup into a new cluster.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "operationId": "clone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "cloudProvider",
                  "availability",
                  "support"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the cloned cluster (up to 256 characters).",
                    "example": "Test Clone Cluster",
                    "maxLength": 256
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the cloned cluster (up to 1024 characters).",
                    "example": "This is a cloned cluster.",
                    "maxLength": 1024
                  },
                  "cloudProvider": {
                    "type": "object",
                    "description": "The cloud provider where the cluster will be hosted.\nFor information about providers and supported regions, see:\n\n- [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html)\n\n- [Google Cloud Platform](https://docs.couchbase.com/cloud/reference/gcp.html)\n\n- [Microsoft Azure](https://docs.couchbase.com/cloud/reference/azure.html)\n",
                    "required": [
                      "type",
                      "region"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Cloud provider type. Note: For singleNode cluster, only AWS type cloud provider is allowed.\n\n1. `aws`: Amazon Web Services\n\n2. `gcp`: Google Cloud Platform\n\n3. `azure`: Microsoft Azure\n",
                        "enum": [
                          "aws",
                          "gcp",
                          "azure"
                        ],
                        "example": "aws"
                      },
                      "region": {
                        "type": "string",
                        "description": "Cloud provider region, for example `us-west-2`.",
                        "example": "us-east-1"
                      },
                      "cidr": {
                        "type": "string",
                        "pattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}$",
                        "description": "CIDR block for Cloud Provider.",
                        "example": "10.1.30.0/23"
                      }
                    }
                  },
                  "availability": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Availability zone type, either 'single' or 'multi'. Availability zone type allowed for singleNode cluster is only 'single'.",
                        "example": "single",
                        "enum": [
                          "single",
                          "multi"
                        ]
                      }
                    }
                  },
                  "support": {
                    "type": "object",
                    "required": [
                      "plan"
                    ],
                    "properties": {
                      "plan": {
                        "type": "string",
                        "description": "Plan type, either 'Basic', 'Developer Pro', or 'Enterprise'. \nPlan type allowed for singleNode cluster is either 'Basic', or 'Developer Pro'. \nIn case of 'Basic' plan timezone field value is ignored.\n\nFree tier plan is automatically assigned to free tier clusters.\n",
                        "enum": [
                          "free",
                          "basic",
                          "developer pro",
                          "enterprise"
                        ],
                        "example": "basic"
                      },
                      "timezone": {
                        "type": "string",
                        "description": "The standard timezone for the cluster. Should be the TZ identifier.",
                        "example": "ET",
                        "enum": [
                          "ET",
                          "GMT",
                          "IST",
                          "PT"
                        ]
                      }
                    }
                  },
                  "zones": {
                    "description": "Zones is the cloud services provider availability zones for the cloned cluster. Currently Supported only for single AZ clusters so only 1 zone is allowed in list.",
                    "type": "array",
                    "example": [
                      "use1-az1"
                    ],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "examples": {
                "createCloudSnapshotClone": {
                  "value": {
                    "name": "Cloned Cluster",
                    "description": "This is a cloned cluster.",
                    "cloudProvider": {
                      "type": "aws",
                      "region": "us-east-1",
                      "cidr": "10.1.30.0/23"
                    },
                    "availability": {
                      "type": "single"
                    },
                    "zones": [
                      "use1-az1"
                    ],
                    "support": {
                      "plan": "developer pro",
                      "timezone": "PT"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successfully triggered a clone of a cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "restoreId": {
                      "type": "string",
                      "example": "53b504e2-3f1e-4601-9e44-c04aa0195057",
                      "description": "The id is a unique identifier for a restore.\n"
                    },
                    "clusterId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The id is a unique identifier for a cluster.\n"
                    }
                  }
                },
                "examples": {
                  "createCloudSnapshotClone": {
                    "value": {
                      "restoreId": "IS9DrRsw4KWFS72Zhbj4xmhllHvPcdCL",
                      "clusterId": "IS9DrRsw4KWFS72Zhbj4xmhllHvPcdCL"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/cloudsnapshotbackupschedule": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "put": {
        "summary": "Upsert Backup Schedule",
        "description": "Creates or updates a cloud snapshot backup schedule for a cluster.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Cloud Snapshot Backups Schedule"
        ],
        "operationId": "upsertCloudSnapshotBackupSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "interval": {
                    "type": "integer",
                    "description": "Represents the time interval.",
                    "example": 1
                  },
                  "retention": {
                    "type": "integer",
                    "description": "Represents interval in hours to retain the backup.",
                    "example": 24
                  },
                  "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Represents the start time in ISO 8601 format.",
                    "example": "2024-01-05T16:00:00+00:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully created or updated a backup schedule."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Backup Schedule",
        "description": "Retrieves the cloud snapshot backup schedule for a cluster.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Cloud Snapshot Backups Schedule"
        ],
        "operationId": "getCloudSnapshotBackupSchedule",
        "responses": {
          "200": {
            "description": "Successfully retrieved the backup schedule.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "interval": {
                      "type": "integer",
                      "description": "Represents the time interval.",
                      "example": 1
                    },
                    "retention": {
                      "type": "integer",
                      "description": "Represents interval in hours to retain the backup.",
                      "example": 24
                    },
                    "startTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Represents the start time in ISO 8601 format.",
                      "example": "2024-01-05T16:00:00+00:00"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Cluster does not have a defined backup schedule."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Backup Schedule",
        "description": "Deletes the backup schedule for a cluster.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Cloud Snapshot Backups Schedule"
        ],
        "operationId": "deleteCloudSnapshotBackupSchedule",
        "responses": {
          "204": {
            "description": "Successfully deleted the backup schedule."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}/backup/schedules": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "bucketId",
          "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "dGVzdA"
          }
        }
      ],
      "post": {
        "summary": "Create Backup Schedule",
        "description": "Creates a scheduled backup for a bucket.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Backup Schedule (Bucket)"
        ],
        "operationId": "postBackupSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Backup schedule type.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "weekly"
                    ],
                    "example": "weekly"
                  },
                  "weeklySchedule": {
                    "type": "object",
                    "description": "Schedule a full backup once a week with regular incrementals.",
                    "required": [
                      "dayOfWeek",
                      "startAt",
                      "incrementalEvery",
                      "retentionTime",
                      "costOptimizedRetention"
                    ],
                    "properties": {
                      "dayOfWeek": {
                        "type": "string",
                        "description": "Day of the week for the backup.",
                        "enum": [
                          "sunday",
                          "monday",
                          "tuesday",
                          "wednesday",
                          "thursday",
                          "friday",
                          "saturday"
                        ],
                        "example": "sunday"
                      },
                      "startAt": {
                        "type": "integer",
                        "description": "Start at hour (in 24-Hour format).",
                        "enum": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7,
                          8,
                          9,
                          10,
                          11,
                          12,
                          13,
                          14,
                          15,
                          16,
                          17,
                          18,
                          19,
                          20,
                          21,
                          22,
                          23
                        ]
                      },
                      "incrementalEvery": {
                        "type": "integer",
                        "description": "Interval in hours for incremental backup.",
                        "enum": [
                          1,
                          2,
                          4,
                          6,
                          8,
                          12,
                          24
                        ],
                        "example": 4
                      },
                      "retentionTime": {
                        "type": "string",
                        "description": "Retention time in days.",
                        "enum": [
                          "30days",
                          "60days",
                          "90days",
                          "180days",
                          "1year",
                          "2years",
                          "3years",
                          "4years",
                          "5years"
                        ],
                        "example": "90days"
                      },
                      "costOptimizedRetention": {
                        "type": "boolean",
                        "description": "Optimize backup retention to reduce total cost of ownership (TCO). This gives the option to keep all but the last backup cycle of the month for thirty days; the last cycle will be kept for the defined retention period. To learn more, see [Cost Optimized Retention Policy](https://docs.couchbase.com/cloud/clusters/backup-restore.html#cost-optimized-retention-policy).",
                        "example": false
                      }
                    }
                  }
                }
              },
              "examples": {
                "CreateScheduledBackup": {
                  "value": {
                    "type": "weekly",
                    "weeklySchedule": {
                      "dayOfWeek": "sunday",
                      "startAt": 10,
                      "incrementalEvery": 4,
                      "retentionTime": "90days",
                      "costOptimizedRetention": false
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successfully created a scheduled backup for a bucket."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Backup Schedule",
        "description": "Fetched the backup schedule for a bucket in a cluster.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Backup Schedule (Bucket)"
        ],
        "operationId": "getBackupSchedule",
        "responses": {
          "200": {
            "description": "Successfully listed all backups for a bucket under the cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Backup schedule type.",
                  "type": "object",
                  "required": [
                    "type",
                    "clusterID",
                    "bucketId",
                    "weeklySchedule"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "weekly"
                    },
                    "clusterID": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the cluster."
                    },
                    "bucketId": {
                      "type": "string",
                      "example": "dGVzdA",
                      "description": "The ID of the bucket. This is the Base64 encoding of the bucket name."
                    },
                    "weeklySchedule": {
                      "type": "object",
                      "description": "Schedule a full backup once a week with regular incrementals.",
                      "required": [
                        "dayOfWeek",
                        "startAt",
                        "incrementalEvery",
                        "retentionTime",
                        "costOptimizedRetention"
                      ],
                      "properties": {
                        "dayOfWeek": {
                          "type": "string",
                          "description": "Day of the week for the backup.",
                          "example": "sunday"
                        },
                        "startAt": {
                          "type": "integer",
                          "description": "Start at hour (in 24-Hour format).",
                          "example": 10
                        },
                        "incrementalEvery": {
                          "type": "integer",
                          "description": "Interval in hours for incremental backup.",
                          "example": 4
                        },
                        "retentionTime": {
                          "type": "string",
                          "description": "Retention time in days.",
                          "example": "90days"
                        },
                        "costOptimizedRetention": {
                          "type": "boolean",
                          "description": "Optimize backup retention to reduce total cost of ownership (TCO). This gives the option to keep all but the last backup cycle of the month for thirty days; the last cycle will be kept for the defined retention period. To learn more, see [Cost Optimized Retention Policy](https://docs.couchbase.com/cloud/clusters/backup-restore.html#cost-optimized-retention-policy).",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Backup Schedule",
        "description": "Updates an existing backup schedule.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Backup Schedule (Bucket)"
        ],
        "operationId": "putBackupSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Backup schedule type.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "weekly"
                    ],
                    "example": "weekly"
                  },
                  "weeklySchedule": {
                    "type": "object",
                    "description": "Schedule a full backup once a week with regular incrementals.",
                    "required": [
                      "dayOfWeek",
                      "startAt",
                      "incrementalEvery",
                      "retentionTime",
                      "costOptimizedRetention"
                    ],
                    "properties": {
                      "dayOfWeek": {
                        "type": "string",
                        "description": "Day of the week for the backup.",
                        "enum": [
                          "sunday",
                          "monday",
                          "tuesday",
                          "wednesday",
                          "thursday",
                          "friday",
                          "saturday"
                        ],
                        "example": "sunday"
                      },
                      "startAt": {
                        "type": "integer",
                        "description": "Start at hour (in 24-Hour format).",
                        "enum": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7,
                          8,
                          9,
                          10,
                          11,
                          12,
                          13,
                          14,
                          15,
                          16,
                          17,
                          18,
                          19,
                          20,
                          21,
                          22,
                          23
                        ]
                      },
                      "incrementalEvery": {
                        "type": "integer",
                        "description": "Interval in hours for incremental backup.",
                        "enum": [
                          1,
                          2,
                          4,
                          6,
                          8,
                          12,
                          24
                        ],
                        "example": 4
                      },
                      "retentionTime": {
                        "type": "string",
                        "description": "Retention time in days.",
                        "enum": [
                          "30days",
                          "60days",
                          "90days",
                          "180days",
                          "1year",
                          "2years",
                          "3years",
                          "4years",
                          "5years"
                        ],
                        "example": "90days"
                      },
                      "costOptimizedRetention": {
                        "type": "boolean",
                        "description": "Optimize backup retention to reduce total cost of ownership (TCO). This gives the option to keep all but the last backup cycle of the month for thirty days; the last cycle will be kept for the defined retention period. To learn more, see [Cost Optimized Retention Policy](https://docs.couchbase.com/cloud/clusters/backup-restore.html#cost-optimized-retention-policy).",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully updated backup schedule."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Backup Schedule",
        "description": "Deletes an existing backup schedule\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Backup Schedule (Bucket)"
        ],
        "operationId": "deleteBackupSchedule",
        "responses": {
          "202": {
            "description": "Successfully deleted the backup schedule."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}/backup/cycles": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "bucketId",
          "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "dGVzdA"
          }
        }
      ],
      "get": {
        "summary": "List Cycles",
        "description": "Lists the cycles for a bucket in a cluster.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Backup Schedule (Bucket)"
        ],
        "operationId": "listCycles",
        "parameters": [
          {
            "name": "startDate",
            "description": "Filters bucket backups beginning from the start date.\nSpecify the start date to retrieve relevant bucket backups from start date.\n",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Filter to fetch bucket backups.",
              "example": "2023-07-19"
            }
          },
          {
            "name": "endDate",
            "description": "Filters bucket backups till the end date.\nSpecify the end date to retrieve relevant bucket backups till end date.\n",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Filter to fetch bucket backups.",
              "example": "2023-07-21"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed all cycles for a bucket in the cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "cycleID",
                          "createdAt"
                        ],
                        "properties": {
                          "cycleID": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The ID of the cycle."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The RFC3339 timestamp representing the time at which first backup was created in the cycle.\n",
                            "example": "2021-09-01T12:34:56Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}/backup/cycles/{cycleId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "bucketId",
          "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "dGVzdA"
          }
        },
        {
          "name": "cycleId",
          "description": "The GUID4 ID of the cycle.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "List Backups",
        "description": "Lists the backups for a cycle in a bucket.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Backup Schedule (Bucket)"
        ],
        "operationId": "listBackups",
        "responses": {
          "200": {
            "description": "Successfully listed the backups for a cycle in a bucket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "clusterID",
                          "tenantID",
                          "projectID",
                          "cycleID",
                          "status",
                          "method",
                          "bucketName",
                          "bucketID",
                          "source",
                          "provider",
                          "stats",
                          "elapsedTimeInSeconds",
                          "scheduleInfo"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the backup created."
                          },
                          "clusterID": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the cluster."
                          },
                          "tenantID": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the organization."
                          },
                          "projectID": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the project."
                          },
                          "cycleID": {
                            "type": "string",
                            "description": "The ID of the cycle this backup belongs to."
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The RFC3339 timestamp representing the time at which backup was created.\n",
                            "example": "2021-09-01T12:34:56Z"
                          },
                          "restoreBefore": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The RFC3339 timestamp representing the time at which backup will expire.\n",
                            "example": "2021-09-02T12:34:56Z"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the backup.",
                            "enum": [
                              "pending",
                              "ready",
                              "failed"
                            ],
                            "example": "pending"
                          },
                          "method": {
                            "type": "string",
                            "description": "The mechanism of the backup.\n1. Incremental backups include the data that has changed since the last scheduled backup.\n2. Full backup includes all bucket data from the time the backup was created.\n",
                            "enum": [
                              "incremental",
                              "full"
                            ],
                            "example": "incremental"
                          },
                          "bucketName": {
                            "type": "string",
                            "description": "The name of the bucket for which the backup belongs to.",
                            "example": "My-First-Bucket"
                          },
                          "bucketID": {
                            "type": "string",
                            "example": "dGVzdA",
                            "description": "The ID of the bucket.This is the base64 encoding of the bucket name."
                          },
                          "source": {
                            "type": "string",
                            "description": "The way a backup job was initiated.\n1. Manual represents a manually triggered backup job or on-demand.\n2. Scheduled represents a backup job created from a schedule.\n",
                            "enum": [
                              "manual",
                              "scheduled"
                            ],
                            "example": "scheduled"
                          },
                          "provider": {
                            "type": "string",
                            "description": "The cloud provider where the cluster is hosted.",
                            "example": "aws"
                          },
                          "stats": {
                            "description": "Represents various backup level data that couchbase provides. To learn more, see [Backup Summary](https://docs.couchbase.com/cloud/clusters/manage-backup.html#backup-summary)",
                            "type": "object",
                            "required": [
                              "cbas",
                              "event",
                              "fts",
                              "gsi",
                              "tombstones",
                              "mutations",
                              "items",
                              "sizeInMb"
                            ],
                            "properties": {
                              "sizeInMb": {
                                "type": "number",
                                "format": "float",
                                "description": "Backup size in megabytes."
                              },
                              "items": {
                                "type": "integer",
                                "description": "The number of items saved during the backup.",
                                "example": 150
                              },
                              "mutations": {
                                "type": "integer",
                                "description": "The number of mutations saved during the backup.",
                                "example": 150
                              },
                              "tombstones": {
                                "type": "integer",
                                "description": "The number of tombstones saved during the backup.",
                                "example": 4
                              },
                              "gsi": {
                                "type": "integer",
                                "description": "The number of global secondary indexes saved during the backup.",
                                "example": 46
                              },
                              "fts": {
                                "type": "integer",
                                "description": "The number of full text search entities saved during the backup.",
                                "example": 30
                              },
                              "cbas": {
                                "type": "integer",
                                "description": "The number of analytics entities saved during the backup.",
                                "example": 30
                              },
                              "event": {
                                "type": "integer",
                                "description": "The number of event entities saved during the backup.",
                                "example": 25
                              }
                            }
                          },
                          "elapsedTimeInSeconds": {
                            "type": "integer",
                            "description": "The amount of seconds that have elapsed between the creation and completion of the backup.",
                            "example": 30
                          },
                          "scheduleInfo": {
                            "description": "Represents the schedule information of the backup.",
                            "type": "object",
                            "required": [
                              "backupType",
                              "backupTime",
                              "increment",
                              "retention"
                            ],
                            "properties": {
                              "backupType": {
                                "type": "string",
                                "description": "Represents whether the backup is a Weekly or Daily backup.",
                                "example": "Weekly"
                              },
                              "backupTime": {
                                "type": "string",
                                "description": "The timestamp indicating the backup created time.",
                                "example": "2023-07-13 20:26:54.990864215 +0000 UTC"
                              },
                              "increment": {
                                "type": "integer",
                                "description": "Represents interval in hours for incremental backup.",
                                "example": 4
                              },
                              "retention": {
                                "type": "string",
                                "description": "Represents retention time in days.",
                                "example": "90days"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/backups/{backupId}/restore": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "backupId",
          "description": "The GUID4 ID of the backup.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Restore Backup",
        "description": "Creates an on-demand restore job for a backup immediately.\n\nTo learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Backups & Restore (Bucket)"
        ],
        "operationId": "postRestore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "targetClusterID",
                  "sourceClusterID",
                  "backupID",
                  "services"
                ],
                "properties": {
                  "targetClusterID": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ffffffff-aaaa-1414-eeee-000000000000",
                    "description": "The ID of the target cluster to restore to."
                  },
                  "sourceClusterID": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ffffffff-aaaa-1414-eeee-000000000000",
                    "description": "The ID of the source cluster the restore is based on."
                  },
                  "backupID": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ffffffff-aaaa-1414-eeee-000000000000",
                    "description": "The backup record ID that contains the backup to restore from."
                  },
                  "services": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "data",
                        "query"
                      ]
                    },
                    "example": [
                      "data",
                      "query"
                    ]
                  },
                  "forceUpdates": {
                    "type": "boolean",
                    "example": true,
                    "description": "Forces data in the Couchbase cluster to be overwritten even if the data in the cluster is newer."
                  },
                  "autoRemoveCollections": {
                    "type": "boolean",
                    "example": true,
                    "description": "Automatically delete scopes/collections which are known to be deleted in the backup."
                  },
                  "filterKeys": {
                    "type": "string",
                    "example": "",
                    "description": "Only restore data where the key matches a particular regular expression."
                  },
                  "filterValues": {
                    "type": "string",
                    "example": "",
                    "description": "Only restore data where the value matches a particular regular expression."
                  },
                  "includeData": {
                    "type": "string",
                    "example": "bucket-1.scope1",
                    "description": "Restores only the data specified here."
                  },
                  "excludeData": {
                    "type": "string",
                    "example": "bucket-1.scope1.coll1",
                    "description": "Skips restoring the data specified here."
                  },
                  "mapData": {
                    "type": "string",
                    "example": "bucket1=new1",
                    "description": "Specified when you want to restore source data into a different location."
                  },
                  "replaceTTL": {
                    "type": "string",
                    "description": "Sets a new expiration (time-to-live) value for the specified keys.",
                    "enum": [
                      "none",
                      "all",
                      "expired"
                    ],
                    "example": "all"
                  },
                  "replaceTTLWith": {
                    "type": "string",
                    "description": "Updates the expiration for the keys.",
                    "example": "2021-09-01T12:34:56Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successfully created an on-demand restore for a bucket."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}/scopes": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "bucketId",
          "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "dGVzdA"
          }
        }
      ],
      "post": {
        "summary": "Create Scope",
        "description": "Creates a new scope in a bucket.\n\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n\n In order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "operationId": "postScope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the scope. The name should adhere to the following rules:\n\n1. The name must be between 1 and 251 characters in length.\n\n2. The name can contain only the characters A-Z, a-z, 0-9, and the symbols _, -, and %.\n\n3. The name cannot start with _ or %.\n\nNote that scope and collection names are case-sensitive.\n",
                    "example": "my-scope"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a scope."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The client does not have the valid credentials to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "httpStatusCode": 401,
                      "code": 1001,
                      "message": "The request is unauthorized. Please ensure you have proper authentication credentials and try again.",
                      "hint": "The request is unauthorized. Please ensure you have proper authentication credentials and try again."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Scopes",
        "description": "Lists all the scopes in the bucket.\n\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "operationId": "getScopes",
        "responses": {
          "200": {
            "description": "Successfully listed all the scopes under the bucket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "scopes"
                  ],
                  "properties": {
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "collections"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the scope.",
                            "example": "inventory"
                          },
                          "collections": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the collection.",
                                  "example": "airport"
                                },
                                "maxTTL": {
                                  "type": "integer",
                                  "description": "Max TTL of the collection."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The client does not have the valid credentials to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "httpStatusCode": 401,
                      "code": 1001,
                      "message": "The request is unauthorized. Please ensure you have proper authentication credentials and try again.",
                      "hint": "The request is unauthorized. Please ensure you have proper authentication credentials and try again."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}/scopes/{scopeName}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "bucketId",
          "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "dGVzdA"
          }
        },
        {
          "name": "scopeName",
          "description": "The name of the scope.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "inventory"
          }
        }
      ],
      "get": {
        "summary": "Get Scope",
        "description": "Fetches the details of the given scope.\n\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\n To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "operationId": "getScopeByName",
        "responses": {
          "200": {
            "description": "Successfully fetched the scope by its name.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the scope.",
                      "example": "inventory"
                    },
                    "collections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the collection.",
                            "example": "airport"
                          },
                          "maxTTL": {
                            "type": "integer",
                            "description": "Max TTL of the collection."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The client does not have the valid credentials to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "httpStatusCode": 401,
                      "code": 1001,
                      "message": "The request is unauthorized. Please ensure you have proper authentication credentials and try again.",
                      "hint": "The request is unauthorized. Please ensure you have proper authentication credentials and try again."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Scope",
        "description": "Deletes an existing scope.\n\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "operationId": "deleteScopeByName",
        "responses": {
          "204": {
            "description": "Successfully deleted the scope by its name."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The client does not have the valid credentials to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "httpStatusCode": 401,
                      "code": 1001,
                      "message": "The request is unauthorized. Please ensure you have proper authentication credentials and try again.",
                      "hint": "The request is unauthorized. Please ensure you have proper authentication credentials and try again."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}/scopes/{scopeName}/collections": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "bucketId",
          "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "dGVzdA"
          }
        },
        {
          "name": "scopeName",
          "description": "The name of the scope.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "inventory"
          }
        }
      ],
      "post": {
        "summary": "Create Collection",
        "description": "Creates a new collection in a scope.\n\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "operationId": "postCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the collection. The name should adhere to the following rules:\n\n1. The name must be between 1 and 251 characters in length.\n\n2. The name can contain only the characters A-Z, a-z, 0-9, and the symbols _, -, and %.\n\n3. The name cannot start with _ or %.\n\nNote that scope and collection names are case-sensitive.\n",
                    "example": "my-collection"
                  },
                  "maxTTL": {
                    "type": "integer",
                    "description": "Specify the time to live (TTL) value in seconds. Defines the duration (Seconds) for which the documents in a collection are kept before automatic removal from the database. -  For server versions < 7.6.0, this is a non-negative value. Set to 0 to use the bucket's maxTTL value. -  For server versions >= 7.6.0, this value should be >= -1. Set to -1 to disable expiry for that collection. Set to 0 to use the bucket's maxTTL value. -  The maximum value that can be set for maxTTL is 2147483647.",
                    "example": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a collection."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The client does not have the valid credentials to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "httpStatusCode": 401,
                      "code": 1001,
                      "message": "The request is unauthorized. Please ensure you have proper authentication credentials and try again.",
                      "hint": "The request is unauthorized. Please ensure you have proper authentication credentials and try again."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Collections",
        "description": "Lists all the collections in a scope.\n\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "operationId": "getCollections",
        "responses": {
          "200": {
            "description": "Successfully listed all the collections in a scope in the bucket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the collection.",
                            "example": "airport"
                          },
                          "maxTTL": {
                            "type": "integer",
                            "description": "Max TTL of the collection."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The client does not have the valid credentials to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "httpStatusCode": 401,
                      "code": 1001,
                      "message": "The request is unauthorized. Please ensure you have proper authentication credentials and try again.",
                      "hint": "The request is unauthorized. Please ensure you have proper authentication credentials and try again."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}/scopes/{scopeName}/collections/{collectionName}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "bucketId",
          "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "dGVzdA"
          }
        },
        {
          "name": "scopeName",
          "description": "The name of the scope.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "inventory"
          }
        },
        {
          "name": "collectionName",
          "description": "The name of the collection.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "airline"
          }
        }
      ],
      "get": {
        "summary": "Get Collection",
        "description": "Fetches the details of the given collection.\n\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n- Project Viewer\n- Database Data Reader/Writer\n- Database Data Reader\n\n To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "operationId": "getCollectionByName",
        "responses": {
          "200": {
            "description": "Successfully fetched the collection by its name.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the collection.",
                      "example": "airport"
                    },
                    "maxTTL": {
                      "type": "integer",
                      "description": "Max TTL of the collection."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The client does not have the valid credentials to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "httpStatusCode": 401,
                      "code": 1001,
                      "message": "The request is unauthorized. Please ensure you have proper authentication credentials and try again.",
                      "hint": "The request is unauthorized. Please ensure you have proper authentication credentials and try again."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Collection",
        "description": "Updates an existing collection.\n\nThis operation is only allowed for a cluster with server version >= 7.6.0. A collection cannot be updated for the server versions lower than this.\n\nThis allows to update the maxTTL of the given collection.\n\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "operationId": "putCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "maxTTL"
                ],
                "properties": {
                  "maxTTL": {
                    "type": "integer",
                    "description": "Specify the new time to live (TTL) value in seconds.\n -  This value should be >= -1. Set to -1 to disable expiry for that collection.\n -  Set to 0 to use the bucket's maxTTL value.\n -  The maximum value that can be set for maxTTL is 2147483647.\n",
                    "example": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully accepted updated collection configuration."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Collection",
        "description": "Deletes an existing collection.\n\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "operationId": "deleteCollectionByName",
        "responses": {
          "204": {
            "description": "Successfully deleted the collection by its name."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The client does not have the valid credentials to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "httpStatusCode": 401,
                      "code": 1001,
                      "message": "The request is unauthorized. Please ensure you have proper authentication credentials and try again.",
                      "hint": "The request is unauthorized. Please ensure you have proper authentication credentials and try again."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/analyticsClusters": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}/activationState": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}/onOffSchedule": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}/allowedcidrs": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}/allowedcidrs/{allowedCidrId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "allowedCidrId",
          "description": "The GUID4 ID of the allowed CIDR.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}/cloudSnapshotBackups": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}/cloudSnapshotBackups/{backupId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "backupId",
          "description": "The GUID4 ID of the backup.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}/cloudSnapshotBackupSchedule": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}/cloudSnapshotBackups/{backupId}/restore": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "backupId",
          "description": "The GUID4 ID of the backup.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}/cloudSnapshotBackups/restores": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/networkPeers": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create Network Peering",
        "description": "Creates a network peering record for Capella. Capella does not support peering of networks between different cloud providers. For example, you cannot peer GCP VPC that hosts Capella cluster with an AWS VPC hosting an application.\n\n- Create configures a Couchbase Capella private networking with the cloud provider. Setting up a private network enables your application to interact with Couchbase Capella over a private connection by co-locating them through network peering.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Network Peers"
        ],
        "operationId": "postNetworkPeering",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "providerConfig",
                  "providerType"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the peering relationship. -  The name of the peering relationship must be at least 2 characters long. -  The name can not exceed 128 characters.",
                    "type": "string",
                    "example": "VPCPeerTest"
                  },
                  "providerType": {
                    "type": "string",
                    "description": "Type of the cloud provider for which the peering connection is created. Which are- 1. aws 2. gcp 3. azure",
                    "example": "aws"
                  },
                  "providerConfig": {
                    "description": "The config data for a peering relationship for a cluster on AWS, GCP, or Azure.\n",
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "accountId",
                          "vpcId",
                          "region",
                          "cidr"
                        ],
                        "description": "AWS config data required to establish a VPC peering relationship. Refer to the docs for other limitations to AWS VPC Peering - [ref](https://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-basics.html#vpc-peering-limitations).",
                        "properties": {
                          "accountId": {
                            "type": "string",
                            "description": "The numeric AWS Account ID or Owner ID.",
                            "example": "00000011123"
                          },
                          "vpcId": {
                            "type": "string",
                            "description": "The alphanumeric VPC ID which starts with \\\"vpc-\\\". This is also known as the networkId.",
                            "example": "vpc-141f0fffff141aa00"
                          },
                          "region": {
                            "type": "string",
                            "description": "The AWS region where your VPC is deployed.",
                            "example": "us-east-1"
                          },
                          "cidr": {
                            "type": "string",
                            "description": "The AWS VPC CIDR block of network in which your application runs. This cannot overlap with your Capella CIDR Block.",
                            "example": "10.0.0.0/16"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "networkName",
                          "cidr",
                          "projectId",
                          "serviceAccount"
                        ],
                        "description": "GCP config data required to establish a VPC peering relationship. Refer to the docs for other limitations to GCP VPC Peering - [ref](https://cloud.google.com/vpc/docs/vpc-peering).",
                        "properties": {
                          "networkName": {
                            "type": "string",
                            "description": "The name of the network that you want to peer with.",
                            "example": "cc-ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "cidr": {
                            "type": "string",
                            "description": "The GCP VPC CIDR block of network in which your application runs. This cannot overlap with your Capella CIDR Block.",
                            "example": "10.0.0.0/16"
                          },
                          "projectId": {
                            "type": "string",
                            "description": "The unique identifier for your GCP project.",
                            "example": "rock-galaxy-123456"
                          },
                          "serviceAccount": {
                            "type": "string",
                            "description": "ServiceAccount created or assigned on the external VPC project. GCP Service Account with below permissions\n- DNS Admin\n- Compute.NetworkAdmin\nIt should be in the form of an email that is shown under `gcloud iam service-accounts list` command.\n[Reference](https://cloud.google.com/iam/docs/creating-managing-service-accounts#creating)\n",
                            "example": "service-account-name@project-id.iam.gserviceaccount.com"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "azureTenantId",
                          "subscriptionId",
                          "resourceGroup",
                          "vnetId",
                          "cidr"
                        ],
                        "description": "Azure config data required to establish a VNet peering relationship. Refer to the docs for other limitations to Azure VNet Peering - [ref](https://learn.microsoft.com/en-us/azure/virtual-network/virtual-network-peering-overview#constraints-for-peered-virtual-networks)",
                        "properties": {
                          "azureTenantId": {
                            "type": "string",
                            "description": "The tenant ID. To find your tenant ID, see [How to find your Azure Active Directory tenant ID](https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant).",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "subscriptionId": {
                            "type": "string",
                            "description": "The subscription ID. To find your subscription ID, see [Find your Azure subscription](https://learn.microsoft.com/en-us/azure/azure-portal/get-subscription-tenant-id#find-your-azure-subscription).",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "resourceGroup": {
                            "type": "string",
                            "description": "The resource group name holding the resource you’re connecting with Capella.",
                            "example": "sample-resource-group"
                          },
                          "vnetId": {
                            "description": "The VNet ID is the name of the virtual network peering in Azure.",
                            "type": "string",
                            "example": "sample-vnet"
                          },
                          "cidr": {
                            "type": "string",
                            "description": "The CIDR block from the virtual network that you created in Azure.",
                            "example": "10.2.0.0/16"
                          }
                        }
                      }
                    ],
                    "example": {
                      "accountID": "00000011123",
                      "vpcId": "vpc-141f0fffff141aa00",
                      "region": "us-east-1",
                      "cidr": "10.0.0.0/16"
                    }
                  }
                }
              },
              "examples": {
                "PostNetworkPeersAWS": {
                  "value": {
                    "name": "VPCPeerTestAWS",
                    "providerType": "aws",
                    "providerConfig": {
                      "accountID": 123456789110,
                      "vpcId": "vpc-00ff00ff00ff0f",
                      "region": "us-east-1",
                      "cidr": "10.1.0.0/23"
                    }
                  }
                },
                "PostNetworkPeersGCP": {
                  "value": {
                    "name": "VPCPeerTestGCP",
                    "providerType": "gcp",
                    "providerConfig": {
                      "networkName": "cc-ffffffff-aaaa-1414-eeee-000000000000",
                      "projectId": "test-00ff00ff00ff0fff",
                      "serviceAccount": "sa-ffffffff-eee-aa-test@test-00ff00ff00ff0fff.iam.gserviceaccount.com",
                      "cidr": "10.1.0.0/23"
                    }
                  }
                },
                "PostNetworkPeersAzure": {
                  "value": {
                    "name": "VnetPeerTestAzure",
                    "providerType": "azure",
                    "providerConfig": {
                      "azureTenantId": "ffffffff-aaaa-1414-eeee-000000000000",
                      "subscriptionId": "ffffffff-aaaa-1414-eeee-000000000000",
                      "resourceGroup": "sample-resource-group",
                      "vnetId": "sample-vnet",
                      "cidr": "10.1.0.0/23"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created network peering.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID is the unique UUID generated when a VPC record is created."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Network Peering Records",
        "description": "Lists all the network peering records.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Network Peers"
        ],
        "operationId": "listNetworkPeeringRecords",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **name**, **status**.",
            "example": [
              "name"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed all the network peering records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "status",
                          "providerConfig",
                          "audit"
                        ],
                        "properties": {
                          "id": {
                            "description": "The ID is the unique UUID generated when a VPC record is created.",
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000"
                          },
                          "name": {
                            "description": "Name of the peering relationship.",
                            "type": "string",
                            "example": "VPCPeerTest"
                          },
                          "status": {
                            "description": "Status communicates the state of the VPC peering relationship. It is the state and reasoning for VPC peer.",
                            "type": "object",
                            "properties": {
                              "state": {
                                "type": "string",
                                "example": "complete"
                              },
                              "reasoning": {
                                "type": "string",
                                "example": "sample_reasoning"
                              }
                            }
                          },
                          "providerConfig": {
                            "description": "This provides details about the configuration and the ID of the VPC peer on AWS, GCP, or Azure.\n",
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "providerId": {
                                    "description": "The ID of the VPC peer on AWS.",
                                    "type": "string",
                                    "example": "pcx-000000fff000fff"
                                  },
                                  "AWSConfig": {
                                    "type": "object",
                                    "required": [
                                      "accountId",
                                      "vpcId",
                                      "region",
                                      "cidr"
                                    ],
                                    "description": "AWS config data required to establish a VPC peering relationship. Refer to the docs for other limitations to AWS VPC Peering - [ref](https://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-basics.html#vpc-peering-limitations).",
                                    "properties": {
                                      "accountId": {
                                        "type": "string",
                                        "description": "The numeric AWS Account ID or Owner ID.",
                                        "example": "00000011123"
                                      },
                                      "vpcId": {
                                        "type": "string",
                                        "description": "The alphanumeric VPC ID which starts with \\\"vpc-\\\". This is also known as the networkId.",
                                        "example": "vpc-141f0fffff141aa00"
                                      },
                                      "region": {
                                        "type": "string",
                                        "description": "The AWS region where your VPC is deployed.",
                                        "example": "us-east-1"
                                      },
                                      "cidr": {
                                        "type": "string",
                                        "description": "The AWS VPC CIDR block of network in which your application runs. This cannot overlap with your Capella CIDR Block.",
                                        "example": "10.0.0.0/16"
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "providerId": {
                                    "description": "The ID of the VPC peer on GCP.",
                                    "type": "string",
                                    "example": "cc-ffffffff-aaaa-1414-eeee-000000000000-cc-ffffffff-aaaa-1414"
                                  },
                                  "GCPConfig": {
                                    "type": "object",
                                    "required": [
                                      "networkName",
                                      "cidr",
                                      "projectId",
                                      "serviceAccount"
                                    ],
                                    "description": "GCP config data required to establish a VPC peering relationship. Refer to the docs for other limitations to GCP VPC Peering - [ref](https://cloud.google.com/vpc/docs/vpc-peering).",
                                    "properties": {
                                      "networkName": {
                                        "type": "string",
                                        "description": "The name of the network that you want to peer with.",
                                        "example": "cc-ffffffff-aaaa-1414-eeee-000000000000"
                                      },
                                      "cidr": {
                                        "type": "string",
                                        "description": "The GCP VPC CIDR block of network in which your application runs. This cannot overlap with your Capella CIDR Block.",
                                        "example": "10.0.0.0/16"
                                      },
                                      "projectId": {
                                        "type": "string",
                                        "description": "The unique identifier for your GCP project.",
                                        "example": "rock-galaxy-123456"
                                      },
                                      "serviceAccount": {
                                        "type": "string",
                                        "description": "ServiceAccount created or assigned on the external VPC project. GCP Service Account with below permissions\n- DNS Admin\n- Compute.NetworkAdmin\nIt should be in the form of an email that is shown under `gcloud iam service-accounts list` command.\n[Reference](https://cloud.google.com/iam/docs/creating-managing-service-accounts#creating)\n",
                                        "example": "service-account-name@project-id.iam.gserviceaccount.com"
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "providerId": {
                                    "description": "The ID of the VNet peer on Azure.",
                                    "type": "string",
                                    "example": "ffffffff-aaaa-1414-eeee-000000000000"
                                  },
                                  "AzureConfig": {
                                    "type": "object",
                                    "required": [
                                      "azureTenantId",
                                      "subscriptionId",
                                      "resourceGroup",
                                      "vnetId",
                                      "cidr"
                                    ],
                                    "description": "Azure config data required to establish a VNet peering relationship. Refer to the docs for other limitations to Azure VNet Peering - [ref](https://learn.microsoft.com/en-us/azure/virtual-network/virtual-network-peering-overview#constraints-for-peered-virtual-networks)",
                                    "properties": {
                                      "azureTenantId": {
                                        "type": "string",
                                        "description": "The tenant ID. To find your tenant ID, see [How to find your Azure Active Directory tenant ID](https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant).",
                                        "example": "ffffffff-aaaa-1414-eeee-000000000000"
                                      },
                                      "subscriptionId": {
                                        "type": "string",
                                        "description": "The subscription ID. To find your subscription ID, see [Find your Azure subscription](https://learn.microsoft.com/en-us/azure/azure-portal/get-subscription-tenant-id#find-your-azure-subscription).",
                                        "example": "ffffffff-aaaa-1414-eeee-000000000000"
                                      },
                                      "resourceGroup": {
                                        "type": "string",
                                        "description": "The resource group name holding the resource you’re connecting with Capella.",
                                        "example": "sample-resource-group"
                                      },
                                      "vnetId": {
                                        "description": "The VNet ID is the name of the virtual network peering in Azure.",
                                        "type": "string",
                                        "example": "sample-vnet"
                                      },
                                      "cidr": {
                                        "type": "string",
                                        "description": "The CIDR block from the virtual network that you created in Azure.",
                                        "example": "10.2.0.0/16"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}/privateEndpointService": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}/privateEndpointService/endpointCommand": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}/privateEndpointService/endpoints": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}/privateEndpointService/endpoints/{endpointId}/associate": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "endpointId",
          "description": "The VPC endpoint ID.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "vpce-1234"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/analyticsClusters/{analyticsClusterId}/privateEndpointService/endpoints/{endpointId}/unassociate": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "analyticsClusterId",
          "description": "The GUID4 ID of the analytics cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "endpointId",
          "description": "The VPC endpoint ID.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "vpce-1234"
          }
        }
      ]
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/networkPeers/{peerId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "peerId",
          "description": "The ID of the network peer record.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Network Peering record",
        "description": "Fetches the details of the network peering meta data based on the peerID provided.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Network Peers"
        ],
        "operationId": "getNetworkPeeringRecord",
        "responses": {
          "200": {
            "description": "Successfully fetched the network peering meta data based on the peerID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "status",
                    "commands",
                    "providerConfig",
                    "audit"
                  ],
                  "properties": {
                    "id": {
                      "description": "The ID is the unique UUID generated when a VPC record is created.",
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000"
                    },
                    "name": {
                      "description": "Name of the peering relationship.",
                      "type": "string",
                      "example": "VPCPeerTest"
                    },
                    "status": {
                      "description": "Status communicates the state of the VPC peering relationship. It is the state and reasoning for VPC peer.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "type": "string",
                          "example": "complete"
                        },
                        "reasoning": {
                          "type": "string",
                          "example": "sample_reasoning"
                        }
                      }
                    },
                    "commands": {
                      "description": "Commands contains the list of commands that the user must execute in order to complete the association of the network. For Azure, please refer to the *Get Azure VNet Peering CLI Command* API to fetch the role assignment command to be run in the Azure CLI.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "providerConfig": {
                      "description": "This provides details about the configuration and the ID of the VPC peer on AWS, GCP, or Azure.\n",
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "providerId": {
                              "description": "The ID of the VPC peer on AWS.",
                              "type": "string",
                              "example": "pcx-000000fff000fff"
                            },
                            "AWSConfig": {
                              "type": "object",
                              "required": [
                                "accountId",
                                "vpcId",
                                "region",
                                "cidr"
                              ],
                              "description": "AWS config data required to establish a VPC peering relationship. Refer to the docs for other limitations to AWS VPC Peering - [ref](https://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-basics.html#vpc-peering-limitations).",
                              "properties": {
                                "accountId": {
                                  "type": "string",
                                  "description": "The numeric AWS Account ID or Owner ID.",
                                  "example": "00000011123"
                                },
                                "vpcId": {
                                  "type": "string",
                                  "description": "The alphanumeric VPC ID which starts with \\\"vpc-\\\". This is also known as the networkId.",
                                  "example": "vpc-141f0fffff141aa00"
                                },
                                "region": {
                                  "type": "string",
                                  "description": "The AWS region where your VPC is deployed.",
                                  "example": "us-east-1"
                                },
                                "cidr": {
                                  "type": "string",
                                  "description": "The AWS VPC CIDR block of network in which your application runs. This cannot overlap with your Capella CIDR Block.",
                                  "example": "10.0.0.0/16"
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "providerId": {
                              "description": "The ID of the VPC peer on GCP.",
                              "type": "string",
                              "example": "cc-ffffffff-aaaa-1414-eeee-000000000000-cc-ffffffff-aaaa-1414"
                            },
                            "GCPConfig": {
                              "type": "object",
                              "required": [
                                "networkName",
                                "cidr",
                                "projectId",
                                "serviceAccount"
                              ],
                              "description": "GCP config data required to establish a VPC peering relationship. Refer to the docs for other limitations to GCP VPC Peering - [ref](https://cloud.google.com/vpc/docs/vpc-peering).",
                              "properties": {
                                "networkName": {
                                  "type": "string",
                                  "description": "The name of the network that you want to peer with.",
                                  "example": "cc-ffffffff-aaaa-1414-eeee-000000000000"
                                },
                                "cidr": {
                                  "type": "string",
                                  "description": "The GCP VPC CIDR block of network in which your application runs. This cannot overlap with your Capella CIDR Block.",
                                  "example": "10.0.0.0/16"
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "The unique identifier for your GCP project.",
                                  "example": "rock-galaxy-123456"
                                },
                                "serviceAccount": {
                                  "type": "string",
                                  "description": "ServiceAccount created or assigned on the external VPC project. GCP Service Account with below permissions\n- DNS Admin\n- Compute.NetworkAdmin\nIt should be in the form of an email that is shown under `gcloud iam service-accounts list` command.\n[Reference](https://cloud.google.com/iam/docs/creating-managing-service-accounts#creating)\n",
                                  "example": "service-account-name@project-id.iam.gserviceaccount.com"
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "providerId": {
                              "description": "The ID of the VNet peer on Azure.",
                              "type": "string",
                              "example": "ffffffff-aaaa-1414-eeee-000000000000"
                            },
                            "AzureConfig": {
                              "type": "object",
                              "required": [
                                "azureTenantId",
                                "subscriptionId",
                                "resourceGroup",
                                "vnetId",
                                "cidr"
                              ],
                              "description": "Azure config data required to establish a VNet peering relationship. Refer to the docs for other limitations to Azure VNet Peering - [ref](https://learn.microsoft.com/en-us/azure/virtual-network/virtual-network-peering-overview#constraints-for-peered-virtual-networks)",
                              "properties": {
                                "azureTenantId": {
                                  "type": "string",
                                  "description": "The tenant ID. To find your tenant ID, see [How to find your Azure Active Directory tenant ID](https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant).",
                                  "example": "ffffffff-aaaa-1414-eeee-000000000000"
                                },
                                "subscriptionId": {
                                  "type": "string",
                                  "description": "The subscription ID. To find your subscription ID, see [Find your Azure subscription](https://learn.microsoft.com/en-us/azure/azure-portal/get-subscription-tenant-id#find-your-azure-subscription).",
                                  "example": "ffffffff-aaaa-1414-eeee-000000000000"
                                },
                                "resourceGroup": {
                                  "type": "string",
                                  "description": "The resource group name holding the resource you’re connecting with Capella.",
                                  "example": "sample-resource-group"
                                },
                                "vnetId": {
                                  "description": "The VNet ID is the name of the virtual network peering in Azure.",
                                  "type": "string",
                                  "example": "sample-vnet"
                                },
                                "cidr": {
                                  "type": "string",
                                  "description": "The CIDR block from the virtual network that you created in Azure.",
                                  "example": "10.2.0.0/16"
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Network Peering",
        "description": "Deletes the network peering relationship.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Network Peers"
        ],
        "operationId": "deleteNetworkPeering",
        "responses": {
          "204": {
            "description": "Successfully deleted the network peering relationship."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/alertIntegrations": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Create Alert Integration",
        "description": "Creates a new alert integration for a project.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Alert Integration"
        ],
        "operationId": "postAlertIntegration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "kind",
                  "name",
                  "config"
                ],
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "Type of alert integration, currently supports only 'webhook'.",
                    "example": "webhook",
                    "enum": [
                      "webhook"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the alert integration (up to 1024 characters).",
                    "example": "test alert 1",
                    "maxLength": 1024
                  },
                  "config": {
                    "type": "object",
                    "required": [
                      "webhook"
                    ],
                    "properties": {
                      "webhook": {
                        "type": "object",
                        "required": [
                          "method",
                          "url"
                        ],
                        "properties": {
                          "method": {
                            "type": "string",
                            "description": "Type of API method to be sent when alert is triggered, either 'POST' or 'PUT'.",
                            "example": "POST",
                            "enum": [
                              "POST",
                              "PUT"
                            ]
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "The base URL of the webhook integration.",
                            "example": "https://company.servicenow.com"
                          },
                          "token": {
                            "type": "string",
                            "example": "QktxVUtFU1dKV1FlJBYXdnTVlRemFZdlRDZTg6eFh4dzU4JUYjqdUwwYkJoTjZSTmlzRWFIRHF0b1h4a08yazBpQjJ1bms1OW4yTUhdsfRib3IhVQ==",
                            "description": "The bearer authentication token is a third-party token that you set for the alert notifications sent through the webhook integration.\n"
                          },
                          "basicAuth": {
                            "type": "object",
                            "required": [
                              "user",
                              "password"
                            ],
                            "properties": {
                              "user": {
                                "type": "string",
                                "description": "Authentication username of the alert API (up to 1024 characters).",
                                "example": "username80085",
                                "maxLength": 1024
                              },
                              "password": {
                                "type": "string",
                                "description": "Authentication password of the alert API (up to 1024 characters).",
                                "example": "yed69khj420_i",
                                "maxLength": 1024
                              }
                            }
                          },
                          "headers": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "exclude": {
                            "type": "object",
                            "properties": {
                              "clusters": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "format": "uuid",
                                "example": [
                                  "ffffffff-aaaa-1414-eeee-000000000000",
                                  "..."
                                ],
                                "description": "The list of cluster IDs of the clusters to be excluded from the alert integration."
                              },
                              "appServices": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "format": "uuid",
                                "example": [
                                  "ffffffff-aaaa-1414-eeee-000000000000",
                                  "..."
                                ],
                                "description": "The list of app service IDs of the app services to be excluded from the alert integration."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created an alert integration.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the alert integration created."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Alert Integrations",
        "description": "Lists all the alert integrations under the project.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Organization Member\n- Project Owner\n- Project Manager\n- Project Viewer\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Alert Integration"
        ],
        "operationId": "listAlertIntegrations",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **name**.",
            "example": [
              "name"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed all the alert integrations under the project.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "tenantId",
                          "kind",
                          "configKey",
                          "enabled",
                          "status",
                          "config",
                          "audit"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The ID of the alert integration created."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the alert integration (up to 1024 characters).",
                            "example": "test alert 1",
                            "maxLength": 1024
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The tenant ID to which the alert integration belongs to."
                          },
                          "projectId": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "The project ID to which the alert integration belongs to."
                          },
                          "kind": {
                            "type": "string",
                            "description": "Type of alert integration, currently supports only 'webhook'.",
                            "example": "webhook",
                            "enum": [
                              "webhook"
                            ]
                          },
                          "configKey": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000-alert-integration",
                            "description": "ConfigKey is the key that was used to store the alert integration config and secrets."
                          },
                          "status": {
                            "type": "string",
                            "example": "healthy",
                            "description": "Status is either healthy or unhealthy showing if the integration is functional or not."
                          },
                          "enabled": {
                            "type": "boolean",
                            "example": false,
                            "description": "Enables or disables the integration. Only 1 integration can be active at any time."
                          },
                          "config": {
                            "type": "object",
                            "required": [
                              "webhook"
                            ],
                            "properties": {
                              "webhook": {
                                "type": "object",
                                "required": [
                                  "method",
                                  "url"
                                ],
                                "properties": {
                                  "method": {
                                    "type": "string",
                                    "description": "The API method to use when sending alert notifications to the integrated service. Either 'POST' or 'PUT'.",
                                    "example": "POST",
                                    "enum": [
                                      "POST",
                                      "PUT"
                                    ]
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "The base URL of the webhook integration.",
                                    "example": "https://company.servicenow.com"
                                  },
                                  "headers": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "exclude": {
                                    "type": "object",
                                    "properties": {
                                      "clusters": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "format": "uuid",
                                        "example": [
                                          "ffffffff-aaaa-1414-eeee-000000000000",
                                          "..."
                                        ],
                                        "description": "The list of cluster IDs of the clusters to be excluded from the alert integration."
                                      },
                                      "appServices": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "format": "uuid",
                                        "example": [
                                          "ffffffff-aaaa-1414-eeee-000000000000",
                                          "..."
                                        ],
                                        "description": "The list of app service IDs of the app services to be excluded from the alert integration."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "audit": {
                            "type": "object",
                            "required": [
                              "createdBy",
                              "createdAt",
                              "modifiedBy",
                              "modifiedAt",
                              "version"
                            ],
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "modifiedBy": {
                                "type": "string",
                                "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                                "example": "ffffffff-aaaa-1414-eeee-000000000000"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                                "example": "2021-09-01T12:34:56Z"
                              },
                              "version": {
                                "type": "integer",
                                "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/alertIntegrations/{alertIntegrationId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "alertIntegrationId",
          "description": "The GUID4 ID of the alert integration.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Alert Integration",
        "description": "Fetches the details of the given alert integration.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Organization Member\n- Project Owner\n- Project Manager\n- Project Viewer\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Alert Integration"
        ],
        "operationId": "getAlertIntegrationByID",
        "responses": {
          "200": {
            "description": "Successfully fetched the alert integration based on the alertIntegrationId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "tenantId",
                    "kind",
                    "configKey",
                    "enabled",
                    "status",
                    "config",
                    "audit"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The ID of the alert integration created."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the alert integration (up to 1024 characters).",
                      "example": "test alert 1",
                      "maxLength": 1024
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The tenant ID to which the alert integration belongs to."
                    },
                    "projectId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "The project ID to which the alert integration belongs to."
                    },
                    "kind": {
                      "type": "string",
                      "description": "Type of alert integration, currently supports only 'webhook'.",
                      "example": "webhook",
                      "enum": [
                        "webhook"
                      ]
                    },
                    "configKey": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000-alert-integration",
                      "description": "ConfigKey is the key that was used to store the alert integration config and secrets."
                    },
                    "status": {
                      "type": "string",
                      "example": "healthy",
                      "description": "Status is either healthy or unhealthy showing if the integration is functional or not."
                    },
                    "enabled": {
                      "type": "boolean",
                      "example": false,
                      "description": "Enables or disables the integration. Only 1 integration can be active at any time."
                    },
                    "config": {
                      "type": "object",
                      "required": [
                        "webhook"
                      ],
                      "properties": {
                        "webhook": {
                          "type": "object",
                          "required": [
                            "method",
                            "url"
                          ],
                          "properties": {
                            "method": {
                              "type": "string",
                              "description": "The API method to use when sending alert notifications to the integrated service. Either 'POST' or 'PUT'.",
                              "example": "POST",
                              "enum": [
                                "POST",
                                "PUT"
                              ]
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL of the webhook integration.",
                              "example": "https://company.servicenow.com"
                            },
                            "headers": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "exclude": {
                              "type": "object",
                              "properties": {
                                "clusters": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "format": "uuid",
                                  "example": [
                                    "ffffffff-aaaa-1414-eeee-000000000000",
                                    "..."
                                  ],
                                  "description": "The list of cluster IDs of the clusters to be excluded from the alert integration."
                                },
                                "appServices": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "format": "uuid",
                                  "example": [
                                    "ffffffff-aaaa-1414-eeee-000000000000",
                                    "..."
                                  ],
                                  "description": "The list of app service IDs of the app services to be excluded from the alert integration."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "audit": {
                      "type": "object",
                      "required": [
                        "createdBy",
                        "createdAt",
                        "modifiedBy",
                        "modifiedAt",
                        "version"
                      ],
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The user who created the resource; this will be a UUID4 ID for standard\nusers and will be a string such as \"internal-support\" for internal\nCouchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was initially\ncreated.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "modifiedBy": {
                          "type": "string",
                          "description": "The user who last modified the resource; this will be a UUID4 ID for\nstandard users and wilmal be a string such as \"internal-support\" for\ninternal Couchbase support users.\n",
                          "example": "ffffffff-aaaa-1414-eeee-000000000000"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The RFC3339 timestamp associated with when the resource was last modified.\n",
                          "example": "2021-09-01T12:34:56Z"
                        },
                        "version": {
                          "type": "integer",
                          "description": "The version of the document. This value is incremented each time the\nresource is modified.\n",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Alert Integration",
        "description": "Update the details of the given alert integration.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Alert Integration"
        ],
        "operationId": "putAlertIntegration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "config"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the alert integration (up to 1024 characters).",
                    "example": "test alert 1",
                    "maxLength": 1024
                  },
                  "config": {
                    "type": "object",
                    "required": [
                      "webhook"
                    ],
                    "properties": {
                      "webhook": {
                        "type": "object",
                        "required": [
                          "method",
                          "url"
                        ],
                        "properties": {
                          "method": {
                            "type": "string",
                            "description": "Type of API method to be sent when alert is triggered, either 'POST' or 'PUT'.",
                            "example": "POST",
                            "enum": [
                              "POST",
                              "PUT"
                            ]
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "The base URL of the webhook integration.",
                            "example": "https://company.servicenow.com"
                          },
                          "token": {
                            "type": "string",
                            "example": "QktxVUtFU1dKV1FlJBYXdnTVlRemFZdlRDZTg6eFh4dzU4JUYjqdUwwYkJoTjZSTmlzRWFIRHF0b1h4a08yazBpQjJ1bms1OW4yTUhdsfRib3IhVQ==",
                            "description": "The bearer authentication token is a third-party token that you set for the alert notifications sent through the webhook integration.\n"
                          },
                          "basicAuth": {
                            "type": "object",
                            "required": [
                              "user",
                              "password"
                            ],
                            "properties": {
                              "user": {
                                "type": "string",
                                "description": "Authentication username of the alert API (up to 1024 characters).",
                                "example": "username80085",
                                "maxLength": 1024
                              },
                              "password": {
                                "type": "string",
                                "description": "Authentication password of the alert API (up to 1024 characters).",
                                "example": "yed69khj420_i",
                                "maxLength": 1024
                              }
                            }
                          },
                          "headers": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "exclude": {
                            "type": "object",
                            "properties": {
                              "clusters": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "format": "uuid",
                                "example": [
                                  "ffffffff-aaaa-1414-eeee-000000000000",
                                  "..."
                                ],
                                "description": "The list of cluster IDs of the clusters to be excluded from the alert integration."
                              },
                              "appServices": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "format": "uuid",
                                "example": [
                                  "ffffffff-aaaa-1414-eeee-000000000000",
                                  "..."
                                ],
                                "description": "The list of app service IDs of the app services to be excluded from the alert integration."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully updated the metadata for the alert integration."
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Returned when there is a mismatch with the Etag version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "PreconditionFailed": {
                    "value": {
                      "httpStatusCode": 412,
                      "code": 1012,
                      "message": "The request precondition failed. The resource state does not meet the conditions specified in the request headers.",
                      "hint": "Please Verify the precondition headers (e.g., If-Match, If-Unmodified-Since) and ensure they align with the current state of the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Alert Integration",
        "description": "Deletes an existing alert integration.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Alert Integration"
        ],
        "operationId": "deleteAlertIntegrationByID",
        "responses": {
          "204": {
            "description": "Successfully deleted the alert integration by its alertIntegrationId."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/alertIntegrationTest": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Test Alert Integration",
        "description": "Tests a new alert integration for a project.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n- Organization Owner\n- Project Owner\n- Project Manager\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Alert Integration"
        ],
        "operationId": "postTestAlertIntegration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "kind",
                  "config"
                ],
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "Type of alert integration, currently supports only 'webhook'.",
                    "example": "webhook",
                    "enum": [
                      "webhook"
                    ]
                  },
                  "config": {
                    "type": "object",
                    "required": [
                      "webhook"
                    ],
                    "properties": {
                      "webhook": {
                        "type": "object",
                        "required": [
                          "method",
                          "url"
                        ],
                        "properties": {
                          "method": {
                            "type": "string",
                            "description": "Type of API method to be sent when alert is triggered, either 'POST' or 'PUT'.",
                            "example": "POST",
                            "enum": [
                              "POST",
                              "PUT"
                            ]
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "The base URL of the webhook integration.",
                            "example": "https://company.servicenow.com"
                          },
                          "token": {
                            "type": "string",
                            "example": "QktxVUtFU1dKV1FlJBYXdnTVlRemFZdlRDZTg6eFh4dzU4JUYjqdUwwYkJoTjZSTmlzRWFIRHF0b1h4a08yazBpQjJ1bms1OW4yTUhdsfRib3IhVQ==",
                            "description": "The bearer authentication token is a third-party token that you set for the alert notifications sent through the webhook integration.\n"
                          },
                          "basicAuth": {
                            "type": "object",
                            "required": [
                              "user",
                              "password"
                            ],
                            "properties": {
                              "user": {
                                "type": "string",
                                "description": "Authentication username of the alert API (up to 1024 characters).",
                                "example": "username80085",
                                "maxLength": 1024
                              },
                              "password": {
                                "type": "string",
                                "description": "Authentication password of the alert API (up to 1024 characters).",
                                "example": "yed69khj420_i",
                                "maxLength": 1024
                              }
                            }
                          },
                          "headers": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "exclude": {
                            "type": "object",
                            "properties": {
                              "clusters": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "format": "uuid",
                                "example": [
                                  "ffffffff-aaaa-1414-eeee-000000000000",
                                  "..."
                                ],
                                "description": "The list of cluster IDs of the clusters to be excluded from the alert integration."
                              },
                              "appServices": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "format": "uuid",
                                "example": [
                                  "ffffffff-aaaa-1414-eeee-000000000000",
                                  "..."
                                ],
                                "description": "The list of app service IDs of the app services to be excluded from the alert integration."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successfully tested an alert integration."
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/events": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "List Events",
        "description": "Lists all the events information under a organization.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Creator\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader\n - Database Data Reader/Writer\n\nThe results are always limited by the role and scope of the caller's privileges.\nCurrently, only the `tags` filter is multi-valued; all other filters are single-valued.\n\nBy default, `to` is set to the request time, and `from` is set to 24 hours before the\nrequest time. If 'to' is set and 'from' is not set, then 'from' is set to 24 hours\nbefore 'to'.\n\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Events"
        ],
        "operationId": "listEvents",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **severity**, **timestamp**.",
            "example": [
              "timestamp"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "timestamp",
                  "severity"
                ]
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          },
          {
            "name": "userIds",
            "description": "Filter by user UUID. Default is to return events corresponding to all users.",
            "example": [
              "ffffffff-aaaa-1414-eeee-000000000000"
            ],
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000"
              }
            }
          },
          {
            "name": "clusterIds",
            "description": "List of clusterIds to filter on. By default events corresponding to all clusters are returned.\n",
            "example": [
              "ffffffff-aaaa-1414-eeee-000000000000"
            ],
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000"
              }
            }
          },
          {
            "name": "projectIds",
            "description": "The GUID4 ID of projects to filter on. By default, events corresponding to all projects are returned",
            "example": [
              "ffffffff-aaaa-1414-eeee-000000000000"
            ],
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000"
              }
            }
          },
          {
            "name": "severityLevels",
            "description": "Filter by severity levels. Default is to return events corresponding to all supported severity levels.",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "info",
                  "warning",
                  "critical"
                ]
              }
            }
          },
          {
            "name": "tags",
            "description": "Filter by tags. Default is to return events corresponding to all supported tag. Tags are **availability**, **billing**, **maintenance**, **performance**, **security**, **alert**.",
            "example": [
              "availability",
              "billing",
              "maintenance",
              "performance",
              "security",
              "alert"
            ],
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availability",
                  "billing",
                  "maintenance",
                  "performance",
                  "security",
                  "alert"
                ]
              }
            }
          },
          {
            "name": "from",
            "description": "Start date in  RFC3339 format. If not provided, events starting from last 24 hours are returned.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2024-04-24T12:53:59.000Z"
            }
          },
          {
            "name": "to",
            "description": "End datetime in the last 24 hours, RFC3339 format. Defaults to Now.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2024-04-25T12:53:59.000Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed the events under the organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "source",
                          "key",
                          "severity",
                          "timestamp"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "UUID for this instance of an Event.",
                            "format": "uuid"
                          },
                          "source": {
                            "type": "string",
                            "example": "cp-jobs",
                            "description": "Identifies the originator of the event."
                          },
                          "key": {
                            "type": "string",
                            "example": "cluster_deletion_completed",
                            "description": "Defines the specific kind of Event."
                          },
                          "severity": {
                            "type": "string",
                            "example": "info",
                            "description": "Severity of the event."
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-04-29T09:00:23.475779856Z",
                            "description": "Time when the event was emitted."
                          },
                          "projectId": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "format": "uuid",
                            "description": "ProjectID this Event refers to."
                          },
                          "projectName": {
                            "type": "string",
                            "example": "example-project",
                            "description": "Name of the project at the time of event emission."
                          },
                          "clusterId": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "format": "uuid",
                            "description": "ClusterID this Event refers to."
                          },
                          "clusterName": {
                            "type": "string",
                            "example": "example-cluster",
                            "description": "Name of the cluster at the time of event emission."
                          },
                          "appServiceId": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "format": "uuid",
                            "description": "SyncGatewayID this Event refers to."
                          },
                          "appServiceName": {
                            "type": "string",
                            "example": "sample-appservice",
                            "description": "Name of the sync gateway at the time of event emission."
                          },
                          "userId": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "User id that initiated the request for this Event."
                          },
                          "userName": {
                            "type": "string",
                            "example": "john",
                            "description": "Name of the associated user at the time of event emission."
                          },
                          "userEmail": {
                            "type": "string",
                            "example": "john@example.com",
                            "description": "Email of the associated user at the time of event emission."
                          },
                          "sessionId": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "format": "uuid",
                            "description": "User that initiated the request for this Event."
                          },
                          "requestId": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "format": "uuid",
                            "description": "RequestID for an Event."
                          },
                          "kv": {
                            "type": "object",
                            "description": "Key-value pairs for additional event data."
                          },
                          "summary": {
                            "type": "string",
                            "example": "Summary of the event occurred",
                            "description": "Metadata.SummaryTemplate rendered for this event."
                          },
                          "incidentIds": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "ffffffff-aaaa-1414-eeee-000000000000",
                              "format": "uuid"
                            },
                            "description": "Group events related to an alert incident."
                          },
                          "occurrenceCount": {
                            "type": "integer",
                            "example": 2,
                            "description": "Number of times the alert has fired within this \"incident\"."
                          },
                          "imageURL": {
                            "type": "string",
                            "example": "https://example.com",
                            "description": "Rendered chart image to display for an Alert Event."
                          },
                          "alertKey": {
                            "type": "string",
                            "example": "cluster_down_example",
                            "description": "Populated on demand based on the Event.Key and select labels in KV."
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "listEventsResponse": {
                    "value": {
                      "data": [
                        {
                          "id": "ffffffff-aaaa-1414-eeee-000000000001",
                          "source": "System",
                          "key": "cluster_down",
                          "severity": "critical",
                          "timestamp": "2024-04-24T08:30:00Z",
                          "projectId": "ffffffff-aaaa-1414-eeee-000000000003",
                          "projectName": "example-project",
                          "clusterId": "ffffffff-aaaa-1414-eeee-000000000004",
                          "clusterName": "example-cluster",
                          "appServiceId": "ffffffff-aaaa-1414-eeee-000000000006",
                          "appServiceName": "example-appService",
                          "userId": "ffffffff-aaaa-1414-eeee-000000000008",
                          "userName": "John Doe",
                          "userEmail": "john.doe@example.com",
                          "sessionId": "ffffffff-aaaa-1414-eeee-000000000009",
                          "requestId": "ffffffff-aaaa-1414-eeee-000000000010",
                          "kv": {
                            "key1": "value1",
                            "key2": "value2"
                          },
                          "summary": "Cluster is down due to network outage.",
                          "incidentIds": [
                            "ffffffff-aaaa-1414-eeee-000000000011"
                          ],
                          "occurrenceCount": 3,
                          "imageURL": "https://example.com/chart.png",
                          "alertKey": "cluster_down_example"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/events/{eventId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "eventId",
          "description": "The event ID of the event.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Event",
        "description": "Fetches the details of an event by ID.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Creator\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader\n - Database Data Reader/Writer\n\nThe results are always limited by the role and scope of the caller's privileges.\n\nTo learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n",
        "tags": [
          "Events"
        ],
        "operationId": "getEventByID",
        "responses": {
          "200": {
            "description": "Successfully returned the event details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "source",
                    "key",
                    "severity",
                    "timestamp"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "UUID for this instance of an Event.",
                      "format": "uuid"
                    },
                    "source": {
                      "type": "string",
                      "example": "cp-jobs",
                      "description": "Identifies the originator of the event."
                    },
                    "key": {
                      "type": "string",
                      "example": "cluster_deletion_completed",
                      "description": "Defines the specific kind of Event."
                    },
                    "severity": {
                      "type": "string",
                      "example": "info",
                      "description": "Severity of the event."
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-04-29T09:00:23.475779856Z",
                      "description": "Time when the event was emitted."
                    },
                    "projectId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "format": "uuid",
                      "description": "ProjectID this Event refers to."
                    },
                    "projectName": {
                      "type": "string",
                      "example": "example-project",
                      "description": "Name of the project at the time of event emission."
                    },
                    "clusterId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "format": "uuid",
                      "description": "ClusterID this Event refers to."
                    },
                    "clusterName": {
                      "type": "string",
                      "example": "example-cluster",
                      "description": "Name of the cluster at the time of event emission."
                    },
                    "appServiceId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "format": "uuid",
                      "description": "SyncGatewayID this Event refers to."
                    },
                    "appServiceName": {
                      "type": "string",
                      "example": "sample-appservice",
                      "description": "Name of the sync gateway at the time of event emission."
                    },
                    "userId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "User id that initiated the request for this Event."
                    },
                    "userName": {
                      "type": "string",
                      "example": "john",
                      "description": "Name of the associated user at the time of event emission."
                    },
                    "userEmail": {
                      "type": "string",
                      "example": "john@example.com",
                      "description": "Email of the associated user at the time of event emission."
                    },
                    "sessionId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "format": "uuid",
                      "description": "User that initiated the request for this Event."
                    },
                    "requestId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "format": "uuid",
                      "description": "RequestID for an Event."
                    },
                    "kv": {
                      "type": "object",
                      "description": "Key-value pairs for additional event data."
                    },
                    "summary": {
                      "type": "string",
                      "example": "Summary of the event occurred",
                      "description": "Metadata.SummaryTemplate rendered for this event."
                    },
                    "incidentIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "ffffffff-aaaa-1414-eeee-000000000000",
                        "format": "uuid"
                      },
                      "description": "Group events related to an alert incident."
                    },
                    "occurrenceCount": {
                      "type": "integer",
                      "example": 2,
                      "description": "Number of times the alert has fired within this \"incident\"."
                    },
                    "imageURL": {
                      "type": "string",
                      "example": "https://example.com",
                      "description": "Rendered chart image to display for an Alert Event."
                    },
                    "alertKey": {
                      "type": "string",
                      "example": "cluster_down_example",
                      "description": "Populated on demand based on the Event.Key and select labels in KV."
                    }
                  }
                },
                "examples": {
                  "eventResponse": {
                    "value": {
                      "id": "ffffffff-aaaa-1414-eeee-000000000001",
                      "source": "System",
                      "key": "cluster_down",
                      "severity": "critical",
                      "timestamp": "2024-04-24T08:30:00Z",
                      "projectId": "ffffffff-aaaa-1414-eeee-000000000003",
                      "projectName": "example-project",
                      "clusterId": "ffffffff-aaaa-1414-eeee-000000000004",
                      "clusterName": "example-cluster",
                      "appServiceId": "ffffffff-aaaa-1414-eeee-000000000006",
                      "appServiceName": "example-appService",
                      "userId": "ffffffff-aaaa-1414-eeee-000000000008",
                      "userName": "John Doe",
                      "userEmail": "john.doe@example.com",
                      "sessionId": "ffffffff-aaaa-1414-eeee-000000000009",
                      "requestId": "ffffffff-aaaa-1414-eeee-000000000010",
                      "kv": {
                        "key1": "value1",
                        "key2": "value2"
                      },
                      "summary": "Cluster is down due to network outage.",
                      "incidentIds": [
                        "ffffffff-aaaa-1414-eeee-000000000011"
                      ],
                      "occurrenceCount": 3,
                      "imageURL": "https://example.com/chart.png",
                      "alertKey": "cluster_down_example"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/events": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "List Events",
        "description": "Lists all the events information under a project.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader\n - Database Data Reader/Writer\n\nThe results are always limited by the role and scope of the caller's privileges.\nCurrently, only the `tags` filter is multi-valued; all other filters are single-valued.\n\nBy default, `to` is set to the request time, and `from` is set to 24 hours before the\nrequest time. If 'to' is set and 'from' is not set, then 'from' is set to 24 hours\nbefore 'to'.\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Events"
        ],
        "operationId": "listProjectEvents",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Sets the page you would like to view.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Sets the number of results you would like to have on each page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **severity**, **timestamp**.",
            "example": [
              "timestamp"
            ],
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "timestamp",
                  "severity"
                ]
              }
            }
          },
          {
            "in": "query",
            "name": "sortDirection",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order in which the items will be sorted.",
            "example": "asc"
          },
          {
            "name": "userIds",
            "description": "Filter by user UUID. Default is to return events corresponding to all users.",
            "example": [
              "ffffffff-aaaa-1414-eeee-000000000000"
            ],
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000"
              }
            }
          },
          {
            "name": "clusterIds",
            "description": "List of clusterIds to filter on. By default events corresponding to all clusters are returned.\n",
            "example": [
              "ffffffff-aaaa-1414-eeee-000000000000"
            ],
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000"
              }
            }
          },
          {
            "name": "severityLevels",
            "description": "Filter by severity levels. Default is to return events corresponding to all supported severity levels.",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "info",
                  "warning",
                  "critical"
                ]
              }
            }
          },
          {
            "name": "tags",
            "description": "Filter by tags. Default is to return events corresponding to all supported tag. Tags are **availability**, **billing**, **maintenance**, **performance**, **security**, **alert**.",
            "example": [
              "availability",
              "billing",
              "maintenance",
              "performance",
              "security",
              "alert"
            ],
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availability",
                  "billing",
                  "maintenance",
                  "performance",
                  "security",
                  "alert"
                ]
              }
            }
          },
          {
            "name": "from",
            "description": "Start date in  RFC3339 format. If not provided, events starting from last 24 hours are returned.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2024-04-24T12:53:59.000Z"
            }
          },
          {
            "name": "to",
            "description": "End datetime in the last 24 hours, RFC3339 format. Defaults to Now.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2024-04-25T12:53:59.000Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed the events under the organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "cursor"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "source",
                          "key",
                          "severity",
                          "timestamp"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "UUID for this instance of an Event.",
                            "format": "uuid"
                          },
                          "source": {
                            "type": "string",
                            "example": "cp-jobs",
                            "description": "Identifies the originator of the event."
                          },
                          "key": {
                            "type": "string",
                            "example": "cluster_deletion_completed",
                            "description": "Defines the specific kind of Event."
                          },
                          "severity": {
                            "type": "string",
                            "example": "info",
                            "description": "Severity of the event."
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-04-29T09:00:23.475779856Z",
                            "description": "Time when the event was emitted."
                          },
                          "projectId": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "format": "uuid",
                            "description": "ProjectID this Event refers to."
                          },
                          "projectName": {
                            "type": "string",
                            "example": "example-project",
                            "description": "Name of the project at the time of event emission."
                          },
                          "clusterId": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "format": "uuid",
                            "description": "ClusterID this Event refers to."
                          },
                          "clusterName": {
                            "type": "string",
                            "example": "example-cluster",
                            "description": "Name of the cluster at the time of event emission."
                          },
                          "appServiceId": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "format": "uuid",
                            "description": "SyncGatewayID this Event refers to."
                          },
                          "appServiceName": {
                            "type": "string",
                            "example": "sample-appservice",
                            "description": "Name of the sync gateway at the time of event emission."
                          },
                          "userId": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "description": "User id that initiated the request for this Event."
                          },
                          "userName": {
                            "type": "string",
                            "example": "john",
                            "description": "Name of the associated user at the time of event emission."
                          },
                          "userEmail": {
                            "type": "string",
                            "example": "john@example.com",
                            "description": "Email of the associated user at the time of event emission."
                          },
                          "sessionId": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "format": "uuid",
                            "description": "User that initiated the request for this Event."
                          },
                          "requestId": {
                            "type": "string",
                            "example": "ffffffff-aaaa-1414-eeee-000000000000",
                            "format": "uuid",
                            "description": "RequestID for an Event."
                          },
                          "kv": {
                            "type": "object",
                            "description": "Key-value pairs for additional event data."
                          },
                          "summary": {
                            "type": "string",
                            "example": "Summary of the event occurred",
                            "description": "Metadata.SummaryTemplate rendered for this event."
                          },
                          "incidentIds": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "ffffffff-aaaa-1414-eeee-000000000000",
                              "format": "uuid"
                            },
                            "description": "Group events related to an alert incident."
                          },
                          "occurrenceCount": {
                            "type": "integer",
                            "example": 2,
                            "description": "Number of times the alert has fired within this \"incident\"."
                          },
                          "imageURL": {
                            "type": "string",
                            "example": "https://example.com",
                            "description": "Rendered chart image to display for an Alert Event."
                          },
                          "alertKey": {
                            "type": "string",
                            "example": "cluster_down_example",
                            "description": "Populated on demand based on the Event.Key and select labels in KV."
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "object",
                      "required": [
                        "pages",
                        "hrefs"
                      ],
                      "properties": {
                        "pages": {
                          "type": "object",
                          "required": [
                            "page",
                            "last",
                            "perPage",
                            "totalItems"
                          ],
                          "properties": {
                            "page": {
                              "description": "Current page of results, starting from page 1.",
                              "type": "integer",
                              "example": 2
                            },
                            "next": {
                              "description": "Number of the next page of results. Not set on the last page.\n",
                              "type": "integer",
                              "example": 3
                            },
                            "previous": {
                              "description": "Number of the previous page of results. Not set on the first page.\n",
                              "type": "integer",
                              "example": 1
                            },
                            "last": {
                              "type": "integer",
                              "description": "Number of the last page of results.",
                              "example": 10
                            },
                            "perPage": {
                              "type": "integer",
                              "description": "Number of items displayed in each page.",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "description": "Total items found by the given query.",
                              "example": 10
                            }
                          }
                        },
                        "hrefs": {
                          "type": "object",
                          "required": [
                            "first",
                            "last",
                            "previous",
                            "next"
                          ],
                          "properties": {
                            "first": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the first page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "last": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the last page of results.",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "previous": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the previous page of results.\nEmpty if there is no previous page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            },
                            "next": {
                              "type": "string",
                              "format": "uri",
                              "description": "The base URL, endpoint, and path parameters required to fetch the next page of results.\nEmpty if there is no next page.\n",
                              "example": "https://cloud.couchbase.com/v4/users?page=1&perPage=10"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "listEventsResponse": {
                    "value": {
                      "data": [
                        {
                          "id": "ffffffff-aaaa-1414-eeee-000000000001",
                          "source": "System",
                          "key": "cluster_down",
                          "severity": "critical",
                          "timestamp": "2024-04-24T08:30:00Z",
                          "projectId": "ffffffff-aaaa-1414-eeee-000000000003",
                          "projectName": "example-project",
                          "clusterId": "ffffffff-aaaa-1414-eeee-000000000004",
                          "clusterName": "example-cluster",
                          "appServiceId": "ffffffff-aaaa-1414-eeee-000000000006",
                          "appServiceName": "example-appService",
                          "userId": "ffffffff-aaaa-1414-eeee-000000000008",
                          "userName": "John Doe",
                          "userEmail": "john.doe@example.com",
                          "sessionId": "ffffffff-aaaa-1414-eeee-000000000009",
                          "requestId": "ffffffff-aaaa-1414-eeee-000000000010",
                          "kv": {
                            "key1": "value1",
                            "key2": "value2"
                          },
                          "summary": "Cluster is down due to network outage.",
                          "incidentIds": [
                            "ffffffff-aaaa-1414-eeee-000000000011"
                          ],
                          "occurrenceCount": 3,
                          "imageURL": "https://example.com/chart.png",
                          "alertKey": "cluster_down_example"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/events/{eventId}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "eventId",
          "description": "The event ID of the event.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "get": {
        "summary": "Get Project Event",
        "description": "Fetches the details of an event by ID within a project.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n - Organization Owner\n - Project Owner\n - Project Manager\n - Project Viewer\n - Database Data Reader\n - Database Data Reader/Writer\n\nThe results are always limited by the role and scope of the caller's privileges.\n\nTo learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n",
        "tags": [
          "Events"
        ],
        "operationId": "getProjectEventByID",
        "responses": {
          "200": {
            "description": "Successfully returned the event details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "source",
                    "key",
                    "severity",
                    "timestamp"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "UUID for this instance of an Event.",
                      "format": "uuid"
                    },
                    "source": {
                      "type": "string",
                      "example": "cp-jobs",
                      "description": "Identifies the originator of the event."
                    },
                    "key": {
                      "type": "string",
                      "example": "cluster_deletion_completed",
                      "description": "Defines the specific kind of Event."
                    },
                    "severity": {
                      "type": "string",
                      "example": "info",
                      "description": "Severity of the event."
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-04-29T09:00:23.475779856Z",
                      "description": "Time when the event was emitted."
                    },
                    "projectId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "format": "uuid",
                      "description": "ProjectID this Event refers to."
                    },
                    "projectName": {
                      "type": "string",
                      "example": "example-project",
                      "description": "Name of the project at the time of event emission."
                    },
                    "clusterId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "format": "uuid",
                      "description": "ClusterID this Event refers to."
                    },
                    "clusterName": {
                      "type": "string",
                      "example": "example-cluster",
                      "description": "Name of the cluster at the time of event emission."
                    },
                    "appServiceId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "format": "uuid",
                      "description": "SyncGatewayID this Event refers to."
                    },
                    "appServiceName": {
                      "type": "string",
                      "example": "sample-appservice",
                      "description": "Name of the sync gateway at the time of event emission."
                    },
                    "userId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "description": "User id that initiated the request for this Event."
                    },
                    "userName": {
                      "type": "string",
                      "example": "john",
                      "description": "Name of the associated user at the time of event emission."
                    },
                    "userEmail": {
                      "type": "string",
                      "example": "john@example.com",
                      "description": "Email of the associated user at the time of event emission."
                    },
                    "sessionId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "format": "uuid",
                      "description": "User that initiated the request for this Event."
                    },
                    "requestId": {
                      "type": "string",
                      "example": "ffffffff-aaaa-1414-eeee-000000000000",
                      "format": "uuid",
                      "description": "RequestID for an Event."
                    },
                    "kv": {
                      "type": "object",
                      "description": "Key-value pairs for additional event data."
                    },
                    "summary": {
                      "type": "string",
                      "example": "Summary of the event occurred",
                      "description": "Metadata.SummaryTemplate rendered for this event."
                    },
                    "incidentIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "ffffffff-aaaa-1414-eeee-000000000000",
                        "format": "uuid"
                      },
                      "description": "Group events related to an alert incident."
                    },
                    "occurrenceCount": {
                      "type": "integer",
                      "example": 2,
                      "description": "Number of times the alert has fired within this \"incident\"."
                    },
                    "imageURL": {
                      "type": "string",
                      "example": "https://example.com",
                      "description": "Rendered chart image to display for an Alert Event."
                    },
                    "alertKey": {
                      "type": "string",
                      "example": "cluster_down_example",
                      "description": "Populated on demand based on the Event.Key and select labels in KV."
                    }
                  }
                },
                "examples": {
                  "eventResponse": {
                    "value": {
                      "id": "ffffffff-aaaa-1414-eeee-000000000001",
                      "source": "System",
                      "key": "cluster_down",
                      "severity": "critical",
                      "timestamp": "2024-04-24T08:30:00Z",
                      "projectId": "ffffffff-aaaa-1414-eeee-000000000003",
                      "projectName": "example-project",
                      "clusterId": "ffffffff-aaaa-1414-eeee-000000000004",
                      "clusterName": "example-cluster",
                      "appServiceId": "ffffffff-aaaa-1414-eeee-000000000006",
                      "appServiceName": "example-appService",
                      "userId": "ffffffff-aaaa-1414-eeee-000000000008",
                      "userName": "John Doe",
                      "userEmail": "john.doe@example.com",
                      "sessionId": "ffffffff-aaaa-1414-eeee-000000000009",
                      "requestId": "ffffffff-aaaa-1414-eeee-000000000010",
                      "kv": {
                        "key1": "value1",
                        "key2": "value2"
                      },
                      "summary": "Cluster is down due to network outage.",
                      "incidentIds": [
                        "ffffffff-aaaa-1414-eeee-000000000011"
                      ],
                      "occurrenceCount": 3,
                      "imageURL": "https://example.com/chart.png",
                      "alertKey": "cluster_down_example"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/networkPeers/networkPeerCommand": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Get Azure VNET Peering CLI Command",
        "description": "Retrieves the role assignment command or script to be executed in the Azure CLI to assign a new network contributor role. It scopes only to the specified subscription and the virtual network within that subscription.\n\n- Before using this API, please make sure that the *Admin consent granting* process has been completed through the Capella UI.\n- This process to grant consent to the VNET peering service principal in the external Azure tenant needs to be done only once for the organization i.e. the first time when the VNET peering is created.\n- Consenting to this permission request creates a service principal that grants Capella access to the Azure tenant to perform VNET peering.\n- To complete the admin consent granting process, the Organization owner should follow the steps below -\n    1. Login to the Capella UI.\n    2. Deploy an Azure Cluster or open an existing one you want to peer with your application.\n    3. Click the Settings tab, in the navigation pane click VNET Peering.\n    4. Click Setup VNET Peering.\n    5. Confirm that you have a user with the Global Administrator Role.\n    6. Add the Azure configuration details to allow peering access.\n    7. Click Allow Peering Access - A new browser tab opens. Sign in to Azure if you have not already.\n    8. In Azure, accept Capella’s permissions request - The Azure permissions request page is open in the new browser tab and consent to the new permissions request.\n      For more information refer [docs]- https://docs.couchbase.com/cloud/clouds/vpc-peering/peer-azure.html\n- On accepting the new permission, you automatically return to the Capella VNET peering page. The Capella VNET peering page shows a notice indicating that peering access is successful.\n\n- The Organization Owner should set this up once, then for network peering, use the public API -\n    1. Use this `Get Azure VNET Peering CLI Command` API to fetch the command.\n    2. Run the role assignment command in the Azure CLI.\n    3. Use the `Create VPC Peering` API to create the network peering.\n\n- In order to access this endpoint, the provided API key must have at least one of the following roles:\n  - Organization Owner\n  - Project Owner\n",
        "tags": [
          "Network Peers"
        ],
        "operationId": "getAzureVnetPeeringCommand",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tenantId",
                  "subscriptionId",
                  "resourceGroup",
                  "vnetId",
                  "vnetPeeringServicePrincipal"
                ],
                "properties": {
                  "tenantId": {
                    "description": "The Azure tenant ID. To find your tenant ID, see [How to find your Azure Active Directory tenant ID](https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant).",
                    "type": "string",
                    "example": "ffffffff-aaaa-1414-eeee-000000000000"
                  },
                  "subscriptionId": {
                    "description": "Subscription ID is a GUID that uniquely identifies your subscription to use Azure services. To find your subscription ID, see [Find your Azure subscription](https://learn.microsoft.com/en-us/azure/azure-portal/get-subscription-tenant-id#find-your-azure-subscription).",
                    "type": "string",
                    "example": "ffffffff-aaaa-1414-eeee-000000000000"
                  },
                  "resourceGroup": {
                    "description": "The resource group name holding the resource you’re connecting with Capella.",
                    "type": "string",
                    "example": "sample-resource-group"
                  },
                  "vnetId": {
                    "description": "The VNet ID is the name of the virtual network in Azure.",
                    "type": "string",
                    "example": "sample-vnet"
                  },
                  "vnetPeeringServicePrincipal": {
                    "description": "The enterprise application object ID for the Capella service principal. You can find the enterprise application object ID in Azure by selecting Azure Active Directory -> Enterprise applications. Next, select the application name, the object ID is in the Object ID box.",
                    "type": "string",
                    "example": "ffffffff-aaaa-1414-eeee-000000000000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully provided command to create a network peering.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "command"
                  ],
                  "properties": {
                    "command": {
                      "description": "The command to be run by the customer in is their external azure account in order to grant the service principal a network contributor role that is required for VNET peering.",
                      "type": "string",
                      "example": "az role assignment create \\ --assignee-object-id ffffffff-aaaa-1414-eeee-000000000000 \\ --role \"Network Contributor\" \\ --scope /subscriptions/ffffffff-aaaa-1414-eeee-000000000000/resourceGroups/cb-private-net-demo/providers/Microsoft.Network/virtualNetworks/vnet-test \\ --assignee-principal-type ServicePrincipal"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 3000,
                      "message": "The server cannot find the resource.",
                      "hint": "The server cannot find the resource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/queryService/indexes": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        }
      ],
      "post": {
        "summary": "Manage Query Indexes",
        "description": "CREATE/DROP/ALTER/BUILD primary and secondary indexes.\n\nTo learn more about indexes please refer to the [documentation](https://docs.couchbase.com/server/current/learn/services-and-indexes/indexes/indexing-and-query-perf.html).\n\nIt is recommended to use deferred index builds, especially for larger indexes. \nWhen creating indexes in bulk, we do not recommend sending requests to create all of them at once. \nInstead, we strongly recommend creating indexes in batches of 100 or less.\n\nTo access this endpoint the API key must have at least one of the following roles:\n  - Organization Owner\n  - Project Owner\n  - Database Data Reader/Writer\n\nTo learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n",
        "tags": [
          "Query Indexes"
        ],
        "operationId": "manageQueryIndexes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "definition"
                ],
                "properties": {
                  "definition": {
                    "type": "string",
                    "description": "The index DDL statement.  This can be a CREATE/DROP/ALTER/BUILD statement.\n\nMultiple delimited queries are not allowed.\n\nIt is recommended to use deferred index builds, especially for larger indexes. When creating indexes in bulk, we do not recommend sending requests to create all of them at once. \nInstead, we strongly recommend creating indexes in batches of 100 or less.\n",
                    "example": "create index idx1 on default(c0)"
                  }
                }
              },
              "examples": {
                "CreateIndexExample": {
                  "value": {
                    "definition": "create index idx1 on `travel-sample`.inventory.route(airline, destinationairport, sourceairport) partition by hash(airline) where id in [1000,2000,3000]"
                  }
                },
                "AlterIndexExample": {
                  "value": {
                    "definition": "alter index idx1 on api.stats.latency with { \\\"action\\\": \\\"replica_count\\\", \\\"num_replica\\\": 2 }"
                  }
                },
                "DropIndexExample": {
                  "value": {
                    "definition": "drop index idx1 on api.stats.latency"
                  }
                },
                "BuildIndexExample": {
                  "value": {
                    "definition": "build index on api.stats.latency(idx10, idx11, idx12)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully sent index DDL statement. A 200 response does not imply that the DDL was successfully executed.\nIt implies that request was accepted but there could be an error in processing the index command.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "msg"
                        ],
                        "properties": {
                          "msg": {
                            "type": "string",
                            "description": "The error message",
                            "example": "Index Not Found - cause: GSI index idx1 not found."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Index with specified name was not found in case of DELETE, ALTER or BUILD.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 404,
                      "message": "The index was not found.",
                      "hint": "Check if the index exists in the collection."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get List Of Index Definitions",
        "description": "Get index definitions in a keyspace.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n  - Organization Owner\n  - Project Owner\n  - Database Data Reader/Writer\n  - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Query Indexes"
        ],
        "operationId": "listIndexDefinitions",
        "parameters": [
          {
            "in": "query",
            "name": "bucket",
            "description": "Specifies the bucket part of the key space.\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n",
            "required": true,
            "schema": {
              "type": "string",
              "example": "bucket=travel-sample"
            }
          },
          {
            "in": "query",
            "name": "scope",
            "description": "Specifies the scope part of the key space. If unspecified, this will be the default scope.\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n",
            "required": false,
            "schema": {
              "type": "string",
              "example": "scope=inventory"
            }
          },
          {
            "in": "query",
            "name": "collection",
            "description": "Specifies the collection part of the key space. If unspecified, this will be the default collection.\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n",
            "required": false,
            "schema": {
              "type": "string",
              "example": "collection=hotel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of index definitions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "definitions"
                  ],
                  "properties": {
                    "definitions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "indexName",
                          "definition"
                        ],
                        "properties": {
                          "indexName": {
                            "type": "string",
                            "example": "def_icao"
                          },
                          "definition": {
                            "type": "string",
                            "example": "CREATE INDEX `def_icao` ON `travel-sample`(`icao`)"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Index with specified name was not found in case of DELETE, ALTER or BUILD.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 404,
                      "message": "The index was not found.",
                      "hint": "Check if the index exists in the collection."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Request validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UnprocessableContent": {
                    "value": {
                      "httpStatusCode": 422,
                      "code": 1005,
                      "message": "The server can't process the content.",
                      "hint": "The server can't process the content."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/queryService/indexes/{indexName}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "indexName",
          "description": "The name of the index.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "def_city"
          }
        }
      ],
      "get": {
        "summary": "Get Index Properties",
        "description": "Get the index properties of a specified index in a keyspace.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n  - Organization Owner\n  - Project Owner\n  - Database Data Reader/Writer\n  - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Query Indexes"
        ],
        "operationId": "indexDefinition",
        "parameters": [
          {
            "in": "query",
            "name": "bucket",
            "description": "Specifies the bucket part of the key space.\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n",
            "required": true,
            "schema": {
              "type": "string",
              "example": "bucket=travel-sample"
            }
          },
          {
            "in": "query",
            "name": "scope",
            "description": "Specifies the scope part of the key space. If unspecified, this will be the default scope.\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n",
            "required": false,
            "schema": {
              "type": "string",
              "example": "scope=inventory"
            }
          },
          {
            "in": "query",
            "name": "collection",
            "description": "Specifies the collection part of the key space. If unspecified, this will be the default collection.\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n",
            "required": false,
            "schema": {
              "type": "string",
              "example": "collection=hotel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved index properties.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "defnId",
                    "indexName",
                    "bucket",
                    "scope",
                    "collection",
                    "isPrimary",
                    "secExprs",
                    "where",
                    "numReplica",
                    "status"
                  ],
                  "properties": {
                    "defnId": {
                      "type": "integer"
                    },
                    "indexName": {
                      "type": "string",
                      "example": "idx10"
                    },
                    "bucket": {
                      "type": "string",
                      "example": "travel-sample"
                    },
                    "scope": {
                      "type": "string",
                      "example": "inventory"
                    },
                    "collection": {
                      "type": "string",
                      "example": "airline"
                    },
                    "isPrimary": {
                      "type": "boolean",
                      "example": false
                    },
                    "secExprs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "destinationairport",
                        "sourceairport"
                      ]
                    },
                    "where": {
                      "type": "string",
                      "example": "name is valued"
                    },
                    "numReplica": {
                      "type": "integer",
                      "example": 1
                    },
                    "status": {
                      "type": "string",
                      "example": "Ready"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Index with specified name was not found in case of DELETE, ALTER or BUILD.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 404,
                      "message": "The index was not found.",
                      "hint": "Check if the index exists in the collection."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/queryService/indexBuildStatus/{indexName}": {
      "parameters": [
        {
          "name": "organizationId",
          "description": "The GUID4 ID of the organization.\n",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "projectId",
          "description": "The GUID4 ID of the project.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "clusterId",
          "description": "The GUID4 ID of the cluster.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000"
          }
        },
        {
          "name": "indexName",
          "description": "The name of the index.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "def_city"
          }
        }
      ],
      "get": {
        "summary": "Get Index Build Status",
        "description": "Monitor the build status of an index.\n\nIn order to access this endpoint, the provided API key must have at least one of the following roles:\n  - Organization Owner\n  - Project Owner\n  - Database Data Reader/Writer\n  - Database Data Reader\n\nTo learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n",
        "tags": [
          "Query Indexes"
        ],
        "operationId": "indexBuildStatus",
        "parameters": [
          {
            "in": "query",
            "name": "bucket",
            "description": "Specifies the bucket part of the key space.\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n",
            "required": true,
            "schema": {
              "type": "string",
              "example": "bucket=travel-sample"
            }
          },
          {
            "in": "query",
            "name": "scope",
            "description": "Specifies the scope part of the key space. If unspecified, this will be the default scope.\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n",
            "required": false,
            "schema": {
              "type": "string",
              "example": "scope=inventory"
            }
          },
          {
            "in": "query",
            "name": "collection",
            "description": "Specifies the collection part of the key space. If unspecified, this will be the default collection.\nTo learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n",
            "required": false,
            "schema": {
              "type": "string",
              "example": "collection=hotel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved build status for a given index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "Created",
                        "Ready",
                        "Building"
                      ],
                      "description": "The possible values for index build status are:\n\nCreated:  index is created and ready to start the build\n\nReady:    build completed and index is active\n\nBuilding: index has started building\n",
                      "example": "Ready"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when we are unable to decode the recevied payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "httpStatusCode": 400,
                      "code": 1000,
                      "message": "The request was malformed or invalid.",
                      "hint": "The request was malformed or invalid."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The client does not have the necessary permissions to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "AccessForbidden": {
                    "value": {
                      "httpStatusCode": 403,
                      "code": 1002,
                      "message": "Access Denied.",
                      "hint": "Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Index with specified name was not found in case of DELETE, ALTER or BUILD.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResourceNotFound": {
                    "value": {
                      "httpStatusCode": 404,
                      "code": 404,
                      "message": "The index was not found.",
                      "hint": "Check if the index exists in the collection."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned when the client exceeds the rate limit for the given APIKey.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string",
                  "description": "The amount of time, in seconds, that the client should wait before sending subsequent requests.",
                  "example": "Retry-After: 60"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "RateLimitExceeded": {
                    "value": {
                      "httpStatusCode": 429,
                      "code": 1004,
                      "message": "Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.",
                      "hint": "The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred in the server while processing this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "httpStatusCode",
                    "message",
                    "code",
                    "hint"
                  ],
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "hint": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InternalServerError": {
                    "value": {
                      "httpStatusCode": 500,
                      "code": 10000,
                      "message": "An internal server error occurred.",
                      "hint": "Something went wrong on our end. We are actively investigating the issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}