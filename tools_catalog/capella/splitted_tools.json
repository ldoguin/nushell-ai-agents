[
  {
    "name": "Alert Integration",
    "description": "Couchbase Capella supports sending Capella alert notifications to the most common service like ServiceNow.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Alert Integration"
        ],
        "function": {
          "name": "post_postalertintegration",
          "description": "Creates a new alert integration for a project.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: kind, name, config, properties: kind: type: string, description: Type of alert integration, currently supports only 'webhook'., example: webhook, enum: webhook, name: type: string, description: Name of the alert integration (up to 1024 characters)., example: test alert 1, maxLength: 1024, config: type: object, required: webhook, properties: webhook: type: object, required: method, url, properties: method: type: string, description: Type of API method to be sent when alert is triggered, either 'POST' or 'PUT'., example: POST, enum: POST, PUT, url: type: string, format: uri, description: The base URL of the webhook integration., example: https://company.servicenow.com, token: type: string, example: QktxVUtFU1dKV1FlJBYXdnTVlRemFZdlRDZTg6eFh4dzU4JUYjqdUwwYkJoTjZSTmlzRWFIRHF0b1h4a08yazBpQjJ1bms1OW4yTUhdsfRib3IhVQ==, description: The bearer authentication token is a third-party token that you set for the alert notifications sent through the webhook integration. , basicAuth: type: object, required: user, password, properties: user: type: string, description: Authentication username of the alert API (up to 1024 characters)., example: username80085, maxLength: 1024, password: type: string, description: Authentication password of the alert API (up to 1024 characters)., example: yed69khj420_i, maxLength: 1024, headers: type: object, additionalProperties: type: string, exclude: type: object, properties: clusters: type: array, items: type: string, format: uuid, example: ffffffff-aaaa-1414-eeee-000000000000, ..., description: The list of cluster IDs of the clusters to be excluded from the alert integration., appServices: type: array, items: type: string, format: uuid, example: ffffffff-aaaa-1414-eeee-000000000000, ..., description: The list of app service IDs of the app services to be excluded from the alert integration.",
                "type": "string"
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Alert Integration"
        ],
        "function": {
          "name": "get_listalertintegrations",
          "description": "Lists all the alert integrations under the project.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Organization Member\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **name**."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Alert Integration"
        ],
        "function": {
          "name": "get_getalertintegrationbyid",
          "description": "Fetches the details of the given alert integration.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Organization Member\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "alertIntegrationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the alert integration."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "alertIntegrationId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Alert Integration"
        ],
        "function": {
          "name": "put_putalertintegration",
          "description": "Update the details of the given alert integration.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: config, properties: name: type: string, description: Name of the alert integration (up to 1024 characters)., example: test alert 1, maxLength: 1024, config: type: object, required: webhook, properties: webhook: type: object, required: method, url, properties: method: type: string, description: Type of API method to be sent when alert is triggered, either 'POST' or 'PUT'., example: POST, enum: POST, PUT, url: type: string, format: uri, description: The base URL of the webhook integration., example: https://company.servicenow.com, token: type: string, example: QktxVUtFU1dKV1FlJBYXdnTVlRemFZdlRDZTg6eFh4dzU4JUYjqdUwwYkJoTjZSTmlzRWFIRHF0b1h4a08yazBpQjJ1bms1OW4yTUhdsfRib3IhVQ==, description: The bearer authentication token is a third-party token that you set for the alert notifications sent through the webhook integration. , basicAuth: type: object, required: user, password, properties: user: type: string, description: Authentication username of the alert API (up to 1024 characters)., example: username80085, maxLength: 1024, password: type: string, description: Authentication password of the alert API (up to 1024 characters)., example: yed69khj420_i, maxLength: 1024, headers: type: object, additionalProperties: type: string, exclude: type: object, properties: clusters: type: array, items: type: string, format: uuid, example: ffffffff-aaaa-1414-eeee-000000000000, ..., description: The list of cluster IDs of the clusters to be excluded from the alert integration., appServices: type: array, items: type: string, format: uuid, example: ffffffff-aaaa-1414-eeee-000000000000, ..., description: The list of app service IDs of the app services to be excluded from the alert integration.",
                "type": "string"
              },
              "alertIntegrationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the alert integration."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "alertIntegrationId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Alert Integration"
        ],
        "function": {
          "name": "delete_deletealertintegrationbyid",
          "description": "Deletes an existing alert integration.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "alertIntegrationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the alert integration."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "alertIntegrationId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Alert Integration"
        ],
        "function": {
          "name": "post_posttestalertintegration",
          "description": "Tests a new alert integration for a project.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: kind, config, properties: kind: type: string, description: Type of alert integration, currently supports only 'webhook'., example: webhook, enum: webhook, config: type: object, required: webhook, properties: webhook: type: object, required: method, url, properties: method: type: string, description: Type of API method to be sent when alert is triggered, either 'POST' or 'PUT'., example: POST, enum: POST, PUT, url: type: string, format: uri, description: The base URL of the webhook integration., example: https://company.servicenow.com, token: type: string, example: QktxVUtFU1dKV1FlJBYXdnTVlRemFZdlRDZTg6eFh4dzU4JUYjqdUwwYkJoTjZSTmlzRWFIRHF0b1h4a08yazBpQjJ1bms1OW4yTUhdsfRib3IhVQ==, description: The bearer authentication token is a third-party token that you set for the alert notifications sent through the webhook integration. , basicAuth: type: object, required: user, password, properties: user: type: string, description: Authentication username of the alert API (up to 1024 characters)., example: username80085, maxLength: 1024, password: type: string, description: Authentication password of the alert API (up to 1024 characters)., example: yed69khj420_i, maxLength: 1024, headers: type: object, additionalProperties: type: string, exclude: type: object, properties: clusters: type: array, items: type: string, format: uuid, example: ffffffff-aaaa-1414-eeee-000000000000, ..., description: The list of cluster IDs of the clusters to be excluded from the alert integration., appServices: type: array, items: type: string, format: uuid, example: ffffffff-aaaa-1414-eeee-000000000000, ..., description: The list of app service IDs of the app services to be excluded from the alert integration.",
                "type": "string"
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "body"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Allowed CIDRs (App Services)",
    "description": "App Services only allow trusted IP addresses to connect and use its REST APIs.\nEach App Service has a configurable Allowed IP list that can include up to 75 entries.\nEach entry can be a single IP address or an IP address space.\nAny IP address you add to this list can have a user-specified expiration time for temporary access, or be permanent.\nCapella automatically denies any connection attempts to and from an IP not in the allowed IP list.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Allowed CIDRs (App Services)"
        ],
        "function": {
          "name": "delete_deleteappserviceallowedcidr",
          "description": "Deletes an Allowed CIDR by ID on the specified App Service.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "allowedCidrId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the allowed CIDR."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "allowedCidrId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Allowed CIDRs (App Services)"
        ],
        "function": {
          "name": "get_listappserviceallowedcidrs",
          "description": "Lists the Allowed CIDRs for the specified App Service.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **type**, **status**."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Allowed CIDRs (App Services)"
        ],
        "function": {
          "name": "post_postappserviceallowedcidr",
          "description": "Adds a trusted CIDR to the specified App Service's list of allowed CIDRs.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: cidr, properties: cidr: type: string, description: The trusted CIDR to allow network connections from. The example represents a single IP address (i.e. a subnet mask of 32). , example: 6.60.28.100/32, comment: type: string, description: A short description of the allowed CIDR., example: Allows access from my local developer machine, expiresAt: type: string, format: date-time, description: An RFC3339 timestamp determining when the allowed CIDR should expire. If this field is empty/omitted then the allowed CIDR is permanent and will never automatically expire. , example: 2023-05-14T21:49:58.465Z",
                "type": "string"
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "body"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Allowed CIDRs (Cluster)",
    "description": "Couchbase Capella only allows trusted IP addresses to connect to databases.\nEach database has a configurable Allowed IP list that can include up to 75 entries.\nEach entry can be a single IP address or an IP address space.\nAny IP address you add to this list can have a user-specified expiration time for temporary access, or be permanent.\nCapella automatically denies any connection attempts to and from an IP not in the allowed IP list.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Allowed CIDRs (Cluster)"
        ],
        "function": {
          "name": "post_postallowedcidrs",
          "description": "Adds a trusted CIDR to a cluster's list of allowed CIDRs.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# \n# Note that updating this resource is not supported; you must delete and recreate allowed CIDRs instead. As a result, ETags are also not supported for this resource.\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: cidr, properties: cidr: type: string, description: The trusted CIDR to allow the database connections from. The example represents a single IP address (i.e. a subnet mask of 32). , example: 6.60.28.100/32, comment: type: string, description: A short description of the allowed CIDR., example: Allows access from my local developer machine, expiresAt: type: string, format: date-time, description: An RFC3339 timestamp determining when the allowed CIDR should expire. If this field is empty/omitted then the allowed CIDR is permanent and will never automatically expire. , example: 2023-05-14T21:49:58.465Z",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Allowed CIDRs (Cluster)"
        ],
        "function": {
          "name": "get_listallowedcidrs",
          "description": "Lists all of the allowed CIDRs for a given cluster.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **type**, **status**."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Allowed CIDRs (Cluster)"
        ],
        "function": {
          "name": "get_getallowedcidrbyid",
          "description": "Fetches the details for the specified allowed CIDR.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "allowedCidrId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the allowed CIDR."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "allowedCidrId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Allowed CIDRs (Cluster)"
        ],
        "function": {
          "name": "delete_deleteallowedcidrbyid",
          "description": "Deletes the existing allowed CIDR.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "allowedCidrId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the allowed CIDR."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "allowedCidrId"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Api Keys",
    "description": "Couchbase Capella Management API uses a Bearer token mechanism for authentication; each call to the Management API has to be authenticated by API key.",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Api Keys"
        ],
        "function": {
          "name": "post_postorganizationapikeys",
          "description": "Creates a new API key under an organization.\n# \n# Organization Owners can create Organization and Project scoped API keys.\n# \n# Project Owner and Project Creator can create project scoped keys.\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, organizationRoles, properties: name: type: string, description: Name of the API key. , example: Production, description: type: string, description: Description for the API key. , example: API key to manage production Capella Cluster., default: , expiry: type: number, format: float, default: 180, description: Expiry of the API key in number of days. If set to -1, the token will not expire. , allowedCIDRs: type: array, items: type: string, example: 0.0.0.0/0, description: List of inbound CIDRs for the API key. The system making a request must come from one of the allowed CIDRs. , default: 0.0.0.0/0, organizationRoles: type: array, items: type: string, enum: organizationOwner, organizationMember, projectCreator, example: organizationMember, description: Organization roles assigned to the API key.  To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html). , resources: type: array, description: Resources are the resource level permissions associated with the API key.  To learn more about Organization Roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html). , items: type: object, required: id, roles, properties: type: type: string, default: project, description: Type of the resource. , id: type: string, format: uuid, example: ffffffff-aaaa-1414-eeee-000000000000, description: ID of the project. , roles: type: array, items: type: string, enum: projectOwner, projectManager, projectViewer, projectDataReaderWriter, projectDataReader, example: projectDataReaderWriter, projectManager, description: Project Roles associated with the API key.  To learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html). , default: , examples: createOrganizationOwnerAPIKey: value: name: Organization Owner API Key, description: Creates an API key with a Organization Owner role., expiry: 720, allowedCIDRs: 8.8.8.8/32, organizationRoles: organizationOwner, resources: , createProjectOwnerAPIKey: value: name: Project Owner API Key, description: Creates an API key with a Project Owner role., expiry: 720, allowedCIDRs: 8.8.8.8/32, organizationRoles: organizationMember, resources: id: ffffffff-aaaa-1414-eeee-000000000000, roles: projectOwner",
                "type": "string"
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Api Keys"
        ],
        "function": {
          "name": "get_listorganizationapikeys",
          "description": "Lists all the API keys under an organization.\n# \n# Organization Owners can list all the API keys inside the Organization.\n# \n# Organization Members and Project Creators can list all the Project scoped API key for which they are Project Owner.\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **name**, **expiry**, **description**."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Api Keys"
        ],
        "function": {
          "name": "get_getorganizationapikeybyaccesskey",
          "description": "Fetches the details of the given API key under an organization.\n# \n# Organization Owners can get any API key inside the Organization.\n# \n# Organization Members and Project Creator can get any Project scoped API key for which they are Project Owner.\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "ApiKeyId": {
                "type": "string",
                "example": "ffffffffaaaa1414eeee000000000000",
                "description": "The ID (Access key) of the API key. "
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "ApiKeyId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Api Keys"
        ],
        "function": {
          "name": "delete_deleteorganizationapikey",
          "description": "Deletes the given API key under an organization.\n# \n# Organization Owners can delete any API key inside the Organization.\n# \n# Organization Members and Project Creator can delete any Project scoped API key for which they are Project Owner.\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "ApiKeyId": {
                "type": "string",
                "example": "ffffffffaaaa1414eeee000000000000",
                "description": "The ID (Access key) of the API key. "
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "ApiKeyId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Api Keys"
        ],
        "function": {
          "name": "post_postorganizationapikeyrotate",
          "description": "Rotate the secret of a given API key under an organization.\n# \n# Organization Owners can rotate any API key inside the Organization.\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, properties: secret: type: string, description: A secret associated with API key. One has to follow the secret key policy, such as allowed characters and a length of 64 characters.  If this field is left empty, a secret will be auto-generated. , example: jawuXxSXYaWdr@uSSphmV1aJ4siKKcHHXnhhtbE8h8H!O2nbIQJ62M40stDATiBp, examples: rotateOrganizationOwnerAPIKey: value: secret: GaC4FQLCoUqoKUMBvl6BgRK1Ivqu5yF8OkDBhnP%#CH%S4T@bTVUdP#rY#VSicbx",
                "type": "string"
              },
              "ApiKeyId": {
                "type": "string",
                "example": "ffffffffaaaa1414eeee000000000000",
                "description": "The ID (Access key) of the API key. "
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "ApiKeyId",
              "body"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "App Endpoints",
    "description": "App Endpoints represent instances of mobile applications on App Services. Each App Endpoint is linked to one bucket and synchronizes data to a set of\nlinked collections. Users can configure App Endpoints, including setting the Access Control function, Import Filter and OpenID Connect (OIDC) authentication configuration.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "get_listappendpoints",
          "description": "Lists all the App Endpoints under a specific App Service along with their associated configurations such as Access Control function, Import Filter or user defined xattr key.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **name**, **offline**, **bucket**."
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "post_postappendpoint",
          "description": "Creates an App Endpoint within an App Service with specific configurations such as collection level Access Control function and Import Filter.\n# If the scopes property is not included in the request body, the default scope and collection will be used.\n# The first OpenID Connect provider given will be set as the default provider for the App Endpoint. To change the default, please use the Change App Endpoint OIDC Default Provider endpoint.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, bucket, properties: bucket: type: string, example: store_locations, description: The Capella Cluster backing bucket for the App Endpoint., oidc: description: OpenID Connect provider configuration., type: array, items: type: object, required: issuer, clientId, properties: issuer: type: string, example: https://example.auth.com, description: The URL for the OpenID Connect issuer., register: type: boolean, example: true, description: Indicates whether to register a new App Service user account when a user logs in using OpenID Connect., clientId: type: string, example: foo_client, description: The OpenID Connect provider client ID., userPrefix: type: string, example: fooOIDC, description: Username prefix for all users created for this provider, discoveryUrl: type: string, example: https://foo.com/.well-known/openid-configuration, description: The URL for the non-standard discovery endpoint., usernameClaim: type: string, example: fooAlt, description: Allows a different OpenID Connect field to be specified instead of the Subject (sub)., rolesClaim: type: string, example: roles, description: If set, the value(s) of the given OpenID Connect authentication token claim will be added to the user's roles. The value of this claim in the OIDC token must be either a string or an array of strings, any other type will result in an error. , providerId: type: string, readOnly: true, description: UUID of the provider., isDefault: type: boolean, readOnly: true, description: Indicates whether this is the default OpenID Connect provider., example: issuer: foo, register: true, clientId: foo_client, userPrefix: fooOIDC, discoveryUrl: https://foo.com/.well-known/openid-configuration, usernameClaim: fooAlt, cors: description: Cross-Origin Resource Sharing (CORS) configuration, used to enable granular access control to trusted domains for Origin and Login purposes in browser-based and hybrid applications., type: object, required: origin, properties: origin: type: array, description: List of allowed origins, use ['*'] to allow access from everywhere, example: http://example.com, http://staging.example.com, items: type: string, loginOrigin: type: array, description: List of allowed login origins, example: http://example.com, items: type: string, headers: type: array, description: List of allowed headers, example: Content-Type, items: type: string, maxAge: description: Specifies the duration (in seconds) for which the results of a preflight request can be cached., type: integer, default: 5, disabled: description: disable CORS, example: false, type: boolean, example: origin: http://example.com, http://staging.example.com, loginOrigin: http://example.com, headers: Content-Type, maxAge: 600, disabled: false, scopes: type: object, additionalProperties: type: object, description: The scope config, defining Access control and validation functions, and import filters for each collection. The key to the scope config object is the name of the scope. Only one scope is allowed per App Endpoint., required: collections, properties: collections: type: object, description: The collection config, defining Access control and validation functions and import filters for this collection. The key to the collection config object is the name of the collection., additionalProperties: type: object, properties: accessControlFunction: type: string, example: function(doc){channel(\"collection name\");}, description: The Javascript function that is used to specify the access control policies to be applied to documents in this collection. Every document update is processed by this function. The default access control function is 'function(doc){channel(doc.channels);}' for the default collection and 'function(doc){channel(collectionName);}' for named collections. , importFilter: type: string, example: function(doc) { if (doc.type != 'mobile') { return false; } return true; }, description: The Javascript function used to specify the documents in this collection that are to be imported by the App Endpoint. By default, all documents in corresponding collection are imported., example: scope_1: collections: collection_1: accessControlFunction: function(doc){channel(doc.channels);}, importFilter: function(doc) { if (doc.type != 'mobile') { return false; } return true; }, collection_2: accessControlFunction: function(doc){channel(doc.channels);}, importFilter: function(doc) { if (doc.type != 'mobile') { return false; } return true; }, default: _default: collections: _default: accessControlFunction: function(doc){channel(doc.channels);}, importFilter:  function(doc) { if (doc.type != 'mobile') { return false; } return true; }, name: type: string, description: App Endpoint name. Must be less than 228 characters. It can only contain lowercase letters, numbers, or the following characters `-_$+()`, example: appEndpoint1, deltaSyncEnabled: type: boolean, default: false, description: Enable/disable delta sync, userXattrKey: type: string, example: syncFnXattr, description: The key of the user-extended attributes (xattr) that will be accessible from the Access control and validation function. If left empty, the feature will be disabled., examples: CreateAppEndpointRequestDefaultCollection: value: bucket: bucket1, name: defaultAppEndpoint, userXattrKey: key, deltaSyncEnabled: true, scopes: _default: collections: _default: accessControlFunction: function(doc){channel(doc.channels);}, importFilter: function(doc) { if (doc.type != 'mobile') { return false; } return true; }, cors: origin: http://example.com, http://staging.example.com, loginOrigin: http://example.com, headers: Content-Type, disabled: true, oidc: issuer: https://example.auth.com, register: true, clientId: foo_client, userPrefix: fooOIDC, discoveryUrl: https://foo.com/.well-known/openid-configuration, usernameClaim: fooAlt, rolesClaim: roles, issuer: https://example.auth.com, register: true, clientId: bar_client, userPrefix: barOIDC, discoveryUrl: https://bar.com/.well-known/openid-configuration, usernameClaim: barAlt, CreateAppEndpointRequestNamedCollections: value: bucket: bucket1, name: storeAppEndpoint, deltaSyncEnabled: false, userXattrKey: key, scopes: scope_1: collections: collection_1: accessControlFunction: function(doc){channel(doc.channels);}, importFilter: function(doc) { if (doc.type != 'mobile') { return false; } return true; }, collection_2: accessControlFunction: function(doc){channel(doc.channels);}, cors: origin: http://example.com, http://staging.example.com, loginOrigin: http://example.com, headers: Content-Type, disabled: true, oidc: issuer: https://example.auth.com, register: true, clientId: bar_client, userPrefix: barOIDC, discoveryUrl: https://bar.com/.well-known/openid-configuration, usernameClaim: barAlt",
                "type": "string"
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "get_getappendpoint",
          "description": "Fetches the details of the given App Endpoint, including operational and resync states and various configurations such as Access Control function and Import Filter.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "put_putappendpoint",
          "description": "Replaces a specified App Endpoint’s configurations such as Access Control function, Import Filter, Delta Sync, or user defined xattr key.\n# The first OpenID Connect provider given will be set as the default provider for the App Endpoint. To change the default, please use the Change App Endpoint OIDC Default Provider endpoint.\n# All fields are required, the App Endpoint and bucket names cannot be changed.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, bucket, scopes, deltaSyncEnabled, userXattrKey, oidc, cors, properties: name: type: string, description: App Endpoint name. Cannot be changed., example: appEndpoint1, bucket: type: string, example: store_locations, description: The Capella Cluster backing bucket for the App Endpoint. Cannot be changed., scopes: type: object, additionalProperties: type: object, description: The scope config, defining Access control and validation functions, and import filters for each collection. The key to the scope config object is the name of the scope. Only one scope is allowed per App Endpoint., required: collections, properties: collections: type: object, description: The collection config, defining Access control and validation functions and import filters for this collection. The key to the collection config object is the name of the collection., additionalProperties: type: object, properties: accessControlFunction: type: string, example: function(doc){channel(\"collection name\");}, description: The Javascript function that is used to specify the access control policies to be applied to documents in this collection. Every document update is processed by this function. The default access control function is 'function(doc){channel(doc.channels);}' for the default collection and 'function(doc){channel(collectionName);}' for named collections. , importFilter: type: string, example: function(doc) { if (doc.type != 'mobile') { return false; } return true; }, description: The Javascript function used to specify the documents in this collection that are to be imported by the App Endpoint. By default, all documents in corresponding collection are imported., example: scope_1: collections: collection_1: accessControlFunction: function(doc){channel(doc.channels);}, importFilter: function(doc) { if (doc.type != 'mobile') { return false; } return true; }, collection_2: accessControlFunction: function(doc){channel(doc.channels);}, importFilter: function(doc) { if (doc.type != 'mobile') { return false; } return true; }, default: _default: collections: _default: accessControlFunction: function(doc){channel(doc.channels);}, importFilter:  function(doc) { if (doc.type != 'mobile') { return false; } return true; }, deltaSyncEnabled: type: boolean, description: Enable or disable delta sync, userXattrKey: type: string, example: syncFnXattr, description: Key of user xattr that will be accessible from the Access control and validation function. If empty, the feature will be disabled., oidc: description: OpenID Connect provider configuration., type: array, items: type: object, required: issuer, clientId, properties: issuer: type: string, example: https://example.auth.com, description: The URL for the OpenID Connect issuer., register: type: boolean, example: true, description: Indicates whether to register a new App Service user account when a user logs in using OpenID Connect., clientId: type: string, example: foo_client, description: The OpenID Connect provider client ID., userPrefix: type: string, example: fooOIDC, description: Username prefix for all users created for this provider, discoveryUrl: type: string, example: https://foo.com/.well-known/openid-configuration, description: The URL for the non-standard discovery endpoint., usernameClaim: type: string, example: fooAlt, description: Allows a different OpenID Connect field to be specified instead of the Subject (sub)., rolesClaim: type: string, example: roles, description: If set, the value(s) of the given OpenID Connect authentication token claim will be added to the user's roles. The value of this claim in the OIDC token must be either a string or an array of strings, any other type will result in an error. , providerId: type: string, readOnly: true, description: UUID of the provider., isDefault: type: boolean, readOnly: true, description: Indicates whether this is the default OpenID Connect provider., example: issuer: foo, register: true, clientId: foo_client, userPrefix: fooOIDC, discoveryUrl: https://foo.com/.well-known/openid-configuration, usernameClaim: fooAlt, cors: description: Cross-Origin Resource Sharing (CORS) configuration, used to enable granular access control to trusted domains for Origin and Login purposes in browser-based and hybrid applications., type: object, required: origin, properties: origin: type: array, description: List of allowed origins, use ['*'] to allow access from everywhere, example: http://example.com, http://staging.example.com, items: type: string, loginOrigin: type: array, description: List of allowed login origins, example: http://example.com, items: type: string, headers: type: array, description: List of allowed headers, example: Content-Type, items: type: string, maxAge: description: Specifies the duration (in seconds) for which the results of a preflight request can be cached., type: integer, default: 5, disabled: description: disable CORS, example: false, type: boolean, example: origin: http://example.com, http://staging.example.com, loginOrigin: http://example.com, headers: Content-Type, maxAge: 600, disabled: false",
                "type": "string"
              },
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "delete_deleteappendpoint",
          "description": "Deletes an existing App Endpoint given its name.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "get_listappendpointcollections",
          "description": "Lists all the collections under a specific App Endpoint along with their associated configurations such as Access Control function, Import Filter or user defined xattr key.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "post_postappendpointactivationstatus",
          "description": "Brings an App Endpoint online to close and reopen the connection to the backing Cluster bucket,\n# re-establish access from the Public REST API and accept all incoming Admin API requests.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "delete_deleteappendpointactivationstatus",
          "description": "Take the database offline to run resync or to make changes without disrupting current App Endpoint operations.\n# Clients currently connected to the App Endpoint will not be able to sync data with the Cluster while the App Endpoint is paused.\n# This will not take the backing Cluster bucket offline.\n# Pausing an App Endpoint that is in the progress of coming online will pause the App Endpoint after it comes online.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "get_getappendpointcors",
          "description": "Fetch the App Endpoint Cross-Origin Resource Sharing (CORS) Configuration.\n# CORS is disabled by default. For more information\n# See [Cross-Origin Resource Sharing (CORS) on App Endpoints.](https://docs.couchbase.com/cloud/app-services/deployment/cors-configuration-for-app-services.html)\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "put_putappendpointcors",
          "description": "Upsert the App Endpoint Cross-Origin Resource Sharing (CORS) Configuration.\n# CORS is disabled by default. For more information\n# See [Cross-Origin Resource Sharing (CORS) on App Endpoints.](https://docs.couchbase.com/cloud/app-services/deployment/cors-configuration-for-app-services.html)\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: origin, properties: origin: type: array, description: List of allowed origins, use ['*'] to allow access from everywhere, example: http://example.com, http://staging.example.com, items: type: string, loginOrigin: type: array, description: List of allowed login origins, example: http://example.com, items: type: string, headers: type: array, description: List of allowed headers, example: Content-Type, items: type: string, maxAge: description: Specifies the duration (in seconds) for which the results of a preflight request can be cached., type: integer, default: 5, disabled: description: disable CORS, example: false, type: boolean, example: origin: http://example.com, http://staging.example.com, loginOrigin: http://example.com, headers: Content-Type, maxAge: 600, disabled: false",
                "type": "string"
              },
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "get_getaccessfunction",
          "description": "Retrieves the Access Control and Validation function for the given keyspace.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointKeyspace": {
                "type": "string",
                "example": "endpoint1.scope1.collection1",
                "description": "A specific collection denoted by the App Endpoint name, the scope name and collection name separated by a period, for example \"endpoint1.scope1.collection1\". If only an App Endpoint name is provided this will be interpreted as \"endpoint1._default._default\". If only an App Endpoint name and collection name are provided these will interpreted as a named collection within the default scope, for example \"endpoint1.collection1\" will be interpreted as \"endpoint1._default.collection1\". "
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointKeyspace"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "put_putaccessfunction",
          "description": "Used to upsert a custom Access Control and Validation function for the given keyspace.\n# This is a Javascript function specified at a keyspace, where a user’s read/write access is defined for documents in that particular keyspace.\n# Every document mutation is processed by this function. If an Access Control function is not explicitly defined, a default is applied.\n# [Read more.](https://docs.couchbase.com/cloud/app-services/deployment/access-control-data-validation.html?)\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/javascript: schema: type: string, description: All mutations in this collection are processed by this Javascript function, example: function(doc,oldDoc,meta){channel('collection name');}",
                "type": "string"
              },
              "appEndpointKeyspace": {
                "type": "string",
                "example": "endpoint1.scope1.collection1",
                "description": "A specific collection denoted by the App Endpoint name, the scope name and collection name separated by a period, for example \"endpoint1.scope1.collection1\". If only an App Endpoint name is provided this will be interpreted as \"endpoint1._default._default\". If only an App Endpoint name and collection name are provided these will interpreted as a named collection within the default scope, for example \"endpoint1.collection1\" will be interpreted as \"endpoint1._default.collection1\". "
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointKeyspace",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "delete_deleteaccessfunction",
          "description": "Deletes the Access Control and Validation function for the given keyspace.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointKeyspace": {
                "type": "string",
                "example": "endpoint1.scope1.collection1",
                "description": "A specific collection denoted by the App Endpoint name, the scope name and collection name separated by a period, for example \"endpoint1.scope1.collection1\". If only an App Endpoint name is provided this will be interpreted as \"endpoint1._default._default\". If only an App Endpoint name and collection name are provided these will interpreted as a named collection within the default scope, for example \"endpoint1.collection1\" will be interpreted as \"endpoint1._default.collection1\". "
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointKeyspace"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "get_getimportfilter",
          "description": "Retrieves the Import Filter for the given keyspace.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointKeyspace": {
                "type": "string",
                "example": "endpoint1.scope1.collection1",
                "description": "A specific collection denoted by the App Endpoint name, the scope name and collection name separated by a period, for example \"endpoint1.scope1.collection1\". If only an App Endpoint name is provided this will be interpreted as \"endpoint1._default._default\". If only an App Endpoint name and collection name are provided these will interpreted as a named collection within the default scope, for example \"endpoint1.collection1\" will be interpreted as \"endpoint1._default.collection1\". "
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointKeyspace"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "put_putimportfilter",
          "description": "Upserts the Import Filter for the given keyspace. By default, there is no import filter and all documents are imported.\n# Import Filters identify the subset of documents eligible to be replicated by App services based on user-defined requirements.\n# This subset is applied to all future mutations.\n# Once the document has been imported and processed by the App Endpoint, changing the Import Filter will not remove it,\n# even if the updated import filters would prevent newer mutations or iterations of the document from getting imported.\n# [Read more.](https://docs.couchbase.com/cloud/app-services/deployment/import-filters.html)\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/javascript: schema: type: string, description: The Javascript function used to specify the documents in this collection that are to be imported by the App Endpoint. By default, all documents in corresponding collection are imported., example:  function(doc) { if (doc.type == 'mobile') { return true; } }",
                "type": "string"
              },
              "appEndpointKeyspace": {
                "type": "string",
                "example": "endpoint1.scope1.collection1",
                "description": "A specific collection denoted by the App Endpoint name, the scope name and collection name separated by a period, for example \"endpoint1.scope1.collection1\". If only an App Endpoint name is provided this will be interpreted as \"endpoint1._default._default\". If only an App Endpoint name and collection name are provided these will interpreted as a named collection within the default scope, for example \"endpoint1.collection1\" will be interpreted as \"endpoint1._default.collection1\". "
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointKeyspace",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "delete_deleteimportfilter",
          "description": "Deletes the Import Filter for the given keyspace.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointKeyspace": {
                "type": "string",
                "example": "endpoint1.scope1.collection1",
                "description": "A specific collection denoted by the App Endpoint name, the scope name and collection name separated by a period, for example \"endpoint1.scope1.collection1\". If only an App Endpoint name is provided this will be interpreted as \"endpoint1._default._default\". If only an App Endpoint name and collection name are provided these will interpreted as a named collection within the default scope, for example \"endpoint1.collection1\" will be interpreted as \"endpoint1._default.collection1\". "
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointKeyspace"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "post_createappendpointoidcprovider",
          "description": "Creates an OIDC provider for the specified App Endpoint.\n# The first OIDC provider will automatically be set as the default OIDC provider.\n# All client requests will use the default OIDC provider, unless the OIDC provider for the request is explicitly specified on authentication.\n# See more [here](https://docs.couchbase.com/cloud/app-services/user-management/set-up-authentication-provider.html#oidc-authorization-step-by-step).\n# \n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: issuer, clientId, properties: issuer: type: string, example: https://example.auth.com, description: The URL for the OpenID Connect issuer., register: type: boolean, example: true, description: Indicates whether to register a new App Service user account when a user logs in using OpenID Connect., clientId: type: string, example: foo_client, description: The OpenID Connect provider client ID., userPrefix: type: string, example: fooOIDC, description: Username prefix for all users created for this provider, discoveryUrl: type: string, example: https://foo.com/.well-known/openid-configuration, description: The URL for the non-standard discovery endpoint., usernameClaim: type: string, example: fooAlt, description: Allows a different OpenID Connect field to be specified instead of the Subject (sub)., rolesClaim: type: string, example: roles, description: If set, the value(s) of the given OpenID Connect authentication token claim will be added to the user's roles. The value of this claim in the OIDC token must be either a string or an array of strings, any other type will result in an error. , example: issuer: foo, register: true, clientId: foo_client, userPrefix: fooOIDC, discoveryUrl: https://foo.com/.well-known/openid-configuration, usernameClaim: fooAlt",
                "type": "string"
              },
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "get_listappendpointoidcproviders",
          "description": "List OpenID Connect (OIDC) Providers configured on an App Endpoint.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "get_getappendpointoidcprovider",
          "description": "Fetches an OIDC provider by ID for the specified App Endpoint.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "OIDCProviderId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the OpenID Connect Provider."
              },
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName",
              "OIDCProviderId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "put_updateappendpointoidcprovider",
          "description": "Updates an OIDC provider for the specified App Endpoint.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: issuer, clientId, properties: issuer: type: string, example: https://example.auth.com, description: The URL for the OpenID Connect issuer., register: type: boolean, example: true, description: Indicates whether to register a new App Service user account when a user logs in using OpenID Connect., clientId: type: string, example: foo_client, description: The OpenID Connect provider client ID., userPrefix: type: string, example: fooOIDC, description: Username prefix for all users created for this provider, discoveryUrl: type: string, example: https://foo.com/.well-known/openid-configuration, description: The URL for the non-standard discovery endpoint., usernameClaim: type: string, example: fooAlt, description: Allows a different OpenID Connect field to be specified instead of the Subject (sub)., rolesClaim: type: string, example: roles, description: If set, the value(s) of the given OpenID Connect authentication token claim will be added to the user's roles. The value of this claim in the OIDC token must be either a string or an array of strings, any other type will result in an error. , example: issuer: foo, register: true, clientId: foo_client, userPrefix: fooOIDC, discoveryUrl: https://foo.com/.well-known/openid-configuration, usernameClaim: fooAlt",
                "type": "string"
              },
              "OIDCProviderId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the OpenID Connect Provider."
              },
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName",
              "OIDCProviderId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "delete_deleteappendpointoidcprovider",
          "description": "Deletes an OIDC provider for the specified App Endpoint. Deleting the default provider will error unless it is the only provider.\n# Before deleting the default provider, you must set a new provider as default or have no other providers.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "OIDCProviderId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the OpenID Connect Provider."
              },
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName",
              "OIDCProviderId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "put_updateappendpointoidcdefaultprovider",
          "description": "Updates the default OIDC provider for the specified App Endpoint.\n# All client requests will use the default OIDC provider, unless the OIDC provider for the request is explicitly specified.\n# See more [here](https://docs.couchbase.com/cloud/app-services/user-management/set-up-authentication-provider.html#oidc-authorization-step-by-step).\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: required: providerId, description: The UUID of the OpenID Connect provider., properties: providerId: type: string, example: ffffffff-aaaa-1414-eeee-000000000000",
                "type": "string"
              },
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "get_getappendpointresync",
          "description": "Fetches the Resync status of the given App Endpoint. If no resync operation was triggered, the response will say the status is completed\n# with 0 values for other properties.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "post_postappendpointresync",
          "description": "Initialises the Resync operation for the given collections.\n# By default, all collections that require resync will be resynced unless they are specified in the scopes property, in which case only\n# the specified collections that require resync will be resynced.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, properties: scopes: type: object, additionalProperties: description: Scope name with one or more collection names for which resync is triggered., type: array, items: type: string, example: scope1: collection_1, collection_2, example: scopes: scope1: collection1, collection2",
                "type": "string"
              },
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Endpoints"
        ],
        "function": {
          "name": "delete_deleteappendpointresync",
          "description": "Stops the Resync operation. When stopping resync, it will be stopped for all collections being processed.\n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "App Services",
    "description": "App Services is a fully managed application backend designed to provide data synchronization between mobile or IoT applications running Couchbase Lite and your Couchbase Capella database.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "App Services"
        ],
        "function": {
          "name": "post_postappservice",
          "description": "Creates a new App Service.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: clusterId, name, properties: name: type: string, description: Name of the cluster (up to 256 characters)., example: MyAppSyncService, maxLength: 256, description: type: string, description: A short description of the App Service., example: My app sync service., nodes: type: integer, description: Number of nodes configured for the App Service. Number of nodes configured for the App Service. The number of nodes can range from 2 to 12., example: 2, compute: type: object, description: The CPU and RAM configuration of the App Service. The supported combinations are: | CPU (cores)| RAM  (GB)   | | --------   |   -------   | | 2          | 4           | | 4          | 8           | | 8          | 16          | | 16         | 32          | | 36         | 72          | , required: cpu, ram, properties: cpu: type: integer, description: CPU units (cores)., example: 2, ram: type: integer, description: RAM units (GB)., example: 4, version: type: string, description: The version of the App Service server. If left empty, it will be defaulted to the latest available version., example: 3.0",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services"
        ],
        "function": {
          "name": "get_listappservices",
          "description": "Lists all the clusters under the organization.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# Returned set of clusters is reduced to what the caller has access to view.\n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **name**, **id**, **description**."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services"
        ],
        "function": {
          "name": "get_getappservice",
          "description": "Fetches the details of the given App Service.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services"
        ],
        "function": {
          "name": "put_putappservice",
          "description": "Updates an existing App Service.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: nodes, compute, properties: nodes: type: integer, description: Number of nodes configured for the App Service. The number of nodes can range from 2 to 12., example: 2, compute: type: object, description: The CPU and RAM configuration of the App Service. The supported combinations are: | CPU (cores)| RAM  (GB)   | | --------   |   -------   | | 2          | 4           | | 4          | 8           | | 8          | 16          | | 16         | 32          | | 36         | 72          | , required: cpu, ram, properties: cpu: type: integer, description: CPU units (cores)., example: 2, ram: type: integer, description: RAM units (GB)., example: 4",
                "type": "string"
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "If_Match": {
                "type": "string",
                "example": "12",
                "description": "A precondition header that specifies the entity tag of a resource."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services"
        ],
        "function": {
          "name": "delete_deleteappservice",
          "description": "Deletes an existing App Service.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services"
        ],
        "function": {
          "name": "post_appserviceon",
          "description": "Turn App Service on. Free tier App Service can only be turned on when the linked free tier cluster is turned on.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services"
        ],
        "function": {
          "name": "delete_appserviceoff",
          "description": "Turn App Service off.\n# \n# Turn off an App Service to temporarily deactivate it and reduce its consumption of compute resources.\n# The App Service itself and its related infrastructure will be removed once turned off.\n# \n# Free tier App Service can only be turned off when the linked free tier cluster is turned off.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services"
        ],
        "function": {
          "name": "post_addappserviceadminuser",
          "description": "Creates an Admin User on the specified App Service.\n# The user can either be granted access to all App Endpoints or to specific App Endpoints by listing them in the ```endpoints``` field.\n# \n# Currently, the user will be granted admin access to all App Endpoints in a bucket (that is currently associated with the App Endpoint(s) specified in the endpoints field), including ones that are created in future.\n# An option to grant access to specific App Endpoints in a bucket will be available in the future.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, password, access, properties: name: type: string, description: The name of the user., example: admin, password: type: string, description: The password of the user., example: password, enableBucketLevelAccess: type: boolean, description: When set to true, the user will automatically be granted admin access to all App Endpoints in a bucket (that is currently associated with the App Endpoint(s) specified in the endpoints field), including ones that are created in future. The flag defaults to true. Currently, the only supported value is true, which means that the user will have admin access to all App Endpoints in this bucket. In the future, there will be the option to set this to false. , default: true, access: oneOf: type: object, required: accessAllEndpoints, properties: accessAllEndpoints: type: boolean, description: Give user access to all App Endpoints., example: false, type: object, required: endpoints, properties: endpoints: type: array, description: The list of App Endpoints that the user has access to., example: appEndpoint1, appEndpoint2, items: type: string, examples: CreateAdminUserSpecificEndpoints: value: name: user1, password: password, enableBucketLevelAccess: false, access: endpoints: endpoint1, endpoint2, CreateAdminUserAllEndpoints: value: name: user1, password: password, access: accessAllEndpoints: true",
                "type": "string"
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services"
        ],
        "function": {
          "name": "get_listappserviceadminusers",
          "description": "List the admin users for the specified App Service.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services"
        ],
        "function": {
          "name": "put_updateappserviceadminuser",
          "description": "Updates the Admin User's access to App Endpoints on the specified App Service.\n# The update operation can either grant access to all App Endpoints or to specific App Endpoints by listing them in the ```endpoints``` field.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: oneOf: type: object, required: endpoints, properties: endpoints: type: array, description: The list of App Endpoints that the user has access to., example: appEndpoint1, appEndpoint2, items: type: string, type: object, required: accessAllEndpoints, properties: accessAllEndpoints: type: boolean, description: Give user access to all App Endpoints., example: false, examples: UpdateAdminUserSpecificEndpoints: value: endpoints: endpoint1, endpoint2, UpdateAdminUserAllEndpoints: value: accessAllEndpoints: true",
                "type": "string"
              },
              "userId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the database credential."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "userId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services"
        ],
        "function": {
          "name": "delete_deleteappserviceadminuser",
          "description": "Deletes the Admin User.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the database credential."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "userId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services"
        ],
        "function": {
          "name": "get_getappserviceadminuser",
          "description": "Fetches the Admin User.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the database credential."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "userId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services"
        ],
        "function": {
          "name": "get_getappservicecertificate",
          "description": "The public certificate is a trusted Certificate Authority (CA) signed certificate.\n# You can copy or download the endpoint’s SSL public certificate to bundle into your mobile application.\n# Pinning your certificate to your App is not recommended as it can increase maintenance overhead and downtime risks.\n# For more information, see [here](https://docs.couchbase.com/cloud/app-services/connect/connect-apps-to-endpoint.html#setting-up-the-connection).\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services"
        ],
        "function": {
          "name": "get_listappendpointadminusers",
          "description": "Lists the Admin Users that have access to the specified App Endpoint.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "App Services Audit Logging",
    "description": "Users can configure audit log support on Capella App Services and can export audit logs from cloud blob storage to an AWS S3 bucket. Users can retrieve audit logs from a pre-signed download URL. Logs are retained for 30 days.",
    "functions": [
      {
        "type": "function",
        "tags": [
          "App Services Audit Logging"
        ],
        "function": {
          "name": "put_putappserviceauditlogstate",
          "description": "Enable or disable Audit Logging for an App Service.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n# \n#  To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: auditEnabled, properties: auditEnabled: type: boolean, description: Determines whether audit logging is enabled or not on the App Service.",
                "type": "string"
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services Audit Logging"
        ],
        "function": {
          "name": "get_getappserviceauditlogstate",
          "description": "Retrieves the audit logging state for a specific App Service.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services Audit Logging"
        ],
        "function": {
          "name": "get_getappserviceauditlogevents",
          "description": "Retrieves all audit log event ids, their descriptions and enabled status for an App Endpoint.\n# The list of filterable event IDs can be specified while configuring audit logging for the App Service.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services Audit Logging"
        ],
        "function": {
          "name": "put_putappendpointauditlogconfig",
          "description": "Updates the audit logging configuration for a specific App Endpoint. Operations performed by disabled users and roles are excluded from audit logs.\n# See a list of event IDs by calling /auditLogEvents, add event IDs to the enabledEventIds field to enable audit logging for those events.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n# \n#  To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, properties: auditEnabled: type: boolean, description: Determines whether audit logging is enabled, enabledEventIds: type: array, items: type: object, properties: id: type: integer, description: ID of the enabled event, disabledUsers: type: array, items: type: object, required: domain, name, properties: domain: type: string, description: Domain of the user/role. Can be used to filter logs by domain. Example values:   - sgw   - cbs , name: type: string, description: Name of the user/role, maxLength: 256, disabledRoles: type: array, items: type: object, required: domain, name, properties: domain: type: string, description: Domain of the user/role. Can be used to filter logs by domain. Example values:   - sgw   - cbs , name: type: string, description: Name of the user/role, maxLength: 256",
                "type": "string"
              },
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services Audit Logging"
        ],
        "function": {
          "name": "get_getappendpointauditlogconfig",
          "description": "Retrieves the audit logging configuration for a specific App Endpoint.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appEndpointName": {
                "type": "string",
                "example": "endpoint1",
                "description": "The name of the App Endpoint."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "appEndpointName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services Audit Logging"
        ],
        "function": {
          "name": "put_putappserviceauditlogstreaming",
          "description": "Sets up audit log streaming for a specific App Service with filters. If streamingEnabled is true log streaming will begin.\n# \n# Ensure you have provided collector credentials if you wish to begin streaming; log streaming cannot be enabled without credentials.\n# Refer to schema below to see required fields for your log collection provider.\n# Providers include Datadog, Sumo Logic, Grafana Loki, Elasticsearch (versions 8 and newer only) and generic HTTP.\n# To start or resume streaming, set streamingEnabled to true while providing the rest of the log collector config.\n# \n# To disable log streaming and remove the log streaming config including credentials, set streamingEnabled to false and leave the rest of the payload empty.\n# \n# To pause log streaming, set streamingEnabled to false while providing the rest of the log collector config.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n# \n#  To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, properties: streamingEnabled: type: boolean, description: Determines whether audit log streaming is enabled or not. To start or resume streaming, set this to true. To disable or pause log streaming, set this to false., disabledAppEndpoints: type: array, items: type: string, description: List of App Endpoints to be excluded from audit log streaming., outputType: type: string, description: The type of output for the audit log streaming. Required when starting, resuming or pausing log streaming., example: datadog, credentials: description: Secrets for audit log streaming configuration. Required when starting, resuming or pausing log streaming., type: object, oneOf: type: object, required: apiKey, url, properties: apiKey: type: string, description: The API key for authentication, url: type: string, description: The DataDog log ingestion URL, example: apiKey: apiKey, url: https://http-intake.logs.datadoghq.eu, type: object, required: url, properties: url: type: string, description: The SumoLogic signed URL for the log ingestion, example: url: https://endpoint1.collection.us2.sumologic.com/receiver/v1/http/AaBbCc12345678, type: object, required: url, properties: user: type: string, description: The username for HTTP authentication, if required, password: type: string, description: The password for HTTP authentication, if required, url: type: string, description: The URL for a generic HTTP log collector, example: user: httpUser, password: password, url: https://host:8080/endpoint, type: object, required: user, password, url, properties: user: type: string, description: The username for the Elasticsearch log collector, password: type: string, description: The password for the Elasticsearch log collector, url: type: string, description: The URL for the Elasticsearch log collector, example: user: elasticUser, password: password, url: https://elasticsearch:9200/_bulk, type: object, required: user, password, url, properties: user: type: string, description: The username for the Grafana Loki log collector, password: type: string, description: The password for the Grafana Loki log collector, url: type: string, description: The URL for the Grafana Loki log collector, example: user: lokiUser, password: password, url: https://loki:3100/loki/api/v1/push, required: streamingEnabled",
                "type": "string"
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services Audit Logging"
        ],
        "function": {
          "name": "patch_patchappserviceauditlogstreaming",
          "description": "To start or resume streaming, set streamingEnabled to true. To pause log streaming, set streamingEnabled to false.\n# \n# If log streaming is paused we will retain the collector credentials. To clear these use the PUT request.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#   - Organization Owner\n#   - Project Owner\n#   - Project Manager\n# \n#   To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: op, path, value, properties: op: type: string, description: Type of operation., enum: update, path: type: string, example: /streamingEnabled, description: Path of resource that needs to be updated. , value: type: boolean, description: Determines whether audit log streaming is enabled or not.",
                "type": "string"
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services Audit Logging"
        ],
        "function": {
          "name": "get_getappserviceauditlogstreaming",
          "description": "Retrieves the current state of audit log streaming for a specific App Service, as well as the output type and enabled App endpoints.\n# \n# The audit log streaming states are:\n#   - disabled\n#   - disabling\n#   - enabled\n#   - enabling\n#   - paused\n#   - pausing\n#   - errored\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n# \n#  To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services Audit Logging"
        ],
        "function": {
          "name": "post_postappserviceauditlogexport",
          "description": "Initiates an audit log export for a specific App Service.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n# \n#  To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: start, end, properties: start: type: string, format: date-time, description: Specifies the audit log's start date and time., example: 2023-05-15T04:56:07.000+00:00, end: type: string, format: date-time, description: Specifies the audit log's end date and time., example: 2023-05-16T04:56:07.000+00:00, examples: PostClusterCreateAuditLogExport: value: start: 2022-09-04T00:56:07.000Z, end: 2022-09-05T04:56:07.000Z",
                "type": "string"
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services Audit Logging"
        ],
        "function": {
          "name": "get_listappserviceauditlogexports",
          "description": "Retrieves a list of all audit log export jobs for an App Service.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "App Services Audit Logging"
        ],
        "function": {
          "name": "get_getappserviceauditlogexportbyid",
          "description": "Retrieves details of a specific audit log export job for a given App Service.\n# \n#  In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n# \n#  To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "auditLogExportId": {
                "type": "string",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The export ID of the audit log export job."
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "auditLogExportId"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Audit Logs",
    "description": "Users can configure audit log support on Capella database and can export audit logs from cloud blob storage to an AWS S3 bucket. Users can retrieve audit logs from a pre-signed download URL. Logs are retained for 30 days.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Audit Logs"
        ],
        "function": {
          "name": "put_putclusterauditsettings",
          "description": "Updates the audit log configuration for the cluster.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#   - Organization Owner\n#   - Project Owner\n#   - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: auditEnabled, disabledUsers, enabledEventIDs, properties: auditEnabled: type: boolean, description: Determines whether audit logging is enabled or not on the cluster., example: true, disabledUsers: type: array, description: List of users whose filterable events will not be logged., items: type: object, properties: domain: type: string, description: Specifies whether the user is local or external., example: local, name: type: string, description: The user name., example: dfelton, enabledEventIDs: type: array, description: List of enabled filterable audit events for the cluster., items: type: integer, format: int32, example: 8243, 8255, examples: PutClusterEnableAuditLogging: value: auditEnabled: true, disabledUsers: domain: local, name: @eventing, enabledEventIDs: 8243, 8255",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Audit Logs"
        ],
        "function": {
          "name": "get_getclusterauditsettings",
          "description": "Fetches information on whether audit logging is enabled, and which event IDs are enabled.\n# \n# To learn more about cluster audit logs, please refer to [audit management](https://docs.couchbase.com/cloud/security/audit-management.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Audit Logs"
        ],
        "function": {
          "name": "get_getauditlogeventids",
          "description": "Retrieves a list of audit event IDs. The list of filterable event IDs can be specified while configuring audit log for cluster.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Audit Logs"
        ],
        "function": {
          "name": "post_postauditlogexport",
          "description": "Creates a new audit log export job.\n# \n# Audit Logs for the last 30 days can be requested, otherwise they are purged. A pre-signed URL to a s3 bucket location is returned, which is used to download these audit logs.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#   - Organization Owner\n#   - Project Owner\n#   - Project Manager\n#   - Project Viewer\n#   - Database Data Reader/Writer\n#   - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: start, end, properties: start: type: string, format: date-time, description: Specifies the audit log's start date and time., example: 2023-05-15T04:56:07.000+00:00, end: type: string, format: date-time, description: Specifies the audit log's end date and time., example: 2023-05-16T04:56:07.000+00:00, examples: PostClusterCreateAuditLogExport: value: start: 2022-09-04T00:56:07.000Z, end: 2022-09-05T04:56:07.000Z",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Audit Logs"
        ],
        "function": {
          "name": "get_listauditlogexports",
          "description": "Lists all the audit log export jobs and shows the status for each job.\n# \n# It will show the pre-signed URL if the export was successful, a failure error if it was unsuccessful or a message saying no audit logs available if there were no audit logs found.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Audit Logs"
        ],
        "function": {
          "name": "get_getauditlogexport",
          "description": "Fetches the status of a single audit log export job.\n# \n# It will show the pre-signed URL if the export was successful, a failure error if it was unsuccessful or a message saying no audit logs available if there were no audit logs found during the given timeframe.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "auditLogExportId": {
                "type": "string",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The export ID of the audit log export job."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "auditLogExportId"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Backup Schedule (Bucket)",
    "description": "Couchbase supports a robust scheduled backup and retention time policy as part of an overall disaster recovery plan for production data.\nCouchbase Capella supports scheduled and on-demand backups of bucket data.\nA backup can be restored to the same database where it was created or another database in the same organization.\nOn setting up a backup schedule, the bucket automatically backs up the bucket based on the chosen schedule.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Backup Schedule (Bucket)"
        ],
        "function": {
          "name": "post_postbackupschedule",
          "description": "Creates a scheduled backup for a bucket.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: description: Backup schedule type., type: object, properties: type: type: string, enum: weekly, example: weekly, weeklySchedule: type: object, description: Schedule a full backup once a week with regular incrementals., required: dayOfWeek, startAt, incrementalEvery, retentionTime, costOptimizedRetention, properties: dayOfWeek: type: string, description: Day of the week for the backup., enum: sunday, monday, tuesday, wednesday, thursday, friday, saturday, example: sunday, startAt: type: integer, description: Start at hour (in 24-Hour format)., enum: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, incrementalEvery: type: integer, description: Interval in hours for incremental backup., enum: 1, 2, 4, 6, 8, 12, 24, example: 4, retentionTime: type: string, description: Retention time in days., enum: 30days, 60days, 90days, 180days, 1year, 2years, 3years, 4years, 5years, example: 90days, costOptimizedRetention: type: boolean, description: Optimize backup retention to reduce total cost of ownership (TCO). This gives the option to keep all but the last backup cycle of the month for thirty days; the last cycle will be kept for the defined retention period. To learn more, see [Cost Optimized Retention Policy](https://docs.couchbase.com/cloud/clusters/backup-restore.html#cost-optimized-retention-policy)., example: false, examples: CreateScheduledBackup: value: type: weekly, weeklySchedule: dayOfWeek: sunday, startAt: 10, incrementalEvery: 4, retentionTime: 90days, costOptimizedRetention: false",
                "type": "string"
              },
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Backup Schedule (Bucket)"
        ],
        "function": {
          "name": "get_getbackupschedule",
          "description": "Fetched the backup schedule for a bucket in a cluster.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Backup Schedule (Bucket)"
        ],
        "function": {
          "name": "put_putbackupschedule",
          "description": "Updates an existing backup schedule.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: description: Backup schedule type., type: object, properties: type: type: string, enum: weekly, example: weekly, weeklySchedule: type: object, description: Schedule a full backup once a week with regular incrementals., required: dayOfWeek, startAt, incrementalEvery, retentionTime, costOptimizedRetention, properties: dayOfWeek: type: string, description: Day of the week for the backup., enum: sunday, monday, tuesday, wednesday, thursday, friday, saturday, example: sunday, startAt: type: integer, description: Start at hour (in 24-Hour format)., enum: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, incrementalEvery: type: integer, description: Interval in hours for incremental backup., enum: 1, 2, 4, 6, 8, 12, 24, example: 4, retentionTime: type: string, description: Retention time in days., enum: 30days, 60days, 90days, 180days, 1year, 2years, 3years, 4years, 5years, example: 90days, costOptimizedRetention: type: boolean, description: Optimize backup retention to reduce total cost of ownership (TCO). This gives the option to keep all but the last backup cycle of the month for thirty days; the last cycle will be kept for the defined retention period. To learn more, see [Cost Optimized Retention Policy](https://docs.couchbase.com/cloud/clusters/backup-restore.html#cost-optimized-retention-policy)., example: false",
                "type": "string"
              },
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Backup Schedule (Bucket)"
        ],
        "function": {
          "name": "delete_deletebackupschedule",
          "description": "Deletes an existing backup schedule\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Backup Schedule (Bucket)"
        ],
        "function": {
          "name": "get_listcycles",
          "description": "Lists the cycles for a bucket in a cluster.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "endDate": {
                "type": "string",
                "format": "date",
                "description": "Filters bucket backups till the end date. Specify the end date to retrieve relevant bucket backups till end date. ",
                "example": "2023-07-21"
              },
              "startDate": {
                "type": "string",
                "format": "date",
                "description": "Filters bucket backups beginning from the start date. Specify the start date to retrieve relevant bucket backups from start date. ",
                "example": "2023-07-19"
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Backup Schedule (Bucket)"
        ],
        "function": {
          "name": "get_listbackups",
          "description": "Lists the backups for a cycle in a bucket.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "cycleId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cycle."
              },
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId",
              "cycleId"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Backups & Restore (Bucket)",
    "description": "Couchbase supports a robust scheduled backup and retention time policy as part of an overall disaster recovery plan for production data.\nCouchbase Capella supports scheduled and on-demand backups of bucket data.\nA backup can be restored to the same database where it was created or another database in the same organization.\nAn on-demand backup of a bucket is always a Full backup.\nCapella schedules on-demand backup to start immediately.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Backups & Restore (Bucket)"
        ],
        "function": {
          "name": "post_postbackup",
          "description": "Creates an on-demand backup for a bucket.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Backups & Restore (Bucket)"
        ],
        "function": {
          "name": "get_listclusterbackups",
          "description": "Lists the latest backup for all buckets in a cluster.\n# \n# Note: This endpoint doesn’t return queued backups and only returns ones that are actively being processed or are completed/failed.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Backups & Restore (Bucket)"
        ],
        "function": {
          "name": "get_getbackupbyid",
          "description": "Fetches the details of an existing backup.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "backupId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the backup."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "backupId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Backups & Restore (Bucket)"
        ],
        "function": {
          "name": "delete_deletebackupcyclebyid",
          "description": "Deletes the backup records that belong to the same cycle from the DB by using the backup ID.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "backupId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the backup."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "backupId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Backups & Restore (Bucket)"
        ],
        "function": {
          "name": "post_postrestore",
          "description": "Creates an on-demand restore job for a backup immediately.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: targetClusterID, sourceClusterID, backupID, services, properties: targetClusterID: type: string, format: uuid, example: ffffffff-aaaa-1414-eeee-000000000000, description: The ID of the target cluster to restore to., sourceClusterID: type: string, format: uuid, example: ffffffff-aaaa-1414-eeee-000000000000, description: The ID of the source cluster the restore is based on., backupID: type: string, format: uuid, example: ffffffff-aaaa-1414-eeee-000000000000, description: The backup record ID that contains the backup to restore from., services: type: array, items: type: string, enum: data, query, example: data, query, forceUpdates: type: boolean, example: true, description: Forces data in the Couchbase cluster to be overwritten even if the data in the cluster is newer., autoRemoveCollections: type: boolean, example: true, description: Automatically delete scopes/collections which are known to be deleted in the backup., filterKeys: type: string, example: , description: Only restore data where the key matches a particular regular expression., filterValues: type: string, example: , description: Only restore data where the value matches a particular regular expression., includeData: type: string, example: bucket-1.scope1, description: Restores only the data specified here., excludeData: type: string, example: bucket-1.scope1.coll1, description: Skips restoring the data specified here., mapData: type: string, example: bucket1=new1, description: Specified when you want to restore source data into a different location., replaceTTL: type: string, description: Sets a new expiration (time-to-live) value for the specified keys., enum: none, all, expired, example: all, replaceTTLWith: type: string, description: Updates the expiration for the keys., example: 2021-09-01T12:34:56Z",
                "type": "string"
              },
              "backupId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the backup."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "backupId",
              "body"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Buckets, Scopes, & Collections",
    "description": "A bucket is the fundamental space for storing data in Couchbase Capella.\nScopes and Collections are logical containers within a bucket and a way for organizing data within buckets.\nA scope is a mechanism for the grouping of multiple collections. A collection is a data container for related documents.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "post_postbucket",
          "description": "Creates a new bucket configuration under a cluster.\n# \n# To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, properties: name: type: string, description: Name of the bucket. This field cannot be changed later. The name should adhere to the following rules:  1. Characters used for the name should be in the ranges of A-Z, a-z, and 0-9; plus the underscore, period, dash, and percent characters.  2. The name can be a maximum of 100 characters in length.  3. The name cannot have 0 characters or empty. Minimum length of name is 1.  4. The name cannot start with a `.` (period). , maxLength: 100, example: My-First-Bucket, type: type: string, description: Type of the bucket.  - If selected Ephemeral, it is not eligible for imports or App Endpoints creation. This field cannot be changed later.  - The options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.  To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket). , enum: couchbase, ephemeral, default: couchbase, storageBackend: type: string, description: The storage engine to be assigned to and used by the bucket.  - Ephemeral buckets do not support StorageBackend, hence not applicable for Ephemeral buckets and throws an error if this field is added.  - This field is only applicable for a Couchbase bucket. The default value mentioned (Couchstore) is for Couchbase bucket.  - This field cannot be changed later.    To learn more, see [Storage Engines](https://docs.couchbase.com/cloud/clusters/data-service/storage-engines.html). , enum: couchstore, magma, example: couchstore, default: couchstore, memoryAllocationInMb: type: integer, description: The amount of memory to allocate for the bucket memory in MiB. This is the maximum limit is dependent on the allocation of the KV service. For example, 80% of the allocation.  - The default value (100MiB) mentioned is for Couchbase type buckets with Couchstore as the Storage Backend.  - For Couchbase buckets, the default and minimum memory allocation changes according to the Storage Backend type as follows:    1. For Couchstore, the default and minimum memory allocation is 100 MiB.    2. For Magma, the default and minimum memory allocation is 1024 MiB.  - For Ephemeral buckets, the default and minimum memory allocation is 100 MiB. , example: 100, default: 100, bucketConflictResolution: type: string, description: The means by which conflicts are resolved during replication.  - This field may be referred to as \"conflict resolution\" in the Couchbase documentation, and `seqno` and `lww` may be referred to as \"sequence number\" and \"timestamp\" respectively.  - This field cannot be changed later.   To learn more, see [Conflict Resolution](https://docs.couchbase.com/cloud/clusters/xdcr/xdcr.html#conflict-resolution). , enum: seqno, lww, default: seqno, durabilityLevel: type: string, description: This is the minimum level at which all writes to the bucket must occur.   The options for Durability level are as follows, according to the bucket type.   - For a Couchbase bucket:     1. None     2. Replicate to Majority     3. Majority and Persist to Active     4. Persist to Majority   - For an Ephemeral bucket:     1. None     2. Replicate to Majority   To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket). , enum: none, majority, majorityAndPersistActive, persistToMajority, default: none, replicas: type: integer, description: The number of replicas for the bucket. To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket)., enum: 1, 2, 3, default: 1, flush: type: boolean, description: Replaced by flushEnabled. This property is deprecated and will be removed in a future release.  Determines whether flushing is enabled on the bucket. Enable Flush to delete all items in this bucket at the earliest opportunity. Disable Flush to avoid inadvertent data loss. , default: false, example: false, deprecated: true, flushEnabled: type: boolean, description: Determines whether bucket flush is enabled. Set flushEnabled to true to be able to delete all items in this bucket using the /flush endpoint. Disable flushEnabled to avoid inadvertent data loss by calling the /flush endpoint ., default: false, example: false, timeToLiveInSeconds: type: integer, description: Specify the time to live (TTL) value in seconds. This is the maximum time to live for items in the bucket. Default is 0, that means TTL is disabled. This is a non-negative value., default: 0, example: 0, evictionPolicy: type: string, description: The policy which Capella adopts to prevent data loss due to memory exhaustion. This may be also known as Ejection Policy in the Couchbase documentation.   - For Couchbase bucket, Eviction Policy is `fullEviction` by default.  - For Ephemeral buckets, Eviction Policy is a required field, and should be one of the following:     1. noEviction     2. nruEviction    To learn more, see [Ejection Policy](https://docs.couchbase.com/server/current/rest-api/rest-bucket-create.html#evictionpolicy). , enum: fullEviction, noEviction, nruEviction, example: fullEviction, default: fullEviction, priority: type: integer, description: Priority of the bucket.  - Specify relative bucket priority so that buckets will be recovered in the order specified during failover.  - Bucket ranking/priority is only available in Couchbase Server 7.6 and above  - Default bucket priority is 0 and can be set to a value between 0 and 1000. 1000 is the highest priority and 0 is the lowest. , default: 0, examples: PostBucketTypeCouchbase: value: name: CBExample1, type: couchbase, storageBackend: couchstore, memoryAllocationInMb: 105, bucketConflictResolution: seqno, durabilityLevel: majorityAndPersistActive, replicas: 2, flush: true, timeToLiveInSeconds: 100, PostBucketTypeEphemeral: value: name: EPExample2, type: ephemeral, memoryAllocationInMb: 105, bucketConflictResolution: seqno, durabilityLevel: majority, replicas: 2, flush: true, timeToLiveInSeconds: 100, evictionPolicy: nruEviction, PostBucketWithDefaults: value: name: test-default-bucket, PostBucketWithEphemeralDefaults: value: name: ephemeral-default, type: ephemeral, PostBucketWithPersistToMajority: value: name: test-cb2, memoryAllocationInMb: 120, bucketConflictResolution: seqno, durabilityLevel: persistToMajority, PostBucketWithEphemeralNoEviction: value: name: testEph, type: ephemeral, evictionPolicy: nruEviction, durabilityLevel: majority, replicas: 2, flush: true, timeToLiveInSeconds: 100, PostBucketWithCouchbaseMagma: value: name: testCbMagmadefault, type: couchbase, storageBackend: magma, PostBucketWithBucketPriority: value: name: testCbBucketPriority, priority: 100",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "get_listbuckets",
          "description": "Lists all the buckets under the cluster.\n# \n# To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "get_getbucketbyid",
          "description": "Fetches the configuration of the given bucket.\n# \n# To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "put_putbucket",
          "description": "Updates an existing bucket.\n# \n# To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: memoryAllocationInMb, durabilityLevel, replicas, timeToLiveInSeconds, properties: memoryAllocationInMb: type: integer, description: The new amount of memory to allocate for the bucket memory in MiB. The maximum limit is dependent on the allocation of the KV service; for example, 80% of the allocation.  - For Couchbase buckets, the default and minimum memory allocation changes according to the Storage Backend type, as follows:    1. For Couchstore, the default and minimum memory allocation is 100 MiB.    2. For Magma, the default and minimum memory allocation is 1024 MiB.  - For Ephemeral buckets, the default and minimum memory allocation is 100 MiB. , example: 100, durabilityLevel: type: string, description: This is the minimum level at which all writes to the bucket must occur.  The options for Durability level are as follows, according to the bucket type.  - For a Couchbase bucket:    1. None    2. Replicate to Majority    3. Majority and Persist to Active    4. Persist to Majority  - For an Ephemeral bucket:    1. None    2. Replicate to Majority    To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket). , enum: none, majority, majorityAndPersistActive, persistToMajority, replicas: type: integer, description: The number of replicas for the bucket. To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket)., enum: 1, 2, 3, flush: type: boolean, description: Replaced by flushEnabled. This property is deprecated and will be removed in a future release.  The new value of flush property. This determines whether bucket flush is enabled. Enable Flush to be able to delete all items in this bucket at the earliest opportunity using /flush endpoint. Disable Flush to avoid inadvertent data loss by calling the /flush endpoint , default: false, deprecated: true, flushEnabled: type: boolean, description: This determines whether bucket flush is enabled. Enable flushEnabled to delete all items in this bucket at the earliest opportunity by calling the /flush endpoint. Disable flushEnabled to avoid inadvertent data loss by calling the /flush endpoint., default: false, timeToLiveInSeconds: type: integer, description: Specify the new time to live (TTL) value in seconds. This is the maximum time to live for items in the bucket. If specified as 0, TTL is disabled. This is a non-negative value., example: 100, priority: type: integer, description: Priority of the bucket.  - Specify relative bucket priority so that buckets will be recovered in the order specified during failover.  - Bucket ranking/priority is only available in Couchbase Server 7.6 and above  - Default bucket priority is 0 and can be set to a value between 0 and 1000. 1000 is the highest priority and 0 is the lowest. , default: 0",
                "type": "string"
              },
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "delete_deletebucketbyid",
          "description": "Deletes an existing bucket.\n# \n# To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "put_flushbucket",
          "description": "Flushing of the bucket occurs, causing all items in the bucket to be deleted by the system at the earliest opportunity.\n# This operation can only be performed if the bucket has been configured with flushEnabled to true. If it is disabled, \n# it will throw an error.\n# \n# It is recommended not to run with the flushEnabled configuration set to true in production; \n# due to the danger of all a bucket's data being inadvertently lost. \n# \n# To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "post_postscope",
          "description": "Creates a new scope in a bucket.\n# \n# To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n# \n#  In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, properties: name: type: string, description: The name of the scope. The name should adhere to the following rules:  1. The name must be between 1 and 251 characters in length.  2. The name can contain only the characters A-Z, a-z, 0-9, and the symbols _, -, and %.  3. The name cannot start with _ or %.  Note that scope and collection names are case-sensitive. , example: my-scope",
                "type": "string"
              },
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "get_getscopes",
          "description": "Lists all the scopes in the bucket.\n# \n# To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "get_getscopebyname",
          "description": "Fetches the details of the given scope.\n# \n# To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n#  To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "scopeName": {
                "type": "string",
                "example": "inventory",
                "description": "The name of the scope."
              },
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId",
              "scopeName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "delete_deletescopebyname",
          "description": "Deletes an existing scope.\n# \n# To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "scopeName": {
                "type": "string",
                "example": "inventory",
                "description": "The name of the scope."
              },
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId",
              "scopeName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "post_postcollection",
          "description": "Creates a new collection in a scope.\n# \n# To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, properties: name: type: string, description: The name of the collection. The name should adhere to the following rules:  1. The name must be between 1 and 251 characters in length.  2. The name can contain only the characters A-Z, a-z, 0-9, and the symbols _, -, and %.  3. The name cannot start with _ or %.  Note that scope and collection names are case-sensitive. , example: my-collection, maxTTL: type: integer, description: Specify the time to live (TTL) value in seconds. Defines the duration (Seconds) for which the documents in a collection are kept before automatic removal from the database. -  For server versions < 7.6.0, this is a non-negative value. Set to 0 to use the bucket's maxTTL value. -  For server versions >= 7.6.0, this value should be >= -1. Set to -1 to disable expiry for that collection. Set to 0 to use the bucket's maxTTL value. -  The maximum value that can be set for maxTTL is 2147483647., example: 100",
                "type": "string"
              },
              "scopeName": {
                "type": "string",
                "example": "inventory",
                "description": "The name of the scope."
              },
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId",
              "scopeName",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "get_getcollections",
          "description": "Lists all the collections in a scope.\n# \n# To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "scopeName": {
                "type": "string",
                "example": "inventory",
                "description": "The name of the scope."
              },
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId",
              "scopeName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "get_getcollectionbyname",
          "description": "Fetches the details of the given collection.\n# \n# To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n#  To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "collectionName": {
                "type": "string",
                "example": "airline",
                "description": "The name of the collection."
              },
              "scopeName": {
                "type": "string",
                "example": "inventory",
                "description": "The name of the scope."
              },
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId",
              "scopeName",
              "collectionName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "put_putcollection",
          "description": "Updates an existing collection.\n# \n# This operation is only allowed for a cluster with server version >= 7.6.0. A collection cannot be updated for the server versions lower than this.\n# \n# This allows to update the maxTTL of the given collection.\n# \n# To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: maxTTL, properties: maxTTL: type: integer, description: Specify the new time to live (TTL) value in seconds.  -  This value should be >= -1. Set to -1 to disable expiry for that collection.  -  Set to 0 to use the bucket's maxTTL value.  -  The maximum value that can be set for maxTTL is 2147483647. , example: 100",
                "type": "string"
              },
              "collectionName": {
                "type": "string",
                "example": "airline",
                "description": "The name of the collection."
              },
              "scopeName": {
                "type": "string",
                "example": "inventory",
                "description": "The name of the scope."
              },
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId",
              "scopeName",
              "collectionName",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Buckets, Scopes, & Collections"
        ],
        "function": {
          "name": "delete_deletecollectionbyname",
          "description": "Deletes an existing collection.\n# \n# To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "collectionName": {
                "type": "string",
                "example": "airline",
                "description": "The name of the collection."
              },
              "scopeName": {
                "type": "string",
                "example": "inventory",
                "description": "The name of the scope."
              },
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId",
              "scopeName",
              "collectionName"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "CMEK",
    "description": "The CMEK (Customer Managed Encryption Keys) endpoints facilitate the management of encryption keys used by clusters for data encryption.\nThey allow organizations to register, list, retrieve, rotate, and delete the metadata associated with their own encryption keys within Capella.\nThis suite of endpoints ensures that organizations have full control over the lifecycle of their keys, enhancing security and compliance by allowing encryption keys that are managed in external key management services like AWS KMS or GCP KMS to be used within the organization's clusters.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "CMEK"
        ],
        "function": {
          "name": "get_getcloudaccounts",
          "description": "Fetches the cloud account ID associated with the organization. Use this account ID when adding CMEK to other AWS databases in your organization.\n# \n# To learn more, see [CMEK at Rest](https://docs.couchbase.com/cloud/security/cmek.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#   - Organization Owner\n#   - Project Creator\n#   - Organization Member\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "CMEK"
        ],
        "function": {
          "name": "post_postcmekmetadata",
          "description": "Initializes the metadata record for a customer-managed encryption key stored in AWS or GCP, linking it to the organization.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, config, properties: name: type: string, description: Name of the key (up to 256 characters)., example: Test Key, maxLength: 128, description: type: string, description: Description of the key (up to 1024 characters)., example: Description of the Key, maxLength: 512, config: oneOf: type: object, required: arn, properties: arn: type: string, description: The Amazon Resource Name (ARN) that uniquely identifies the AWS KMS key., example: arn:aws:kms:us-west-2:123456789012:key/abcd1234-a123-456a-a12b-a123b4cd56ef, type: object, required: resourceName, properties: resourceName: type: string, description: The unique identifier for a GCP resource, specifying the project, location, key ring, and the key within Cloud KMS., example: projects/my-project/locations/global/keyRings/my-key-ring/cryptoKeys/my-key, example: arn: arn:aws:kms:us-west-2:123456789012:key/abcd1234-a123-456a-a12b-a123b4cd56ef",
                "type": "string"
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "CMEK"
        ],
        "function": {
          "name": "get_getkeymetadatalist",
          "description": "Retrieves detailed metadata for all customer-managed encryption keys associated with the organization.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Organization Member\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Sets the order of how you would like to sort the results and the key you would like to order by."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "CMEK"
        ],
        "function": {
          "name": "get_listcmekhistory",
          "description": "Retrieves the full history of rotations for a specific customer-managed encryption key within the organization.\n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Organization Member\n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "cmekId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the KMS Key metadata."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "string",
                "enum": [
                  "active",
                  "associatedAt",
                  "associatedBy",
                  "key"
                ],
                "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **active**, **associatedAt**, **associatedBy**, **key** "
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "cmekId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "CMEK"
        ],
        "function": {
          "name": "get_getkeymetadata",
          "description": "Retrieves the full metadata details for a specific customer-managed encryption key within the organization.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Organization Member\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "cmekId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the KMS Key metadata."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "cmekId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "CMEK"
        ],
        "function": {
          "name": "put_rotatecmekkey",
          "description": "Initiates the process to rotate a customer-managed encryption key and update its associated metadata within the system.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: config, properties: config: oneOf: type: object, required: arn, properties: arn: type: string, description: The Amazon Resource Name (ARN) that uniquely identifies the AWS KMS key., example: arn:aws:kms:us-west-2:123456789012:key/abcd1234-a123-456a-a12b-a123b4cd56ef, type: object, required: resourceName, properties: resourceName: type: string, description: The unique identifier for a GCP resource, specifying the project, location, key ring, and the key within Cloud KMS., example: projects/my-project/locations/global/keyRings/my-key-ring/cryptoKeys/my-key, example: arn: arn:aws:kms:us-west-2:123456789012:key/abcd1234-a123-456a-a12b-a123b4cd56ef",
                "type": "string"
              },
              "cmekId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the KMS Key metadata."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "cmekId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "CMEK"
        ],
        "function": {
          "name": "delete_deletekeymetadata",
          "description": "Permanently removes the specified customer-managed encryption key's metadata from the organization's account.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "cmekId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the KMS Key metadata."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "cmekId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "CMEK"
        ],
        "function": {
          "name": "post_associatecmek",
          "description": "Redeploys the cluster and encrypts the disks with the newly associated customer-managed encryption key.\n# Throws an error before redeploying the cluster if the customer-managed encryption key is inaccessible.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "cmekId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the KMS Key metadata."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "cmekId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "CMEK"
        ],
        "function": {
          "name": "post_unassociatecmek",
          "description": "Removes the customer-managed encryption key associated with the cluster, which redeploys the cluster and removes any encryption on the disks.\n# This does not delete the customer-managed encryption key itself since the same key could be used across clusters.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "cmekId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the KMS Key metadata."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "cmekId"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Certificates",
    "description": "Couchbase Capella supports the use of x.509 certificates, for clients and servers.\nThis ensures that only approved users, applications, machines, and endpoints have access to system resources.\nConsequently, the mechanism can be used by Couchbase SDK clients to access Couchbase Services, and by source clusters that use XDCR to replicate data to target clusters.\nClients can verify the identity of Couchbase Capella, thereby ensuring that they are not exchanging data with a rogue entity.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Certificates"
        ],
        "function": {
          "name": "get_getcertificate",
          "description": "In order to access this endpoint, the provided API key must have at least one of the following roles:\n#   - Organization Owner\n#   - Project Owner\n#   - Project Manager\n#   - Project Viewer\n#   - Database Data Reader/Writer\n#   - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Cloud Snapshot Backups & Restore",
    "description": "Couchbase supports a robust scheduled backup and retention time policy as part of an overall disaster recovery plan for production data.\nCouchbase Capella supports scheduled and on-demand backups of cloud snapshot data.\nA backup can be restored to the same database where it was created or another database in the same organization.\nA backup can also be cloned to create a new database with the same specifications as the backed up cluster in the same organization.\nAn on-demand backup of a bucket is always a Full backup.\nCapella schedules on-demand backup to start immediately.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "function": {
          "name": "post_createcloudsnapshotbackup",
          "description": "Creates a cloud snapshot backup for a cluster.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, properties: retention: type: integer, description: Represents interval in hours to retain the backup., example: 730",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "function": {
          "name": "get_listcloudsnapshotbackups",
          "description": "List the backups belonging to a cluster.\n# \n# Note: This endpoint doesn’t return queued backups and only returns ones that are actively being processed or are completed/failed.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **createdAt**, **expiration**, **retention**, **sizee**, **type**."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "function": {
          "name": "get_listcloudsnapshotrestores",
          "description": "Lists the restores that have taken place for a given cluster.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **createdAt**, **expiration**, **retention**, **sizee**, **type**."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "function": {
          "name": "put_editcloudsnapshotbackupretention",
          "description": "Edits the retention time for a backup.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, properties: retention: type: integer, description: Represents interval in hours to retain the backup., example: 730",
                "type": "string"
              },
              "backupId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the backup."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "backupId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "function": {
          "name": "delete_deletecloudsnapshotbackup",
          "description": "Deletes the backup.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "backupId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the backup."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "backupId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "function": {
          "name": "post_restore",
          "description": "Creates a restore job for a backup immediately.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "backupId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the backup."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "backupId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "function": {
          "name": "get_listprojectlevelcloudsnapshotbackups",
          "description": "Lists cloud snapshot backups associated with operational clusters within a specific project.\n# \n# The \"most recent\" and \"oldest\" backup fields do not include backups that are in a queued state. Only backups that are actively being processed, successfully completed, or marked as failed are returned.\n# \n# For detailed guidance on backup and restore functionality, please refer to [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n# \n# The provided API key must have at least one of the following roles.\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# For more information about roles and access, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "creationDateTime",
                    "createdBy",
                    "currentStatus",
                    "cloudProvider",
                    "region"
                  ]
                },
                "description": "Specifies the sorting criteria for the results, including the key by which the results should be ordered. Valid fields to sort the results include the following. - **creationDateTime** - **createdBy** - **currentStatus** - **cloudProvider** - **region** Provide the desired fields in the order of sorting preference. "
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Cloud Snapshot Backups & Restore"
        ],
        "function": {
          "name": "post_clone",
          "description": "Clones the cluster backup into a new cluster.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, cloudProvider, availability, support, properties: name: type: string, description: Name of the cloned cluster (up to 256 characters)., example: Test Clone Cluster, maxLength: 256, description: type: string, description: Description of the cloned cluster (up to 1024 characters)., example: This is a cloned cluster., maxLength: 1024, cloudProvider: type: object, description: The cloud provider where the cluster will be hosted. For information about providers and supported regions, see:  - [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html)  - [Google Cloud Platform](https://docs.couchbase.com/cloud/reference/gcp.html)  - [Microsoft Azure](https://docs.couchbase.com/cloud/reference/azure.html) , required: type, region, properties: type: type: string, description: Cloud provider type. Note: For singleNode cluster, only AWS type cloud provider is allowed.  1. `aws`: Amazon Web Services  2. `gcp`: Google Cloud Platform  3. `azure`: Microsoft Azure , enum: aws, gcp, azure, example: aws, region: type: string, description: Cloud provider region, for example `us-west-2`., example: us-east-1, cidr: type: string, pattern: ^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}$, description: CIDR block for Cloud Provider., example: 10.1.30.0/23, availability: type: object, required: type, properties: type: type: string, description: Availability zone type, either 'single' or 'multi'. Availability zone type allowed for singleNode cluster is only 'single'., example: single, enum: single, multi, support: type: object, required: plan, properties: plan: type: string, description: Plan type, either 'Basic', 'Developer Pro', or 'Enterprise'.  Plan type allowed for singleNode cluster is either 'Basic', or 'Developer Pro'.  In case of 'Basic' plan timezone field value is ignored.  Free tier plan is automatically assigned to free tier clusters. , enum: free, basic, developer pro, enterprise, example: basic, timezone: type: string, description: The standard timezone for the cluster. Should be the TZ identifier., example: ET, enum: ET, GMT, IST, PT, zones: description: Zones is the cloud services provider availability zones for the cloned cluster. Currently Supported only for single AZ clusters so only 1 zone is allowed in list., type: array, example: use1-az1, items: type: string, examples: createCloudSnapshotClone: value: name: Cloned Cluster, description: This is a cloned cluster., cloudProvider: type: aws, region: us-east-1, cidr: 10.1.30.0/23, availability: type: single, zones: use1-az1, support: plan: developer pro, timezone: PT",
                "type": "string"
              },
              "backupId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the backup."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "backupId",
              "body"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Cloud Snapshot Backups Schedule",
    "description": "Couchbase supports a robust scheduled backup and retention time policy as part of an overall disaster recovery plan for production data.\nCouchbase Capella supports scheduled and on-demand backups of cloud snapshot data.\nA backup can be restored to the same database where it was created or another database in the same organization.\nOn setting up a backup schedule, the bucket automatically backs up the bucket based on the chosen schedule.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Cloud Snapshot Backups Schedule"
        ],
        "function": {
          "name": "put_upsertcloudsnapshotbackupschedule",
          "description": "Creates or updates a cloud snapshot backup schedule for a cluster.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, properties: interval: type: integer, description: Represents the time interval., example: 1, retention: type: integer, description: Represents interval in hours to retain the backup., example: 24, startTime: type: string, format: date-time, description: Represents the start time in ISO 8601 format., example: 2024-01-05T16:00:00+00:00",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Cloud Snapshot Backups Schedule"
        ],
        "function": {
          "name": "get_getcloudsnapshotbackupschedule",
          "description": "Retrieves the cloud snapshot backup schedule for a cluster.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Cloud Snapshot Backups Schedule"
        ],
        "function": {
          "name": "delete_deletecloudsnapshotbackupschedule",
          "description": "Deletes the backup schedule for a cluster.\n# \n# To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/cloud-snapshots.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Clusters",
    "description": "A Couchbase cluster consists of one or more instances of Couchbase Capella, each running on an independent node.\nData and services are shared across the cluster.\nA cluster may be referred to as a \"database\" in the documentation and in the Couchbase Capella user interface.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Clusters"
        ],
        "function": {
          "name": "post_postcluster",
          "description": "Creates a new Couchbase Capella provisioned cluster.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, cloudProvider, serviceGroups, availability, support, properties: name: type: string, description: Name of the cluster (up to 256 characters)., example: Test Cluster, maxLength: 256, description: type: string, description: Description of the cluster (up to 1024 characters)., example: Description of the cluster, maxLength: 1024, configurationType: deprecated: true, type: string, description: - Multi-node databases are best for deployments that require high availability. If your app requires high performance and high availability, choose the Multi-node option. - Single-node databases have resource limitations that make them a good choice for learning, prototyping, and non-production uses. They have limited availability. - Single-node databases should contain only 1 node and 1 Service Group. Adding number of nodes or service groups > 1 is not allowed for such databases. - By default the configurationType is multiNode. , enum: singleNode, multiNode, default: multiNode, example: multiNode, cloudProvider: type: object, description: The cloud provider where the cluster will be hosted. For information about providers and supported regions, see:  - [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html)  - [Google Cloud Platform](https://docs.couchbase.com/cloud/reference/gcp.html)  - [Microsoft Azure](https://docs.couchbase.com/cloud/reference/azure.html) , required: type, region, properties: type: type: string, description: Cloud provider type. Note: For singleNode cluster, only AWS type cloud provider is allowed.  1. `aws`: Amazon Web Services  2. `gcp`: Google Cloud Platform  3. `azure`: Microsoft Azure , enum: aws, gcp, azure, example: aws, region: type: string, description: Cloud provider region, for example `us-west-2`., example: us-east-1, cidr: type: string, pattern: ^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}$, description: CIDR block for Cloud Provider., example: 10.1.30.0/23, couchbaseServer: type: object, properties: version: type: string, description: Version of the Couchbase Server to be installed in the cluster. Refer to documentation [here](https://docs.couchbase.com/cloud/clusters/upgrade-database.html#server-version-maintenance-support) for list of supported versions. The latest Couchbase Server version will be deployed by default., example: 7.1, serviceGroups: type: array, description: The couchbase service groups to be run. - The set of nodes that share the same disk, number of nodes and services. - At least one service group must contain the data service., minItems: 1, items: type: object, properties: node: type: object, required: compute, disk, properties: compute: type: object, description: Following are the supported compute combinations for CPU and RAM for different cloud providers. To learn more, see [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html)., required: cpu, ram, properties: cpu: type: integer, description: CPU units (cores)., example: 4, ram: type: integer, description: RAM units (GB)., example: 16, disk: oneOf: type: object, required: type, storage, iops, properties: type: type: string, description: Type of disk. Please choose from the given list for AWS cloud provider., enum: gp3, io2, example: gp3, storage: type: integer, description: Storage in GB. See documentation for supported storage., example: 50, minimum: 50, iops: type: integer, description: Please refer to documentation for supported IOPS., example: 3000, type: object, required: type, properties: type: type: string, description: Type of disk. Please choose from the given list for Azure cloud provider., enum: P6, P10, P15, P20, P30, P40, P50, P60, Ultra, storage: type: integer, description: Storage in GB. Only required for Ultra Disk types. Not used in other storage types., enum: 64, 128, 256, 512, 1024, 2048, 3072, 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264, 12288, 13312, 14336, 15360, example: 64, minimum: 64, iops: type: integer, description: Only required for Ultra Disk types. Not used in other storage types. See [IOPS Defaults](https://docs.couchbase.com/cloud/clusters/scale-database.html#IOPS-Defaults) for a list of supported IOPS values., example: 3000, autoExpansion: type: boolean, description: Determine if disk storage should automatically expand. Defaults to \"false\" if not specified., example: false, type: object, required: type, storage, properties: type: type: string, description: Type of disk. Please choose from the given list for GCP cloud provider., enum: pd-ssd, storage: type: integer, description: Storage in GB. Please refer to documentation for supported storage., example: 50, minimum: 50, example: type: gp3, storage: 50, iops: 3000, numOfNodes: type: integer, description: Number of nodes. The minimum number of nodes for the cluster can be 3 and maximum can be 27 nodes. - Additional service groups can have 2 nodes minimum and 24 nodes maximum. - SingleNode cluster can have only 1 node., example: 3, services: type: array, description: The couchbase service to run on the node. The allowed services for singleNode cluster are one or all of - data, index, query and search., minItems: 1, uniqueItems: true, items: type: string, enum: data, query, index, search, analytics, eventing, example: data, availability: type: object, required: type, properties: type: type: string, description: Availability zone type, either 'single' or 'multi'. Availability zone type allowed for singleNode cluster is only 'single'., example: single, enum: single, multi, support: type: object, required: plan, properties: plan: type: string, description: Plan type, either 'Basic', 'Developer Pro', or 'Enterprise'.  Plan type allowed for singleNode cluster is either 'Basic', or 'Developer Pro'.  In case of 'Basic' plan timezone field value is ignored.  Free tier plan is automatically assigned to free tier clusters. , enum: free, basic, developer pro, enterprise, example: basic, timezone: type: string, description: The standard timezone for the cluster. Should be the TZ identifier., example: ET, enum: ET, GMT, IST, PT, zones: description: Zones is the cloud services provider availability zones for the cluster. Currently Supported only for single AZ clusters so only 1 zone is allowed in list., type: array, example: use1-az1, items: type: string, cmekId: type: string, format: uuid, example: ffffffff-aaaa-1414-eeee-000000000000, description: The ID of the CMEK Key., enablePrivateDNSResolution: type: boolean, description: EnablePrivateDNSResolution signals that the cluster should have hostnames that are hosted in a public DNS zone that resolve to a private DNS address. This exists to support the use case of customers connecting from their own data centers where it is not possible to make use of a cloud service provider DNS zone., example: true, examples: PostClusterAWSMultipleServiceGroups: value: name: Test-Cluster-1, description: My first test AWS cluster for multiple services., cloudProvider: type: aws, region: us-east-1, cidr: 10.1.30.0/23, couchbaseServer: version: 7.2, serviceGroups: node: compute: cpu: 4, ram: 16, disk: storage: 50, type: gp3, iops: 3000, numOfNodes: 3, services: data, query, index, search, node: compute: cpu: 4, ram: 32, disk: storage: 50, type: io2, iops: 3005, numOfNodes: 2, services: analytics, availability: type: multi, support: plan: developer pro, timezone: PT, PostClusterAWSSingleAvailabilityBasicPlan: value: name: Test-Cluster-2, description: My test AWS cluster for single availability and basic plan., cloudProvider: type: aws, region: us-east-1, cidr: 10.1.30.0/23, couchbaseServer: version: 7.2, serviceGroups: node: compute: cpu: 4, ram: 16, disk: storage: 50, type: io2, iops: 3000, numOfNodes: 3, services: data, query, index, search, availability: type: single, support: plan: basic, timezone: PT, PostClusterAWSWithoutServerVersion: value: name: Test-Cluster-6, description: My test AWS cluster without Couchbase Server version., cloudProvider: type: aws, region: us-east-1, cidr: 10.1.30.0/23, serviceGroups: node: compute: cpu: 4, ram: 16, disk: storage: 50, type: gp3, iops: 3000, numOfNodes: 3, services: data, query, index, search, node: compute: cpu: 4, ram: 32, disk: storage: 50, type: io2, iops: 3005, numOfNodes: 2, services: analytics, availability: type: multi, support: plan: developer pro, timezone: PT, PostClusterAWSWithServerVersionAndMaxNodes: value: name: Test-Cluster-7, description: My test AWS cluster for Couchbase Server version 7.1.0., cloudProvider: type: aws, region: us-east-1, cidr: 10.1.30.0/23, couchbaseServer: version: 7.2, serviceGroups: node: compute: cpu: 4, ram: 16, disk: storage: 50, type: gp3, iops: 3000, numOfNodes: 27, services: data, query, index, search, availability: type: multi, support: plan: developer pro, timezone: PT, PostClusterAWSWithServerWithMaxNodes: value: name: Test-Cluster-8, description: My test AWS cluster with max nodes., cloudProvider: type: aws, region: us-east-1, cidr: 10.1.30.0/23, couchbaseServer: version: 7.2, serviceGroups: node: compute: cpu: 4, ram: 16, disk: storage: 50, type: gp3, iops: 3000, numOfNodes: 3, services: data, query, index, search, node: compute: cpu: 4, ram: 32, disk: storage: 50, type: io2, iops: 3005, numOfNodes: 24, services: analytics, availability: type: single, support: plan: developer pro, timezone: PT, PostClusterAzurePremiumDisk: value: name: Test-Cluster-3, description: My first test Azure cluster., cloudProvider: type: azure, region: eastus, cidr: 10.1.30.0/23, couchbaseServer: version: 7.2, serviceGroups: node: compute: cpu: 4, ram: 16, disk: type: P6, numOfNodes: 3, services: data, query, index, search, node: compute: cpu: 4, ram: 32, disk: type: P10, numOfNodes: 4, services: analytics, availability: type: single, support: plan: developer pro, timezone: ET, PostClusterAzureUltraDisk: value: name: Test-Cluster-4, description: My second test Azure cluster with Ultra., cloudProvider: type: azure, region: eastus, cidr: 10.1.30.0/23, couchbaseServer: version: 7.2, serviceGroups: node: compute: cpu: 4, ram: 16, disk: storage: 1024, type: Ultra, iops: 2000, numOfNodes: 3, services: data, query, index, search, analytics, availability: type: multi, support: plan: developer pro, timezone: PT, PostClusterAzureWithAutoExpansion: value: name: Test-Cluster-5, description: My third test Azure cluster., cloudProvider: type: azure, region: eastus, cidr: 10.1.30.0/23, couchbaseServer: version: 7.2, serviceGroups: node: compute: cpu: 4, ram: 16, disk: type: P6, autoExpansion: true, numOfNodes: 3, services: data, index, node: compute: cpu: 4, ram: 32, disk: type: P6, autoExpansion: false, numOfNodes: 3, services: query, availability: type: single, support: plan: developer pro, timezone: ET, PostClusterGCP: value: name: Test-Cluster-5, description: My first test GCP cluster., cloudProvider: type: gcp, region: us-east1, cidr: 10.1.30.0/23, couchbaseServer: version: 7.2, serviceGroups: node: compute: cpu: 4, ram: 16, disk: storage: 64, type: pd-ssd, numOfNodes: 3, services: data, query, index, search, availability: type: single, support: plan: basic, timezone: ET, PostCMEKCluster: value: name: CMEKCluster, description: My first test AWS cluster for multiple services., cmekId: ffffffff-aaaa-1414-eeee-000000000000, cloudProvider: type: aws, region: us-east-1, cidr: 10.1.30.0/23, couchbaseServer: version: 7.2, serviceGroups: node: compute: cpu: 4, ram: 16, disk: storage: 50, type: gp3, iops: 3000, numOfNodes: 3, services: data, query, index, search, node: compute: cpu: 4, ram: 32, disk: storage: 50, type: io2, iops: 3005, numOfNodes: 2, services: analytics, availability: type: multi, support: plan: enterprise, timezone: PT, PostClusterEnabledPrivateDNSResolution: value: name: Test-Cluster-1, description: My test AWS cluster with Private DNS Resolution enabled., enablePrivateDNSResolution: true, cloudProvider: type: aws, region: us-east-1, cidr: 10.1.30.0/23, couchbaseServer: version: 7.6, serviceGroups: node: compute: cpu: 4, ram: 16, disk: storage: 50, type: gp3, iops: 3000, numOfNodes: 3, services: data, query, index, search, node: compute: cpu: 4, ram: 32, disk: storage: 50, type: io2, iops: 3005, numOfNodes: 2, services: analytics, availability: type: multi, support: plan: developer pro, timezone: PT",
                "type": "string"
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Clusters"
        ],
        "function": {
          "name": "get_listclusters",
          "description": "Lists all the clusters under the organization.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# Returned set of clusters is reduced to what the caller has access to view.\n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **availability**, **cloudProvider**, **couchbaseServer**, **currentState**, **name**."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Clusters"
        ],
        "function": {
          "name": "get_getcluster",
          "description": "Fetches the details of the given cluster.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Clusters"
        ],
        "function": {
          "name": "put_putcluster",
          "description": "Updates an existing cluster.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, description, serviceGroups, support, properties: name: type: string, maxLength: 256, description: The new name of the cluster (up to 256 characters)., example: My-New-Cluster, description: type: string, maxLength: 1024, description: The new cluster description (up to 1024 characters)., example: The extended description of my new cluster., support: type: object, required: plan, properties: plan: type: string, description: Plan type, either 'Basic', 'Developer Pro', or 'Enterprise'.  Plan type allowed for singleNode cluster is either 'Basic', or 'Developer Pro'.  In case of 'Basic' plan timezone field value is ignored.  Free tier plan is automatically assigned to free tier clusters. , enum: free, basic, developer pro, enterprise, example: basic, timezone: type: string, description: The standard timezone for the cluster. Should be the TZ identifier., example: ET, enum: ET, GMT, IST, PT, serviceGroups: type: array, items: type: object, properties: node: type: object, required: compute, disk, properties: compute: type: object, description: Following are the supported compute combinations for CPU and RAM for different cloud providers. To learn more, see [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html)., required: cpu, ram, properties: cpu: type: integer, description: CPU units (cores)., example: 4, ram: type: integer, description: RAM units (GB)., example: 16, disk: oneOf: type: object, required: type, storage, iops, properties: type: type: string, description: Type of disk. Please choose from the given list for AWS cloud provider., enum: gp3, io2, example: gp3, storage: type: integer, description: Storage in GB. See documentation for supported storage., example: 50, minimum: 50, iops: type: integer, description: Please refer to documentation for supported IOPS., example: 3000, type: object, required: type, properties: type: type: string, description: Type of disk. Please choose from the given list for Azure cloud provider., enum: P6, P10, P15, P20, P30, P40, P50, P60, Ultra, storage: type: integer, description: Storage in GB. Only required for Ultra Disk types. Not used in other storage types., enum: 64, 128, 256, 512, 1024, 2048, 3072, 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264, 12288, 13312, 14336, 15360, example: 64, minimum: 64, iops: type: integer, description: Only required for Ultra Disk types. Not used in other storage types. See [IOPS Defaults](https://docs.couchbase.com/cloud/clusters/scale-database.html#IOPS-Defaults) for a list of supported IOPS values., example: 3000, autoExpansion: type: boolean, description: Determine if disk storage should automatically expand. Defaults to \"false\" if not specified., example: false, type: object, required: type, storage, properties: type: type: string, description: Type of disk. Please choose from the given list for GCP cloud provider., enum: pd-ssd, storage: type: integer, description: Storage in GB. Please refer to documentation for supported storage., example: 50, minimum: 50, example: type: gp3, storage: 50, iops: 3000, numOfNodes: type: integer, description: Number of nodes. The minimum number of nodes for the cluster can be 3 and maximum can be 27 nodes. - Additional service groups can have 2 nodes minimum and 24 nodes maximum. - SingleNode cluster can have only 1 node., example: 3, services: type: array, description: The couchbase service to run on the node. The allowed services for singleNode cluster are one or all of - data, index, query and search., minItems: 1, uniqueItems: true, items: type: string, enum: data, query, index, search, analytics, eventing, example: data",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "If_Match": {
                "type": "string",
                "example": "12",
                "description": "A precondition header that specifies the entity tag of a resource."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Clusters"
        ],
        "function": {
          "name": "delete_deletecluster",
          "description": "Deletes an existing cluster.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "retainsnapshotbackups": {
                "type": "boolean",
                "example": true,
                "description": "Retain snapshot backups parameter specifies whether to retain snapshot backups after cluster deletion."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Clusters"
        ],
        "function": {
          "name": "post_clusteron",
          "description": "Turn cluster on.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, properties: turnOnLinkedAppService: type: boolean, description: Set this value to true if you want to turn on the app service linked with the cluster, false if not. If set to true, the app service, if present, will turn on with the cluster. Default value for this is false, which means the linked app service will be kept off. , default: false, examples: ClusterOnAppServiceOn: value: turnOnLinkedAppService: true, ClusterOnAppServiceOff: value: turnOnLinkedAppService: false",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Clusters"
        ],
        "function": {
          "name": "delete_clusteroff",
          "description": "Turn cluster off.\n# \n# - Turning off your cluster turns off the compute for your cluster but the storage remains.\n# All of the data, schema (buckets, scopes, and collections), and indexes remain, as well as cluster configuration, including users and allow lists.\n# \n# - Turning off cluster will also turn off any linked app services.\n# \n#  In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Clusters"
        ],
        "function": {
          "name": "put_putbucketstoragebackend",
          "description": "Updates the storage backend of an existing bucket from Couchstore to Magma.\n# \n# The following should be noted while doing this operation -\n# \n# 1. The outcome of this migration is that all data service nodes in the cluster will be replaced.\n# - During the migration all buckets will remain operational and still be able to perform read and writes. Hence applications will not incur any downtime during this migration and can continue to read/write to the cluster.\n# - The re-balances that occur from the node replacements will result in the bucket(s) being migrated to Magma.\n# - The status of the cluster can be monitored via the [GET cluster API](https://docs.couchbase.com/cloud/management-api-reference/index.html#tag/clusters/operation/getCluster). The cluster will transition to healthy state after migration is completed for all listed buckets.\n# \n# 2. This operation is only allowed for clusters with server version >= 7.6.0. The storage backend cannot be updated for the cluster with server versions lower than this. All the nodes must be upgraded to 7.6.0 before the bucket migration can be performed.\n# \n# 3. Before migrating from Couchstore to Magma, the bucket memory allocation should be upgraded to at least the minimum amount required for a Magma bucket that is 1024 MiB.\n# \n# 4. Cluster must be in a healthy state to perform this operation.\n# \n# To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: buckets, properties: buckets: type: array, description: Names of the buckets which need to be migrated from Couchstore to Magma., items: type: string, example: sample-bucket, my-bucket, maxItems: 30",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Database Credentials",
    "description": "Database credentials provide programmatic and application-level access to data on a database.\nOnly database credentials can access data.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Database Credentials"
        ],
        "function": {
          "name": "get_listdatabasecredentials",
          "description": "Lists all the database credential information under a cluster.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Viewer\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **name**, **id**."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Database Credentials"
        ],
        "function": {
          "name": "post_postdatabasecredential",
          "description": "Creates a new database credential under a cluster.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# Valid fields to sort the results are: \"id\", \"name\".\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, access, properties: name: type: string, description: Username for the database credential. The name should adhere to the following rules:  1. The name must be between 2 & 128 characters.  2. The name cannot contain spaces.  3. The name cannot contain the following characters - `) ( > < , ; : \" \\ / ] [ ? = } {`  4. The name cannot begin with `@` character. , example: RW, maxLength: 128, minLength: 2, password: type: string, description: A password associated with the database credential. If this field is left empty, a password will be auto-generated.  - The password should adhere to the following rules:    1. The password should have at least 8 characters.    2. Characters used for the password should contain at least one uppercase (A-Z), one lowercase (a-z), one numerical (0-9), and one special character.    3. The password must not contain any of the following characters: `< > ; . * & | £` , example: Passw0rd!, minLength: 8, access: type: array, description: Describes the access information of the database credential., items: type: object, required: privileges, properties: privileges: type: array, items: type: string, description: The `privileges` field in this API represents the privilege level for users. It accepts one of the following values:  - `data_reader` - `data_writer` - `read`: Equivalent to `data_reader`. - `write`: Equivalent to `data_writer`. , example: data_reader, data_writer, read, write, resources: type: object, description: The resources for which access will be granted on. Leaving this empty will grant access to all buckets., properties: buckets: type: array, items: type: object, required: name, properties: name: type: string, description: The name of the bucket., example: travel-sample, scopes: type: array, description: The scopes under a bucket., items: type: object, required: name, properties: name: type: string, example: inventory, description: The name of the scope., collections: type: array, description: The collections under a scope., items: type: string, example: airlines, airport, tickets, examples: ReadWriteOnSomeCollections: value: name: ReadWriteOnSpecificCollections, access: privileges: data_reader, data_writer, resources: buckets: name: travel-sample, scopes: name: inventory, collections: airport, airline, ReadAndWriteOnAllCollectionsInABucketAndScope: value: name: ReadWriteOnAllCollectionsInAScopeAndBucket, access: privileges: read, write, resources: buckets: name: travel-sample, scopes: name: inventory, ReadAccessOnAllBuckets: value: name: ReadAccessForAllBuckets, access: privileges: data_reader, SeparateAccessForDifferentScopes: value: name: SeparateAccessForDifferentScopes, access: privileges: data_reader, resources: buckets: name: travel-sample, scopes: name: inventory, privileges: data_writer, resources: buckets: name: travel-sample, scopes: name: sales, WriteAccessForAllBuckets: value: name: WriteAccessForAllBuckets, access: privileges: data_writer, MultipleLevelOfAccess: value: name: MultipleLevelOfAccess, access: privileges: data_reader, resources: buckets: name: travel-sample, scopes: name: inventory, collections: airport, airline, privileges: data_writer, resources: buckets: name: travel-sample, scopes: name: inventory, collections: sales",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Database Credentials"
        ],
        "function": {
          "name": "get_getdatabasecredential",
          "description": "Fetches the details of a given cluster's database credential information.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Viewer\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the database credential."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "userId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Database Credentials"
        ],
        "function": {
          "name": "put_putdatabasecredential",
          "description": "Updates an existing database credential.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, properties: access: type: array, description: Describes the access information of the database credential., items: type: object, required: privileges, properties: privileges: type: array, items: type: string, description: The `privileges` field in this API represents the privilege level for users. It accepts one of the following values:  - `data_reader` - `data_writer` - `read`: Equivalent to `data_reader`. - `write`: Equivalent to `data_writer`. , example: data_reader, data_writer, read, write, resources: type: object, description: The resources for which access will be granted on. Leaving this empty will grant access to all buckets., properties: buckets: type: array, items: type: object, required: name, properties: name: type: string, description: The name of the bucket., example: travel-sample, scopes: type: array, description: The scopes under a bucket., items: type: object, required: name, properties: name: type: string, example: inventory, description: The name of the scope., collections: type: array, description: The collections under a scope., items: type: string, example: airlines, airport, tickets, password: type: string, example: Pa$$w0rd, description: The updated password of the database credential., examples: UpdateDatabaseCredentials: value: access: privileges: data_reader, data_writer, resources: buckets: name: travel-sample, scopes: name: inventory, collections: airport, airline, tickets",
                "type": "string"
              },
              "userId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the database credential."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "If_Match": {
                "type": "string",
                "example": "12",
                "description": "A precondition header that specifies the entity tag of a resource."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "userId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Database Credentials"
        ],
        "function": {
          "name": "delete_deletedatabasecredential",
          "description": "Deletes an existing cluster's database credential.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the database credential."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "userId"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Events",
    "description": "Events represent a trail of actions that users performs within Capella at an organization or project level\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Events"
        ],
        "function": {
          "name": "get_listevents",
          "description": "Lists all the events information under a organization.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Creator\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader\n#  - Database Data Reader/Writer\n# \n# The results are always limited by the role and scope of the caller's privileges.\n# Currently, only the `tags` filter is multi-valued; all other filters are single-valued.\n# \n# By default, `to` is set to the request time, and `from` is set to 24 hours before the\n# request time. If 'to' is set and 'from' is not set, then 'from' is set to 24 hours\n# before 'to'.\n# \n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "to": {
                "type": "string",
                "format": "date-time",
                "example": "2024-04-25T12:53:59.000Z",
                "description": "End datetime in the last 24 hours, RFC3339 format. Defaults to Now."
              },
              "from": {
                "type": "string",
                "format": "date-time",
                "example": "2024-04-24T12:53:59.000Z",
                "description": "Start date in  RFC3339 format. If not provided, events starting from last 24 hours are returned."
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "availability",
                    "billing",
                    "maintenance",
                    "performance",
                    "security",
                    "alert"
                  ]
                },
                "description": "Filter by tags. Default is to return events corresponding to all supported tag. Tags are **availability**, **billing**, **maintenance**, **performance**, **security**, **alert**."
              },
              "severityLevels": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "info",
                    "warning",
                    "critical"
                  ]
                },
                "description": "Filter by severity levels. Default is to return events corresponding to all supported severity levels."
              },
              "projectIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid",
                  "example": "ffffffff-aaaa-1414-eeee-000000000000"
                },
                "description": "The GUID4 ID of projects to filter on. By default, events corresponding to all projects are returned"
              },
              "clusterIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid",
                  "example": "ffffffff-aaaa-1414-eeee-000000000000"
                },
                "description": "List of clusterIds to filter on. By default events corresponding to all clusters are returned. "
              },
              "userIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid",
                  "example": "ffffffff-aaaa-1414-eeee-000000000000"
                },
                "description": "Filter by user UUID. Default is to return events corresponding to all users."
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "timestamp",
                    "severity"
                  ]
                },
                "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **severity**, **timestamp**."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Events"
        ],
        "function": {
          "name": "get_geteventbyid",
          "description": "Fetches the details of an event by ID.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Creator\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader\n#  - Database Data Reader/Writer\n# \n# The results are always limited by the role and scope of the caller's privileges.\n# \n# To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "eventId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The event ID of the event."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "eventId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Events"
        ],
        "function": {
          "name": "get_listprojectevents",
          "description": "Lists all the events information under a project.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader\n#  - Database Data Reader/Writer\n# \n# The results are always limited by the role and scope of the caller's privileges.\n# Currently, only the `tags` filter is multi-valued; all other filters are single-valued.\n# \n# By default, `to` is set to the request time, and `from` is set to 24 hours before the\n# request time. If 'to' is set and 'from' is not set, then 'from' is set to 24 hours\n# before 'to'.\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "to": {
                "type": "string",
                "format": "date-time",
                "example": "2024-04-25T12:53:59.000Z",
                "description": "End datetime in the last 24 hours, RFC3339 format. Defaults to Now."
              },
              "from": {
                "type": "string",
                "format": "date-time",
                "example": "2024-04-24T12:53:59.000Z",
                "description": "Start date in  RFC3339 format. If not provided, events starting from last 24 hours are returned."
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "availability",
                    "billing",
                    "maintenance",
                    "performance",
                    "security",
                    "alert"
                  ]
                },
                "description": "Filter by tags. Default is to return events corresponding to all supported tag. Tags are **availability**, **billing**, **maintenance**, **performance**, **security**, **alert**."
              },
              "severityLevels": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "info",
                    "warning",
                    "critical"
                  ]
                },
                "description": "Filter by severity levels. Default is to return events corresponding to all supported severity levels."
              },
              "clusterIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid",
                  "example": "ffffffff-aaaa-1414-eeee-000000000000"
                },
                "description": "List of clusterIds to filter on. By default events corresponding to all clusters are returned. "
              },
              "userIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid",
                  "example": "ffffffff-aaaa-1414-eeee-000000000000"
                },
                "description": "Filter by user UUID. Default is to return events corresponding to all users."
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "timestamp",
                    "severity"
                  ]
                },
                "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **severity**, **timestamp**."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Events"
        ],
        "function": {
          "name": "get_getprojecteventbyid",
          "description": "Fetches the details of an event by ID within a project.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader\n#  - Database Data Reader/Writer\n# \n# The results are always limited by the role and scope of the caller's privileges.\n# \n# To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "eventId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The event ID of the event."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "eventId"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Free Tier",
    "description": "Endpoints to manage resources that are available with free tier plan.  These resources are buckets, clusters and app services.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Free Tier"
        ],
        "function": {
          "name": "post_createfreetiercluster",
          "description": "Creates a free tier cluster.  This is a 1 node cluster than only runs data, query, index and search services.\n# \n# You can have at most 1 free tier cluster per tenant.\n# \n# The following features are not available for free tier clusters:\n#   - backup/restore\n#   - private endpoint service\n#   - network peering\n#   - audit logs\n#   - alert integration\n#   - CMEK\n#   - on/off schedule\n# \n# Only cluster name, description, CSP, region and CIDR are configurable.\n# \n# There are limited regions available based on CSP:\n#   a. for AWS they are us-east-2, eu-west-1, ap-southeast-1\n#   b. for GCP they are us-central1, europe-west1, asia-east1\n#   c. for Azure they are eastus, swedencentral, koreacentral\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, cloudProvider, properties: name: type: string, description: Name of the cluster (up to 256 characters)., example: A Free Tier Cluster, maxLength: 256, description: type: string, description: Description of the cluster (up to 1024 characters)., example: Description of the cluster, maxLength: 1024, cloudProvider: type: object, description: The cloud provider where the cluster will be hosted. For information about providers and supported regions, see:  - [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html)  - [Google Cloud Platform](https://docs.couchbase.com/cloud/reference/gcp.html)  - [Microsoft Azure](https://docs.couchbase.com/cloud/reference/azure.html) , required: type, region, properties: type: type: string, description: Cloud provider type. Note: For singleNode cluster, only AWS type cloud provider is allowed.  1. `aws`: Amazon Web Services  2. `gcp`: Google Cloud Platform  3. `azure`: Microsoft Azure , enum: aws, gcp, azure, example: aws, region: type: string, description: Cloud provider region, for example `us-west-2`., example: us-east-1, cidr: type: string, pattern: ^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}$, description: CIDR block for Cloud Provider., example: 10.1.30.0/23, examples: PostFreeTierClusterExample1: value: name: Free-Tier-Cluster-1, description: My first test AWS cluster for multiple services., cloudProvider: type: aws, region: us-east-2, cidr: 10.1.30.0/23",
                "type": "string"
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Free Tier"
        ],
        "function": {
          "name": "put_updatefreetiercluster",
          "description": "Updates an existing free tier cluster.  Only name and description are configurable.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, description, properties: name: type: string, maxLength: 256, description: The new name of the cluster (up to 256 characters)., example: My-New-Cluster, description: type: string, maxLength: 1024, description: The new cluster description (up to 1024 characters)., example: The extended description of my new cluster.",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "If_Match": {
                "type": "string",
                "example": "12",
                "description": "A precondition header that specifies the entity tag of a resource."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Free Tier"
        ],
        "function": {
          "name": "delete_deletefreetiercluster",
          "description": "Deletes an existing free tier cluster.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Free Tier"
        ],
        "function": {
          "name": "post_freetierclusteron",
          "description": "Turn free tier cluster on.  It will also turn on the linked app services, if any.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Free Tier"
        ],
        "function": {
          "name": "delete_freetierclusteroff",
          "description": "Turn free tier cluster off.\n# \n# - Turning off your cluster turns off the compute for your cluster but the storage remains.\n# All of the data, schema (buckets, scopes, and collections), and indexes remain, as well as cluster configuration, including users and allow lists.\n# \n# - Turning off cluster will also turn off any linked app services.\n# \n#  In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Free Tier"
        ],
        "function": {
          "name": "post_createfreetierappservice",
          "description": "Creates a free tier App Service. This is a 1 node cluster which can only be linked to a free tier cluster.\n# \n# The following features are not available for free tier clusters:\n#   - audit logging \n#   - turn App Service off/on\n# \n# Free tier App Service can only be turned off/on when the linked free tier cluster is turned off/on.\n# \n# Only name a description are configurable.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, properties: name: type: string, description: Name of App Service., example: MyAppSyncService, maxLength: 256, description: type: string, description: A short description of the App Service., example: My app sync service., maxLength: 256",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Free Tier"
        ],
        "function": {
          "name": "get_getfreetierappservice",
          "description": "Fetches the details of the free tier App Service.\n# \n# While only name and description are configurable, other read only fields will be displayed.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader/Writer\n#  - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Free Tier"
        ],
        "function": {
          "name": "put_updatefreetierappservice",
          "description": "Updates an existing free tier App Service. Only name and description are configurable.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, properties: name: type: string, description: Name of the App Service (up to 256 characters)., example: MyAppSyncService, maxLength: 256, description: type: string, description: A short description of the App Service., example: My app sync service.",
                "type": "string"
              },
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "If_Match": {
                "type": "string",
                "example": "12",
                "description": "A precondition header that specifies the entity tag of a resource."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Free Tier"
        ],
        "function": {
          "name": "delete_deletefreetierappservice",
          "description": "Deletes an existing free tier App Service.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "appServiceId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the appService."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "appServiceId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Free Tier"
        ],
        "function": {
          "name": "post_createfreetierbucket",
          "description": "Creates a new free tier bucket.  This is a Couchbase bucket where only the name a memory quota is configurable.\n# Other bucket properties use default values.  \n# \n# The following features are not available for free tier buckets:\n#   - bucket flush \n#   - migrate to another storage engine like magma\n# \n# Note that you can only create a free tier bucket on a free tier cluster.\n# \n# To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, properties: name: type: string, description: Name of the bucket. This field cannot be changed later. The name should adhere to the following rules:  1. Characters used for the name should be in the ranges of A-Z, a-z, and 0-9; plus the underscore, period, dash, and percent characters.  2. The name can be a maximum of 100 characters in length.  3. The name cannot have 0 characters or empty. Minimum length of name is 1.  4. The name cannot start with a `.` (period). , maxLength: 100, example: Free-Tier-Bucket, memoryAllocationInMb: type: integer, description: The bucket memory quota. It defaults to 100 MiB. , example: 200, default: 100, examples: PostFreeTierBucket: value: name: A-Free-Tier-Bucket, memoryAllocationInMb: 200",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Free Tier"
        ],
        "function": {
          "name": "get_listfreetierbuckets",
          "description": "Lists all buckets in the free tier cluster. While only name and memory quota are configurable for free tier buckets, the response will show\n# additional read only bucket properties such as replicas, etc.\n# \n# To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Free Tier"
        ],
        "function": {
          "name": "get_getfreetierbucketbyid",
          "description": "Get bucket.  While only name and memory quota are configurable for free tier buckets, the response will show\n# additional read only bucket properties such as replicas, etc.\n# \n# To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Free Tier"
        ],
        "function": {
          "name": "put_updatefreetierbucket",
          "description": "Updates an existing free tier bucket.  Only bucket memory quota is configurable.  Once created bucket name cannot be changed.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: memoryAllocationInMb, properties: memoryAllocationInMb: type: integer, description: The new amount of memory to allocate for the bucket memory in MiB. ",
                "type": "string"
              },
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Free Tier"
        ],
        "function": {
          "name": "delete_deletefreetierbucketbyid",
          "description": "Deletes an existing free tier bucket.\n# \n# To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Network Peers",
    "description": "Network Peering enables you to configure a secure private network connection between the Virtual Private Cloud (VPC) hosting your applications and the VPC of your Couchbase Capella database.\nYou can set a network peering connection from a Couchbase Capella database hosted with Amazon Web Services (AWS), Google Cloud (GCP) or Azure.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Network Peers"
        ],
        "function": {
          "name": "post_postnetworkpeering",
          "description": "Creates a network peering record for Capella. Capella does not support peering of networks between different cloud providers. For example, you cannot peer GCP VPC that hosts Capella cluster with an AWS VPC hosting an application.\n# \n# - Create configures a Couchbase Capella private networking with the cloud provider. Setting up a private network enables your application to interact with Couchbase Capella over a private connection by co-locating them through network peering.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, providerConfig, providerType, properties: name: description: Name of the peering relationship. -  The name of the peering relationship must be at least 2 characters long. -  The name can not exceed 128 characters., type: string, example: VPCPeerTest, providerType: type: string, description: Type of the cloud provider for which the peering connection is created. Which are- 1. aws 2. gcp 3. azure, example: aws, providerConfig: description: The config data for a peering relationship for a cluster on AWS, GCP, or Azure. , oneOf: type: object, required: accountId, vpcId, region, cidr, description: AWS config data required to establish a VPC peering relationship. Refer to the docs for other limitations to AWS VPC Peering - [ref](https://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-basics.html#vpc-peering-limitations)., properties: accountId: type: string, description: The numeric AWS Account ID or Owner ID., example: 00000011123, vpcId: type: string, description: The alphanumeric VPC ID which starts with \\\"vpc-\\\". This is also known as the networkId., example: vpc-141f0fffff141aa00, region: type: string, description: The AWS region where your VPC is deployed., example: us-east-1, cidr: type: string, description: The AWS VPC CIDR block of network in which your application runs. This cannot overlap with your Capella CIDR Block., example: 10.0.0.0/16, type: object, required: networkName, cidr, projectId, serviceAccount, description: GCP config data required to establish a VPC peering relationship. Refer to the docs for other limitations to GCP VPC Peering - [ref](https://cloud.google.com/vpc/docs/vpc-peering)., properties: networkName: type: string, description: The name of the network that you want to peer with., example: cc-ffffffff-aaaa-1414-eeee-000000000000, cidr: type: string, description: The GCP VPC CIDR block of network in which your application runs. This cannot overlap with your Capella CIDR Block., example: 10.0.0.0/16, projectId: type: string, description: The unique identifier for your GCP project., example: rock-galaxy-123456, serviceAccount: type: string, description: ServiceAccount created or assigned on the external VPC project. GCP Service Account with below permissions - DNS Admin - Compute.NetworkAdmin It should be in the form of an email that is shown under `gcloud iam service-accounts list` command. [Reference](https://cloud.google.com/iam/docs/creating-managing-service-accounts#creating) , example: service-account-name@project-id.iam.gserviceaccount.com, type: object, required: azureTenantId, subscriptionId, resourceGroup, vnetId, cidr, description: Azure config data required to establish a VNet peering relationship. Refer to the docs for other limitations to Azure VNet Peering - [ref](https://learn.microsoft.com/en-us/azure/virtual-network/virtual-network-peering-overview#constraints-for-peered-virtual-networks), properties: azureTenantId: type: string, description: The tenant ID. To find your tenant ID, see [How to find your Azure Active Directory tenant ID](https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant)., example: ffffffff-aaaa-1414-eeee-000000000000, subscriptionId: type: string, description: The subscription ID. To find your subscription ID, see [Find your Azure subscription](https://learn.microsoft.com/en-us/azure/azure-portal/get-subscription-tenant-id#find-your-azure-subscription)., example: ffffffff-aaaa-1414-eeee-000000000000, resourceGroup: type: string, description: The resource group name holding the resource you’re connecting with Capella., example: sample-resource-group, vnetId: description: The VNet ID is the name of the virtual network peering in Azure., type: string, example: sample-vnet, cidr: type: string, description: The CIDR block from the virtual network that you created in Azure., example: 10.2.0.0/16, example: accountID: 00000011123, vpcId: vpc-141f0fffff141aa00, region: us-east-1, cidr: 10.0.0.0/16, examples: PostNetworkPeersAWS: value: name: VPCPeerTestAWS, providerType: aws, providerConfig: accountID: 123456789110, vpcId: vpc-00ff00ff00ff0f, region: us-east-1, cidr: 10.1.0.0/23, PostNetworkPeersGCP: value: name: VPCPeerTestGCP, providerType: gcp, providerConfig: networkName: cc-ffffffff-aaaa-1414-eeee-000000000000, projectId: test-00ff00ff00ff0fff, serviceAccount: sa-ffffffff-eee-aa-test@test-00ff00ff00ff0fff.iam.gserviceaccount.com, cidr: 10.1.0.0/23, PostNetworkPeersAzure: value: name: VnetPeerTestAzure, providerType: azure, providerConfig: azureTenantId: ffffffff-aaaa-1414-eeee-000000000000, subscriptionId: ffffffff-aaaa-1414-eeee-000000000000, resourceGroup: sample-resource-group, vnetId: sample-vnet, cidr: 10.1.0.0/23",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Network Peers"
        ],
        "function": {
          "name": "get_listnetworkpeeringrecords",
          "description": "Lists all the network peering records.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **name**, **status**."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Network Peers"
        ],
        "function": {
          "name": "get_getnetworkpeeringrecord",
          "description": "Fetches the details of the network peering meta data based on the peerID provided.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "peerId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The ID of the network peer record."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "peerId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Network Peers"
        ],
        "function": {
          "name": "delete_deletenetworkpeering",
          "description": "Deletes the network peering relationship.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "peerId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The ID of the network peer record."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "peerId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Network Peers"
        ],
        "function": {
          "name": "post_getazurevnetpeeringcommand",
          "description": "Retrieves the role assignment command or script to be executed in the Azure CLI to assign a new network contributor role. It scopes only to the specified subscription and the virtual network within that subscription.\n# \n# - Before using this API, please make sure that the *Admin consent granting* process has been completed through the Capella UI.\n# - This process to grant consent to the VNET peering service principal in the external Azure tenant needs to be done only once for the organization i.e. the first time when the VNET peering is created.\n# - Consenting to this permission request creates a service principal that grants Capella access to the Azure tenant to perform VNET peering.\n# - To complete the admin consent granting process, the Organization owner should follow the steps below -\n#     1. Login to the Capella UI.\n#     2. Deploy an Azure Cluster or open an existing one you want to peer with your application.\n#     3. Click the Settings tab, in the navigation pane click VNET Peering.\n#     4. Click Setup VNET Peering.\n#     5. Confirm that you have a user with the Global Administrator Role.\n#     6. Add the Azure configuration details to allow peering access.\n#     7. Click Allow Peering Access - A new browser tab opens. Sign in to Azure if you have not already.\n#     8. In Azure, accept Capella’s permissions request - The Azure permissions request page is open in the new browser tab and consent to the new permissions request.\n#       For more information refer [docs]- https://docs.couchbase.com/cloud/clouds/vpc-peering/peer-azure.html\n# - On accepting the new permission, you automatically return to the Capella VNET peering page. The Capella VNET peering page shows a notice indicating that peering access is successful.\n# \n# - The Organization Owner should set this up once, then for network peering, use the public API -\n#     1. Use this `Get Azure VNET Peering CLI Command` API to fetch the command.\n#     2. Run the role assignment command in the Azure CLI.\n#     3. Use the `Create VPC Peering` API to create the network peering.\n# \n# - In order to access this endpoint, the provided API key must have at least one of the following roles:\n#   - Organization Owner\n#   - Project Owner\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: tenantId, subscriptionId, resourceGroup, vnetId, vnetPeeringServicePrincipal, properties: tenantId: description: The Azure tenant ID. To find your tenant ID, see [How to find your Azure Active Directory tenant ID](https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant)., type: string, example: ffffffff-aaaa-1414-eeee-000000000000, subscriptionId: description: Subscription ID is a GUID that uniquely identifies your subscription to use Azure services. To find your subscription ID, see [Find your Azure subscription](https://learn.microsoft.com/en-us/azure/azure-portal/get-subscription-tenant-id#find-your-azure-subscription)., type: string, example: ffffffff-aaaa-1414-eeee-000000000000, resourceGroup: description: The resource group name holding the resource you’re connecting with Capella., type: string, example: sample-resource-group, vnetId: description: The VNet ID is the name of the virtual network in Azure., type: string, example: sample-vnet, vnetPeeringServicePrincipal: description: The enterprise application object ID for the Capella service principal. You can find the enterprise application object ID in Azure by selecting Azure Active Directory -> Enterprise applications. Next, select the application name, the object ID is in the Object ID box., type: string, example: ffffffff-aaaa-1414-eeee-000000000000",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "On/Off Schedule",
    "description": "The On/Off Schedule endpoint enables you to schedule when your provisioned database should turn on or off to save costs.\nTurning off your database only turns off the compute;\nall of your data, schema (buckets, scopes, and collections), and indexes remain, as well as your cluster configuration, including users and allow lists.\nWhen you turn your provisioned database off, you will be charged the OFF amount for the database.\nYou can turn the cluster and any linked app services on or off on demand using the [cluster API](https://docs.couchbase.com/cloud/management-api-reference/index.html#tag/clusters).\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "On/Off Schedule"
        ],
        "function": {
          "name": "post_postonoffschedule",
          "description": "This provides the means to add a new cluster on/off schedule.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: description: Cluster schedule on/off ., type: object, required: timezone, days, properties: timezone: type: string, description: Timezone for the schedule, enum: Pacific/Midway, US/Hawaii, US/Alaska, US/Pacific, US/Mountain, US/Central, US/Eastern, America/Puerto_Rico, Canada/Newfoundland, America/Argentina/Buenos_Aires, Atlantic/Cape_Verde, Europe/London, Europe/Amsterdam, Europe/Athens, Africa/Nairobi, Asia/Tehran, Indian/Mauritius, Asia/Karachi, Asia/Calcutta, Asia/Dhaka, Asia/Bangkok, Asia/Hong_Kong, Asia/Tokyo, Australia/North, Australia/Sydney, Pacific/Ponape, Antarctica/South_Pole, example: US/Pacific, days: type: array, items: type: object, required: state, day, properties: state: type: string, enum: on, off, custom, description: Cluster state (on, off, or custom). - On state turns the cluster on (healthy state) for the whole day. - Off state turns the cluster off for the whole day. - Custom state should be used for the days when a cluster needs to be in the turned on (healthy) state during the specified time window instead of all day. , day: type: string, description: Day of the week for scheduling on/off. - The days of the week should be in proper sequence starting from Monday and ending with Sunday. - The On/Off schedule requires 7 days for the schedule, one for each day of the week. There cannot be more or less than 7 days in the schedule. - Clusters cannot be scheduled to be off for the entire day for every day of the week. , enum: monday, tuesday, wednesday, thursday, friday, saturday, sunday, from: description: OnTimeBoundary corresponds to \"from\" and \"to\" time boundaries for when the cluster needs to be in the turned on (healthy) state on a day with \"custom\" scheduling timings. The time boundary should be according to the following rules:   - If the schedule is a non-custom day - with state `on` or `off`, it cannot contain a time boundary.   - If the schedule is a `custom` day -       - It should contain the `from` time boundary. If the `to` time boundary is not specified then the default value of 0 hour 0 minute is set and the cluster will be turned on for the entire day from the time set in `from` time boundary.       - Time boundary should have a valid `hour` value. The valid hour values are from 0 to 23 inclusive.       - Time boundary should have a valid `minute` value. The valid minute values are 0 and 30.       - The `from` time boundary should not be later than the `to` time boundary.       - If the `hour` and `minute` values are not provided for the time boundaries, it is set to a default value of 0 for both. (0 hour 0 minute) , type: object, properties: hour: type: integer, description: Hour of the time boundary., example: 21, default: 0, minute: type: integer, description: Minute of the time boundary., example: 30, default: 0, to: description: OnTimeBoundary corresponds to \"from\" and \"to\" time boundaries for when the cluster needs to be in the turned on (healthy) state on a day with \"custom\" scheduling timings. The time boundary should be according to the following rules:   - If the schedule is a non-custom day - with state `on` or `off`, it cannot contain a time boundary.   - If the schedule is a `custom` day -       - It should contain the `from` time boundary. If the `to` time boundary is not specified then the default value of 0 hour 0 minute is set and the cluster will be turned on for the entire day from the time set in `from` time boundary.       - Time boundary should have a valid `hour` value. The valid hour values are from 0 to 23 inclusive.       - Time boundary should have a valid `minute` value. The valid minute values are 0 and 30.       - The `from` time boundary should not be later than the `to` time boundary.       - If the `hour` and `minute` values are not provided for the time boundaries, it is set to a default value of 0 for both. (0 hour 0 minute) , type: object, properties: hour: type: integer, description: Hour of the time boundary., example: 21, default: 0, minute: type: integer, description: Minute of the time boundary., example: 30, default: 0, example: day: monday, state: custom, from: hour: 12, minute: 30, to: hour: 14, minute: 30, day: tuesday, state: custom, from: hour: 12, minute: 30, to: hour: 14, minute: 30, day: wednesday, state: on, day: thursday, state: on, day: friday, state: custom, from: hour: 12, minute: 30, to: hour: 14, minute: 30, day: saturday, state: off, day: sunday, state: off, examples: PostClusterOnOffSchedule: value: timezone: US/Pacific, days: day: monday, state: custom, from: hour: 12, minute: 30, to: hour: 14, minute: 30, day: tuesday, state: custom, from: hour: 21, minute: 30, to: hour: 23, minute: 30, day: wednesday, state: on, day: thursday, state: on, day: friday, state: custom, from: hour: 12, minute: 30, to: hour: 15, minute: 30, day: saturday, state: off, day: sunday, state: off, PostClusterOnOffScheduleDefaultBoundaryWithoutToBody: value: timezone: US/Pacific, days: day: monday, state: custom, from: hour: 14, minute: 30, day: tuesday, state: custom, from: hour: 22, minute: 30, day: wednesday, state: on, day: thursday, state: on, day: friday, state: custom, from: hour: 12, minute: 30, day: saturday, state: off, day: sunday, state: off, PostClusterOnOffScheduleDefaultsBoundaryWithoutHourMinute: value: timezone: US/Pacific, days: day: monday, state: custom, from: hour: 12, minute: 30, to: hour: 14, minute: 30, day: tuesday, state: custom, from: hour: , minute: , to: hour: 14, minute: , day: wednesday, state: on, day: thursday, state: on, day: friday, state: custom, from: hour: 15, minute: , day: saturday, state: off, day: sunday, state: off, PostClusterOnOffScheduleDefaultsBoundary: value: timezone: US/Pacific, days: day: monday, state: custom, from: hour: , minute: 30, to: hour: 5, minute: 30, day: tuesday, state: custom, from: hour: 21, minute: , to: , day: wednesday, state: on, day: thursday, state: on, day: friday, state: custom, from: hour: 12, minute: 30, to: hour: 14, minute: , day: saturday, state: off, day: sunday, state: off, PostClusterOnOffScheduleDefaultsBoundaryWithoutHourMinuteBody: value: timezone: US/Pacific, days: day: monday, state: custom, from: minute: 30, to: hour: 14, minute: 30, day: tuesday, state: custom, from: hour: 21, to: hour: 23, day: wednesday, state: on, day: thursday, state: on, day: friday, state: custom, from: hour: 12, to: hour: 15, minute: 30, day: saturday, state: off, day: sunday, state: off",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "On/Off Schedule"
        ],
        "function": {
          "name": "get_getonoffschedule",
          "description": "Fetches the details of the cluster on/off schedule for the given cluster.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "On/Off Schedule"
        ],
        "function": {
          "name": "put_putonoffschedule",
          "description": "This provides the means to update an existing cluster on/off schedule.\n# \n# In order to access this endpoint, the provided API key must have at least one of the roles referenced below:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: description: Cluster schedule on/off ., type: object, required: timezone, days, properties: timezone: type: string, description: Timezone for the schedule, enum: Pacific/Midway, US/Hawaii, US/Alaska, US/Pacific, US/Mountain, US/Central, US/Eastern, America/Puerto_Rico, Canada/Newfoundland, America/Argentina/Buenos_Aires, Atlantic/Cape_Verde, Europe/London, Europe/Amsterdam, Europe/Athens, Africa/Nairobi, Asia/Tehran, Indian/Mauritius, Asia/Karachi, Asia/Calcutta, Asia/Dhaka, Asia/Bangkok, Asia/Hong_Kong, Asia/Tokyo, Australia/North, Australia/Sydney, Pacific/Ponape, Antarctica/South_Pole, example: US/Pacific, days: type: array, items: type: object, required: state, day, properties: state: type: string, enum: on, off, custom, description: Cluster state (on, off, or custom). - On state turns the cluster on (healthy state) for the whole day. - Off state turns the cluster off for the whole day. - Custom state should be used for the days when a cluster needs to be in the turned on (healthy) state during the specified time window instead of all day. , day: type: string, description: Day of the week for scheduling on/off. - The days of the week should be in proper sequence starting from Monday and ending with Sunday. - The On/Off schedule requires 7 days for the schedule, one for each day of the week. There cannot be more or less than 7 days in the schedule. - Clusters cannot be scheduled to be off for the entire day for every day of the week. , enum: monday, tuesday, wednesday, thursday, friday, saturday, sunday, from: description: OnTimeBoundary corresponds to \"from\" and \"to\" time boundaries for when the cluster needs to be in the turned on (healthy) state on a day with \"custom\" scheduling timings. The time boundary should be according to the following rules:   - If the schedule is a non-custom day - with state `on` or `off`, it cannot contain a time boundary.   - If the schedule is a `custom` day -       - It should contain the `from` time boundary. If the `to` time boundary is not specified then the default value of 0 hour 0 minute is set and the cluster will be turned on for the entire day from the time set in `from` time boundary.       - Time boundary should have a valid `hour` value. The valid hour values are from 0 to 23 inclusive.       - Time boundary should have a valid `minute` value. The valid minute values are 0 and 30.       - The `from` time boundary should not be later than the `to` time boundary.       - If the `hour` and `minute` values are not provided for the time boundaries, it is set to a default value of 0 for both. (0 hour 0 minute) , type: object, properties: hour: type: integer, description: Hour of the time boundary., example: 21, default: 0, minute: type: integer, description: Minute of the time boundary., example: 30, default: 0, to: description: OnTimeBoundary corresponds to \"from\" and \"to\" time boundaries for when the cluster needs to be in the turned on (healthy) state on a day with \"custom\" scheduling timings. The time boundary should be according to the following rules:   - If the schedule is a non-custom day - with state `on` or `off`, it cannot contain a time boundary.   - If the schedule is a `custom` day -       - It should contain the `from` time boundary. If the `to` time boundary is not specified then the default value of 0 hour 0 minute is set and the cluster will be turned on for the entire day from the time set in `from` time boundary.       - Time boundary should have a valid `hour` value. The valid hour values are from 0 to 23 inclusive.       - Time boundary should have a valid `minute` value. The valid minute values are 0 and 30.       - The `from` time boundary should not be later than the `to` time boundary.       - If the `hour` and `minute` values are not provided for the time boundaries, it is set to a default value of 0 for both. (0 hour 0 minute) , type: object, properties: hour: type: integer, description: Hour of the time boundary., example: 21, default: 0, minute: type: integer, description: Minute of the time boundary., example: 30, default: 0, example: day: monday, state: custom, from: hour: 12, minute: 30, to: hour: 14, minute: 30, day: tuesday, state: custom, from: hour: 12, minute: 30, to: hour: 14, minute: 30, day: wednesday, state: on, day: thursday, state: on, day: friday, state: custom, from: hour: 12, minute: 30, to: hour: 14, minute: 30, day: saturday, state: off, day: sunday, state: off",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "On/Off Schedule"
        ],
        "function": {
          "name": "delete_deleteonoffschedule",
          "description": "Deletes the cluster on/off schedule for the given cluster.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Organizations",
    "description": "Couchbase Capella uses an ordered hierarchy to help you keep all of your data organized and securely accessible.\nThe entity at the top of the hierarchy is called an organization.\nEverything you do in Capella, whether it's creating a cluster or managing billing, happens within the scope of an organization.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Organizations"
        ],
        "function": {
          "name": "get_getorganizationbyid",
          "description": "Fetches the details of an organization by ID.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Creator\n# - Organization Member\n# \n# To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Organizations"
        ],
        "function": {
          "name": "put_putorganizationconfiguration",
          "description": "Updates an existing organization configuration. Use this endpoint to add, update, and delete network subdomains.\n# \n# Subdomains:\n# - Can have a maximum of 30 alphanumeric characters.\n# - Must be a unique string and not already in use in another tenant or organization. Empty strings are allowed.\n# - Only affect new clusters. You cannot update existing clusters to include a new subdomain.\n# - Currently only supported for AWS clusters.\n# \n# In order to access this endpoint, the provided API key must have the following role:\n# - Organization Owner\n# \n# Subdomains are not automatically available. You must contact Couchbase support to enable this feature.\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: subdomain, properties: subdomain: type: string, description: The new name of the subdomain for the organization., example: abc, maxLength: 30, examples: UpdateSubdomain: value: subdomain: abc, DeleteSubdomain: value: subdomain: ",
                "type": "string"
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "If_Match": {
                "type": "string",
                "example": "12",
                "description": "A precondition header that specifies the entity tag of a resource."
              }
            },
            "required": [
              "organizationId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Organizations"
        ],
        "function": {
          "name": "get_listorganizations",
          "description": "Returns a list of all organizations the user has access to.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Creator\n# - Organization Member\n# \n# To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n# "
        }
      }
    ]
  },
  {
    "name": "Private Endpoint Service",
    "description": "Access your Capella cluster from your cloud provider's private network.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Private Endpoint Service"
        ],
        "function": {
          "name": "get_getprivateendpointservicestatus",
          "description": "Private endpoint service allows you to access your Capella cluster from your private network, using private endpoints.\n# \n# This endpoint determines if the endpoint service is enabled or disabled on your cluster.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#   - Organization Owner\n#   - Project Owner\n#   - Project Manager\n#   - Project Viewer\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Private Endpoint Service"
        ],
        "function": {
          "name": "post_enableprivateendpointservice",
          "description": "Enable private endpoint service on your cluster.\n# \n# Supporting infrastructure is deployed and it may take a few minutes for private endpoints to be available.\n# After it's enabled, you can create private endpoint in your network.  You can do this using the cloud provider's CLI.  For an example, use\n# the POST privateEndpointService/endpointCommand endpoint to get the command.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Manager\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Private Endpoint Service"
        ],
        "function": {
          "name": "delete_disableprivateendpointservice",
          "description": "Disable private endpoint service on your cluster.\n# \n# Supporting infrastructure is removed and it may take a few minutes before private endpoints is disabled.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Private Endpoint Service"
        ],
        "function": {
          "name": "get_listprivateendpoints",
          "description": "Returns a list of private endpoints associated with the endpoint service for your Capella cluster, along\n# with the endpoint state.  Each private endpoint connects a private network to the Capella cluster.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#   - Organization Owner\n#   - Project Owner\n#   - Project Manager\n#   - Project Creator\n#   - Project Viewer\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Private Endpoint Service"
        ],
        "function": {
          "name": "post_getprivateendpointcommand",
          "description": "Retrieve the command or script to be executed in order to create the private endpoint which will provides a private connection between the specified VPC and the specified Capella private endpoint service.  An example for AWS:\n# \n# ```\n# aws ec2 create-vpc-endpoint \\\n#   --vpc-id vpc-1234 \\\n#   --region us-east-1 \\\n#   --service-name com.amazonaws.vpce.us-east-1.vpce-svc-1234 \\\n#   --vpc-endpoint-type Interface \\\n#   --subnet-ids subnet-1234\n# ```\n# \n# An example for Azure:\n# \n# ```\n# az network private-endpoint create \\\n#   --connection-name connection-1 \\\n#   --name private-endpoint \\\n#   --private-connection-resource-id svc-1 \\\n#   --resource-group test-rg \\\n#   --subnet subnet-1 \\\n#   --group-id sites \\\n#   --vnet-name vnet-1\n# ```\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#   - Organization Owner\n#   - Project Owner\n#   - Project Manager\n#   - Project Viewer\n# \n#   To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: oneOf: type: object, required: vpcID, subnetIDs, properties: vpcID: type: string, minLength: 12, maxLength: 21, description: The ID of your virtual network, example: vpc-1234, subnetIDs: type: array, items: type: string, example: subnet-1234, type: object, required: resourceGroupName, virtualNetwork, properties: resourceGroupName: type: string, minLength: 1, maxLength: 90, description: The name of your resource group, example: test-rg, virtualNetwork: type: string, minLength: 2, maxLength: 64, description: The virtual network and subnet name, example: vnet-1/subnet-1, examples: PostAWSCommandRequest: value: vpcID: vpc-1234, subnetIDs: subnet-1234, PostAzureCommandRequest: value: resourceGroupName: test-rg, virtualNetwork: vnet-1/subnet-1",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Private Endpoint Service"
        ],
        "function": {
          "name": "post_acceptprivateendpoint",
          "description": "Accept a new private endpoint connection request so that it is associated with the endpoint service.  This means the private endpoint is available for use.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#   - Organization Owner\n#   - Project Owner\n#   - Project Manager\n# \n#   To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "endpointId": {
                "type": "string",
                "example": "vpce-1234",
                "description": "The VPC endpoint ID."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "endpointId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Private Endpoint Service"
        ],
        "function": {
          "name": "post_deleteprivateendpoint",
          "description": "Removes the private endpoint associated with the endpoint service.  This means the private endpoint is no\n# longer able to connect to the private endpoint service.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "endpointId": {
                "type": "string",
                "example": "vpce-1234",
                "description": "The VPC endpoint ID."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "endpointId"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Projects",
    "description": "Projects contain and allow access to Couchbase databases.\nProjects are used to organize and manage groups of Couchbase databases within organizations.\nAn organization can contain any number of projects, and a project can contain any number of databases.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Projects"
        ],
        "function": {
          "name": "post_postproject",
          "description": "Creates a new project under the organization.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Creator\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, properties: name: type: string, description: The name of the project (up to 128 characters)., maxLength: 128, example: My Project, description: type: string, description: A short description of the project (up to 256 characters)., maxLength: 256, example: My awesome project",
                "type": "string"
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Projects"
        ],
        "function": {
          "name": "get_listprojects",
          "description": "Lists all the projects under the organization.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **name**."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Projects"
        ],
        "function": {
          "name": "get_getprojectbyid",
          "description": "Fetches the details of the given project.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Projects"
        ],
        "function": {
          "name": "put_putproject",
          "description": "Update project name and or project description.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, properties: name: type: string, description: The new project name (up to 128 characters)., maxLength: 128, example: My-New-Project, description: type: string, description: The new project description (up to 256 characters)., maxLength: 256, example: The extended description of my awesome project.",
                "type": "string"
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "If_Match": {
                "type": "string",
                "example": "12",
                "description": "A precondition header that specifies the entity tag of a resource."
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Projects"
        ],
        "function": {
          "name": "delete_deleteprojectbyid",
          "description": "Deletes an existing project.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Query Indexes",
    "description": "Used to manage primary and secondary indexes on your Capella cluster.  You can CREATE/ALTER/DROP/BUILD indexes.\n\nIt is recommended to use deferred index builds, especially for larger indexes. When creating indexes in bulk, we do not recommend sending requests to create all of them at once. Instead, we strongly recommend creating indexes in batches of 100 or less.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Query Indexes"
        ],
        "function": {
          "name": "post_managequeryindexes",
          "description": "CREATE/DROP/ALTER/BUILD primary and secondary indexes.\n# \n# To learn more about indexes please refer to the [documentation](https://docs.couchbase.com/server/current/learn/services-and-indexes/indexes/indexing-and-query-perf.html).\n# \n# It is recommended to use deferred index builds, especially for larger indexes. \n# When creating indexes in bulk, we do not recommend sending requests to create all of them at once. \n# Instead, we strongly recommend creating indexes in batches of 100 or less.\n# \n# To access this endpoint the API key must have at least one of the following roles:\n#   - Organization Owner\n#   - Project Owner\n#   - Database Data Reader/Writer\n# \n# To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: definition, properties: definition: type: string, description: The index DDL statement.  This can be a CREATE/DROP/ALTER/BUILD statement.  Multiple delimited queries are not allowed.  It is recommended to use deferred index builds, especially for larger indexes. When creating indexes in bulk, we do not recommend sending requests to create all of them at once.  Instead, we strongly recommend creating indexes in batches of 100 or less. , example: create index idx1 on default(c0), examples: CreateIndexExample: value: definition: create index idx1 on `travel-sample`.inventory.route(airline, destinationairport, sourceairport) partition by hash(airline) where id in [1000,2000,3000], AlterIndexExample: value: definition: alter index idx1 on api.stats.latency with { \\\"action\\\": \\\"replica_count\\\", \\\"num_replica\\\": 2 }, DropIndexExample: value: definition: drop index idx1 on api.stats.latency, BuildIndexExample: value: definition: build index on api.stats.latency(idx10, idx11, idx12)",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Query Indexes"
        ],
        "function": {
          "name": "get_listindexdefinitions",
          "description": "Get index definitions in a keyspace.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#   - Organization Owner\n#   - Project Owner\n#   - Database Data Reader/Writer\n#   - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "bucket": {
                "type": "string",
                "example": "bucket=travel-sample",
                "description": "Specifies the bucket part of the key space. To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html). "
              },
              "collection": {
                "type": "string",
                "example": "collection=hotel",
                "description": "Specifies the collection part of the key space. If unspecified, this will be the default collection. To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html). "
              },
              "scope": {
                "type": "string",
                "example": "scope=inventory",
                "description": "Specifies the scope part of the key space. If unspecified, this will be the default scope. To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html). "
              }
            },
            "required": [
              "bucket",
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Query Indexes"
        ],
        "function": {
          "name": "get_indexdefinition",
          "description": "Get the index properties of a specified index in a keyspace.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#   - Organization Owner\n#   - Project Owner\n#   - Database Data Reader/Writer\n#   - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "indexName": {
                "type": "string",
                "example": "def_city",
                "description": "The name of the index."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "bucket": {
                "type": "string",
                "example": "bucket=travel-sample",
                "description": "Specifies the bucket part of the key space. To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html). "
              },
              "collection": {
                "type": "string",
                "example": "collection=hotel",
                "description": "Specifies the collection part of the key space. If unspecified, this will be the default collection. To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html). "
              },
              "scope": {
                "type": "string",
                "example": "scope=inventory",
                "description": "Specifies the scope part of the key space. If unspecified, this will be the default scope. To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html). "
              }
            },
            "required": [
              "bucket",
              "organizationId",
              "projectId",
              "clusterId",
              "indexName"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Query Indexes"
        ],
        "function": {
          "name": "get_indexbuildstatus",
          "description": "Monitor the build status of an index.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#   - Organization Owner\n#   - Project Owner\n#   - Database Data Reader/Writer\n#   - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "indexName": {
                "type": "string",
                "example": "def_city",
                "description": "The name of the index."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "bucket": {
                "type": "string",
                "example": "bucket=travel-sample",
                "description": "Specifies the bucket part of the key space. To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html). "
              },
              "collection": {
                "type": "string",
                "example": "collection=hotel",
                "description": "Specifies the collection part of the key space. If unspecified, this will be the default collection. To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html). "
              },
              "scope": {
                "type": "string",
                "example": "scope=inventory",
                "description": "Specifies the scope part of the key space. If unspecified, this will be the default scope. To learn more about scopes and collections, see [Buckets, Scopes, and Collections](https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html). "
              }
            },
            "required": [
              "bucket",
              "organizationId",
              "projectId",
              "clusterId",
              "indexName"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Sample Bucket",
    "description": "The sampleBucket endpoint lets users easily create a bucket filled with sample data.\nThis is a quick way for users to try out features and learn how things work with ready-to-use data.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Sample Bucket"
        ],
        "function": {
          "name": "post_postsamplebucket",
          "description": "Loads predefined sample data into a cluster by selecting from three available options:\n# \n# - travel-sample \n# - gamesim-sample\n# - beer-sample \n# \n# Upon a successful request, a new bucket is created within the cluster, and populated with the chosen sample data.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: name, properties: name: type: string, enum: travel-sample, gamesim-sample, beer-sample, description: The name of the sample dataset to be loaded. The name has to be one of the following sample datasets.   - travel-sample   - gamesim-sample  - beer-sample    , example: travel-sample",
                "type": "string"
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Sample Bucket"
        ],
        "function": {
          "name": "get_listsamplebuckets",
          "description": "Lists all the sample buckets under the organization.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Sample Bucket"
        ],
        "function": {
          "name": "get_getsamplebucketbyid",
          "description": "Fetches the configuration of the given bucket.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# - Project Viewer\n# - Database Data Reader/Writer\n# - Database Data Reader\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Sample Bucket"
        ],
        "function": {
          "name": "delete_deletesampledatabybucketid",
          "description": "Deletes an existing bucket which was loaded with sample data.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# - Project Manager\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "bucketId": {
                "type": "string",
                "example": "dGVzdA",
                "description": "The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name."
              },
              "clusterId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the cluster."
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "projectId",
              "clusterId",
              "bucketId"
            ]
          }
        }
      }
    ]
  },
  {
    "name": "Users",
    "description": "To access an organization, your Couchbase Capella user account must be added to it.\nAccounts are added to an organization using email invitations sent from Capella by a user with the Organization Owner organization role.\nAll organization users are given one or more organization roles that define what they can view and manage in their organization.\n",
    "functions": [
      {
        "type": "function",
        "tags": [
          "Users"
        ],
        "function": {
          "name": "post_postuser",
          "description": "Invites a new user under the organization.\n# \n# After making a REST API request, an invitation email is triggered and sent to the user.\n# Upon receiving the invitation email, the user is required to click on a provided URL, which will redirect them to a page with a user interface (UI) where they can set their username and password.\n# \n# The modification of any personal information related to a user can only be performed by the user through the UI.\n# Similarly, the user can solely conduct password updates through the UI.\n# \n# The \"caller\" possessing Organization Owner access rights retains the exclusive user creation capability.\n# They hold the authority to assign roles at the organization and project levels.\n# \n# At present, our support is limited to the resourceType of \"project\" exclusively.\n# \n# In order to access this endpoint, the provided API key must have the following role:\n# - Organization Owner\n# \n# To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: object, required: email, organizationRoles, properties: name: type: string, description: The name of the user., example: John, maxLength: 128, email: type: string, description: Email of the user., example: john.doe@example.com, organizationRoles: type: array, items: type: string, enum: organizationOwner, organizationMember, projectCreator, example: projectCreator, description: Organization roles assigned to the User.  To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html). , example: organizationOwner, resources: type: array, items: type: object, required: id, roles, properties: type: type: string, enum: project, default: project, example: project, description: Type of the resource. , id: type: string, format: uuid, example: ffffffff-aaaa-1414-eeee-000000000000, description: Id of the project. , roles: type: array, items: type: string, enum: projectOwner, projectManager, projectViewer, projectDataReaderWriter, projectDataReader, example: projectManager, description: Project Roles associated with the User.  To learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html). , default: , example: , examples: CreateOrganizationMember: value: name: John, email: john.doe@example.com, organizationRoles: organizationMember, resources: id: 550e8400-e29b-41d4-a716-446655440000, type: project, roles: projectViewer, id: 550e8400-e29b-41d4-a716-446655440000, type: project, roles: projectDataReaderWriter, description: At present, our support is limited to the resourceType of \"project\" exclusively. Furthermore, the role designation is solely related to roles at the project level., CreateOrganizationOwner: value: name: John, email: john.doe@example.com, organizationRoles: organizationOwner, description: We don't need to explicitly add the resources field if the user is an organizationOwner",
                "type": "string"
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Users"
        ],
        "function": {
          "name": "get_listusers",
          "description": "Lists all the users in the organization and filter on the basis of projectId.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Organization Member\n# - Project Creator\n# \n# The results are always limited by the role and scope of the caller's privileges.\n# \n# When retrieving a list of users through a GET request, if a user holds the organization owner role, the response will exclude project-level permissions for those users. This is because organization owners have full access to all resources within the organization, making project-level permissions irrelevant for them.\n# \n# To learn more about the roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html) and [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              },
              "projectId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the project."
              },
              "sortDirection": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "The order in which the items will be sorted."
              },
              "sortBy": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **id**, **name**, **email**, **status**, **inactive**."
              },
              "perPage": {
                "type": "integer",
                "description": "Sets the number of results you would like to have on each page."
              },
              "page": {
                "type": "integer",
                "description": "Sets the page you would like to view."
              }
            },
            "required": [
              "organizationId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Users"
        ],
        "function": {
          "name": "get_getuser",
          "description": "Fetches the details of the given user.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Organization Member\n# - Project Creator\n# \n# The results are always limited by the role and scope of the caller's privileges.\n# \n# When performing a GET request for a user with an organization owner role, the response will exclude project-level permissions for that user. This is because organization owners have access to all resources at the organization level, rendering project-level permissions unnecessary for them.\n# \n# To learn more about the roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html) and [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the control plane user."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "userId"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Users"
        ],
        "function": {
          "name": "patch_patchuser",
          "description": "Updates organizationRole and resources of the user.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n# - Organization Owner\n# - Project Owner\n# \n# An Organization Owner API key can be utilized to update organizational-level roles and project-level roles for all projects within the organization.\n# \n# The Project Owner API key allows for updating project-level roles, solely within the projects where the API key holds the Project Owner role.\n# \n# The modification of any personal information related to a user, such as password updates, can only be performed by the respective user through the user interface (UI).\n# \n# The results are always limited by the role and scope of the caller's privileges.\n# To learn more about the roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html) and [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "body": {
                "description": "application/json: schema: type: array, items: type: object, required: op, path, properties: op: type: string, description: Type of operation., enum: add, remove, path: type: string, example: /organizationRoles, description: Path of resource that needs to be updated.  Organization Roles: `/organizationRoles`  Resources: `/resources/{resourceId}`  Resource Roles: `/resources/{resourceId}/roles` , value: oneOf: type: array, items: type: string, enum: organizationOwner, organizationMember, projectCreator, example: projectCreator, description: Organization roles assigned to the User.  To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html). , type: array, items: type: string, enum: projectOwner, projectManager, projectViewer, projectDataReaderWriter, projectDataReader, example: projectManager, description: Project Roles associated with the User.  To learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html). , type: object, required: id, roles, properties: type: type: string, enum: project, default: project, example: project, description: Type of the resource. , id: type: string, format: uuid, example: ffffffff-aaaa-1414-eeee-000000000000, description: Id of the project. , roles: type: array, items: type: string, enum: projectOwner, projectManager, projectViewer, projectDataReaderWriter, projectDataReader, example: projectManager, description: Project Roles associated with the User.  To learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html). , examples: addOrganizationRole: value: op: add, path: /organizationRoles, value: projectCreator, removeOrganizationRole: value: op: remove, path: /organizationRoles, value: projectCreator, addResource: value: op: add, path: /resources/{resourceId}, value: id: ffffffff-aaaa-1414-eeee-111111111111, type: project, roles: projectDataReaderWriter, removeResourceRole: value: op: remove, path: /resources/{resourceId}/roles, value: projectViewer, addResourceRole: value: op: add, path: /resources/{resourceId}/roles, value: projectManager, removeResource: value: op: remove, path: /resources/{resourceId}, performMultipleOperations: value: op: add, path: /organizationRoles, value: projectCreator, op: remove, path: /resources/{resourceId}",
                "type": "string"
              },
              "userId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the control plane user."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "userId",
              "body"
            ]
          }
        }
      },
      {
        "type": "function",
        "tags": [
          "Users"
        ],
        "function": {
          "name": "delete_deleteuser",
          "description": "Removes user from the organization.\n# \n# In order to access this endpoint, the provided API key must have the following role:\n# - Organization Owner\n# \n# To learn more about the roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n# ",
          "parameters": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the control plane user."
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "ffffffff-aaaa-1414-eeee-000000000000",
                "description": "The GUID4 ID of the organization. "
              }
            },
            "required": [
              "organizationId",
              "userId"
            ]
          }
        }
      }
    ]
  }
]