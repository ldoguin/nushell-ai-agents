[
  {
    "type": "function",
    "tags": [
      "Events"
    ],
    "function": {
      "name": "get_list_events",
      "description": "Lists all the events information under a organization.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Creator\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader\n#  - Database Data Reader/Writer\n# \n# The results are always limited by the role and scope of the caller's privileges.\n# Currently, only the `tags` filter is multi-valued; all other filters are single-valued.\n# \n# By default, `to` is set to the request time, and `from` is set to 24 hours before the\n# request time. If 'to' is set and 'from' is not set, then 'from' is set to 24 hours\n# before 'to'.\n# \n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
      "parameters": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000",
            "description": "The GUID4 ID of the organization. "
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "example": "2024-04-25T12:53:59.000Z",
            "description": "End datetime in the last 24 hours, RFC3339 format. Defaults to Now."
          },
          "from": {
            "type": "string",
            "format": "date-time",
            "example": "2024-04-24T12:53:59.000Z",
            "description": "Start date in  RFC3339 format. If not provided, events starting from last 24 hours are returned."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "availability",
                "billing",
                "maintenance",
                "performance",
                "security",
                "alert"
              ]
            },
            "description": "Filter by tags. Default is to return events corresponding to all supported tag. Tags are **availability**, **billing**, **maintenance**, **performance**, **security**, **alert**."
          },
          "severityLevels": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "info",
                "warning",
                "critical"
              ]
            },
            "description": "Filter by severity levels. Default is to return events corresponding to all supported severity levels."
          },
          "projectIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "example": "ffffffff-aaaa-1414-eeee-000000000000"
            },
            "description": "The GUID4 ID of projects to filter on. By default, events corresponding to all projects are returned"
          },
          "clusterIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "example": "ffffffff-aaaa-1414-eeee-000000000000"
            },
            "description": "List of clusterIds to filter on. By default events corresponding to all clusters are returned. "
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "example": "ffffffff-aaaa-1414-eeee-000000000000"
            },
            "description": "Filter by user UUID. Default is to return events corresponding to all users."
          },
          "sortDirection": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The order in which the items will be sorted."
          },
          "sortBy": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "timestamp",
                "severity"
              ]
            },
            "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **severity**, **timestamp**."
          },
          "perPage": {
            "type": "integer",
            "description": "Sets the number of results you would like to have on each page."
          },
          "page": {
            "type": "integer",
            "description": "Sets the page you would like to view."
          }
        },
        "required": [
          "organizationId"
        ]
      }
    }
  },
  {
    "type": "function",
    "tags": [
      "Events"
    ],
    "function": {
      "name": "get_get_event",
      "description": "Fetches the details of an event by ID.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Creator\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader\n#  - Database Data Reader/Writer\n# \n# The results are always limited by the role and scope of the caller's privileges.\n# \n# To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n# ",
      "parameters": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000",
            "description": "The event ID of the event."
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000",
            "description": "The GUID4 ID of the organization. "
          }
        },
        "required": [
          "organizationId",
          "eventId"
        ]
      }
    }
  },
  {
    "type": "function",
    "tags": [
      "Events"
    ],
    "function": {
      "name": "get_list_events",
      "description": "Lists all the events information under a project.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader\n#  - Database Data Reader/Writer\n# \n# The results are always limited by the role and scope of the caller's privileges.\n# Currently, only the `tags` filter is multi-valued; all other filters are single-valued.\n# \n# By default, `to` is set to the request time, and `from` is set to 24 hours before the\n# request time. If 'to' is set and 'from' is not set, then 'from' is set to 24 hours\n# before 'to'.\n# \n# To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).\n# ",
      "parameters": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000",
            "description": "The GUID4 ID of the project."
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000",
            "description": "The GUID4 ID of the organization. "
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "example": "2024-04-25T12:53:59.000Z",
            "description": "End datetime in the last 24 hours, RFC3339 format. Defaults to Now."
          },
          "from": {
            "type": "string",
            "format": "date-time",
            "example": "2024-04-24T12:53:59.000Z",
            "description": "Start date in  RFC3339 format. If not provided, events starting from last 24 hours are returned."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "availability",
                "billing",
                "maintenance",
                "performance",
                "security",
                "alert"
              ]
            },
            "description": "Filter by tags. Default is to return events corresponding to all supported tag. Tags are **availability**, **billing**, **maintenance**, **performance**, **security**, **alert**."
          },
          "severityLevels": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "info",
                "warning",
                "critical"
              ]
            },
            "description": "Filter by severity levels. Default is to return events corresponding to all supported severity levels."
          },
          "clusterIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "example": "ffffffff-aaaa-1414-eeee-000000000000"
            },
            "description": "List of clusterIds to filter on. By default events corresponding to all clusters are returned. "
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "example": "ffffffff-aaaa-1414-eeee-000000000000"
            },
            "description": "Filter by user UUID. Default is to return events corresponding to all users."
          },
          "sortDirection": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The order in which the items will be sorted."
          },
          "sortBy": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "timestamp",
                "severity"
              ]
            },
            "description": " Sets the order of how you would like to sort the results and the key you would like to order by. Valid fields to sort the results are: **severity**, **timestamp**."
          },
          "perPage": {
            "type": "integer",
            "description": "Sets the number of results you would like to have on each page."
          },
          "page": {
            "type": "integer",
            "description": "Sets the page you would like to view."
          }
        },
        "required": [
          "organizationId",
          "projectId"
        ]
      }
    }
  },
  {
    "type": "function",
    "tags": [
      "Events"
    ],
    "function": {
      "name": "get_get_project_event",
      "description": "Fetches the details of an event by ID within a project.\n# \n# In order to access this endpoint, the provided API key must have at least one of the following roles:\n#  - Organization Owner\n#  - Project Owner\n#  - Project Manager\n#  - Project Viewer\n#  - Database Data Reader\n#  - Database Data Reader/Writer\n# \n# The results are always limited by the role and scope of the caller's privileges.\n# \n# To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).\n# ",
      "parameters": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000",
            "description": "The event ID of the event."
          },
          "projectId": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000",
            "description": "The GUID4 ID of the project."
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "example": "ffffffff-aaaa-1414-eeee-000000000000",
            "description": "The GUID4 ID of the organization. "
          }
        },
        "required": [
          "organizationId",
          "projectId",
          "eventId"
        ]
      }
    }
  }
]